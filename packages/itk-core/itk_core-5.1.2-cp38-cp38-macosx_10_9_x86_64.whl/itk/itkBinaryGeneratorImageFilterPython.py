# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageFilterBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryGeneratorImageFilterPython
else:
    import _itkBinaryGeneratorImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryGeneratorImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryGeneratorImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkRGBAPixelPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython

def itkBinaryGeneratorImageFilterICF2ICF2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2ICF2ICF2.New()

class itkBinaryGeneratorImageFilterICF2ICF2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2ICF2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2ICF2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2ICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2ICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2ICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2ICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2ICF2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2ICF2ICF2)
itkBinaryGeneratorImageFilterICF2ICF2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2ICF2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ICF2ICF2_cast


def itkBinaryGeneratorImageFilterICF2ID2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2ID2ICF2.New()

class itkBinaryGeneratorImageFilterICF2ID2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2ID2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2ID2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2ID2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2ID2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2ID2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2ID2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2ID2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2ID2ICF2)
itkBinaryGeneratorImageFilterICF2ID2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2ID2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ID2ICF2_cast


def itkBinaryGeneratorImageFilterICF2IF2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2IF2ICF2.New()

class itkBinaryGeneratorImageFilterICF2IF2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2IF2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2IF2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2IF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2IF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2IF2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2IF2ICF2)
itkBinaryGeneratorImageFilterICF2IF2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2IF2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IF2ICF2_cast


def itkBinaryGeneratorImageFilterICF2ISS2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2ISS2ICF2.New()

class itkBinaryGeneratorImageFilterICF2ISS2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2ISS2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2ISS2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2ISS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2ISS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2ISS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2ISS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2ISS2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2ISS2ICF2)
itkBinaryGeneratorImageFilterICF2ISS2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2ISS2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2ISS2ICF2_cast


def itkBinaryGeneratorImageFilterICF2IUC2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2IUC2ICF2.New()

class itkBinaryGeneratorImageFilterICF2IUC2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2IUC2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2IUC2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2IUC2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2IUC2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2IUC2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2IUC2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2IUC2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2IUC2ICF2)
itkBinaryGeneratorImageFilterICF2IUC2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2IUC2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUC2ICF2_cast


def itkBinaryGeneratorImageFilterICF2IUS2ICF2_New():
    return itkBinaryGeneratorImageFilterICF2IUS2ICF2.New()

class itkBinaryGeneratorImageFilterICF2IUS2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF2IUS2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF2IUS2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterICF2IUS2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF2IUS2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF2IUS2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF2IUS2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF2IUS2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_swigregister(itkBinaryGeneratorImageFilterICF2IUS2ICF2)
itkBinaryGeneratorImageFilterICF2IUS2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2___New_orig__
itkBinaryGeneratorImageFilterICF2IUS2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF2IUS2ICF2_cast


def itkBinaryGeneratorImageFilterICF3ICF3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3ICF3ICF3.New()

class itkBinaryGeneratorImageFilterICF3ICF3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3ICF3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3ICF3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3ICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3ICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3ICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3ICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3ICF3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3ICF3ICF3)
itkBinaryGeneratorImageFilterICF3ICF3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3ICF3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ICF3ICF3_cast


def itkBinaryGeneratorImageFilterICF3ID3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3ID3ICF3.New()

class itkBinaryGeneratorImageFilterICF3ID3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3ID3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3ID3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3ID3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3ID3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3ID3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3ID3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3ID3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3ID3ICF3)
itkBinaryGeneratorImageFilterICF3ID3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3ID3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ID3ICF3_cast


def itkBinaryGeneratorImageFilterICF3IF3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3IF3ICF3.New()

class itkBinaryGeneratorImageFilterICF3IF3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3IF3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3IF3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3IF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3IF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3IF3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3IF3ICF3)
itkBinaryGeneratorImageFilterICF3IF3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3IF3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IF3ICF3_cast


def itkBinaryGeneratorImageFilterICF3ISS3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3ISS3ICF3.New()

class itkBinaryGeneratorImageFilterICF3ISS3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3ISS3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3ISS3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3ISS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3ISS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3ISS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3ISS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3ISS3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3ISS3ICF3)
itkBinaryGeneratorImageFilterICF3ISS3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3ISS3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3ISS3ICF3_cast


def itkBinaryGeneratorImageFilterICF3IUC3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3IUC3ICF3.New()

class itkBinaryGeneratorImageFilterICF3IUC3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3IUC3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3IUC3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3IUC3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3IUC3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3IUC3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3IUC3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3IUC3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3IUC3ICF3)
itkBinaryGeneratorImageFilterICF3IUC3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3IUC3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUC3ICF3_cast


def itkBinaryGeneratorImageFilterICF3IUS3ICF3_New():
    return itkBinaryGeneratorImageFilterICF3IUS3ICF3.New()

class itkBinaryGeneratorImageFilterICF3IUS3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICF3IUS3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICF3IUS3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterICF3IUS3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICF3IUS3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICF3IUS3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICF3IUS3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICF3IUS3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_swigregister(itkBinaryGeneratorImageFilterICF3IUS3ICF3)
itkBinaryGeneratorImageFilterICF3IUS3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3___New_orig__
itkBinaryGeneratorImageFilterICF3IUS3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICF3IUS3ICF3_cast


def itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_New():
    return itkBinaryGeneratorImageFilterICVF22ISS2ICVF22.New()

class itkBinaryGeneratorImageFilterICVF22ISS2ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF22ISS2ICVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF22ISS2ICVF22

        Create a new object of the class itkBinaryGeneratorImageFilterICVF22ISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF22ISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF22ISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF22ISS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF22ISS2ICVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_swigregister(itkBinaryGeneratorImageFilterICVF22ISS2ICVF22)
itkBinaryGeneratorImageFilterICVF22ISS2ICVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22___New_orig__
itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22ISS2ICVF22_cast


def itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_New():
    return itkBinaryGeneratorImageFilterICVF22IUC2ICVF22.New()

class itkBinaryGeneratorImageFilterICVF22IUC2ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF22IUC2ICVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF22IUC2ICVF22

        Create a new object of the class itkBinaryGeneratorImageFilterICVF22IUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF22IUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF22IUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF22IUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF22IUC2ICVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_swigregister(itkBinaryGeneratorImageFilterICVF22IUC2ICVF22)
itkBinaryGeneratorImageFilterICVF22IUC2ICVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22___New_orig__
itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUC2ICVF22_cast


def itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_New():
    return itkBinaryGeneratorImageFilterICVF22IUS2ICVF22.New()

class itkBinaryGeneratorImageFilterICVF22IUS2ICVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF22ICVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF22IUS2ICVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF22IUS2ICVF22

        Create a new object of the class itkBinaryGeneratorImageFilterICVF22IUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF22IUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF22IUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF22IUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF22IUS2ICVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_swigregister(itkBinaryGeneratorImageFilterICVF22IUS2ICVF22)
itkBinaryGeneratorImageFilterICVF22IUS2ICVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22___New_orig__
itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF22IUS2ICVF22_cast


def itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_New():
    return itkBinaryGeneratorImageFilterICVF23ISS3ICVF23.New()

class itkBinaryGeneratorImageFilterICVF23ISS3ICVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF23ICVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF23ISS3ICVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF23ISS3ICVF23

        Create a new object of the class itkBinaryGeneratorImageFilterICVF23ISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF23ISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF23ISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF23ISS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF23ISS3ICVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_swigregister(itkBinaryGeneratorImageFilterICVF23ISS3ICVF23)
itkBinaryGeneratorImageFilterICVF23ISS3ICVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23___New_orig__
itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23ISS3ICVF23_cast


def itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_New():
    return itkBinaryGeneratorImageFilterICVF23IUC3ICVF23.New()

class itkBinaryGeneratorImageFilterICVF23IUC3ICVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF23ICVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF23IUC3ICVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF23IUC3ICVF23

        Create a new object of the class itkBinaryGeneratorImageFilterICVF23IUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF23IUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF23IUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF23IUC3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF23IUC3ICVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_swigregister(itkBinaryGeneratorImageFilterICVF23IUC3ICVF23)
itkBinaryGeneratorImageFilterICVF23IUC3ICVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23___New_orig__
itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUC3ICVF23_cast


def itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_New():
    return itkBinaryGeneratorImageFilterICVF23IUS3ICVF23.New()

class itkBinaryGeneratorImageFilterICVF23IUS3ICVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF23ICVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF23IUS3ICVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF23IUS3ICVF23

        Create a new object of the class itkBinaryGeneratorImageFilterICVF23IUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF23IUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF23IUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF23IUS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF23IUS3ICVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_swigregister(itkBinaryGeneratorImageFilterICVF23IUS3ICVF23)
itkBinaryGeneratorImageFilterICVF23IUS3ICVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23___New_orig__
itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF23IUS3ICVF23_cast


def itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_New():
    return itkBinaryGeneratorImageFilterICVF32ISS2ICVF32.New()

class itkBinaryGeneratorImageFilterICVF32ISS2ICVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF32ICVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF32ISS2ICVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF32ISS2ICVF32

        Create a new object of the class itkBinaryGeneratorImageFilterICVF32ISS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF32ISS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF32ISS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF32ISS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF32ISS2ICVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_swigregister(itkBinaryGeneratorImageFilterICVF32ISS2ICVF32)
itkBinaryGeneratorImageFilterICVF32ISS2ICVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32___New_orig__
itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32ISS2ICVF32_cast


def itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_New():
    return itkBinaryGeneratorImageFilterICVF32IUC2ICVF32.New()

class itkBinaryGeneratorImageFilterICVF32IUC2ICVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF32ICVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF32IUC2ICVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF32IUC2ICVF32

        Create a new object of the class itkBinaryGeneratorImageFilterICVF32IUC2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF32IUC2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF32IUC2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF32IUC2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF32IUC2ICVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_swigregister(itkBinaryGeneratorImageFilterICVF32IUC2ICVF32)
itkBinaryGeneratorImageFilterICVF32IUC2ICVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32___New_orig__
itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUC2ICVF32_cast


def itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_New():
    return itkBinaryGeneratorImageFilterICVF32IUS2ICVF32.New()

class itkBinaryGeneratorImageFilterICVF32IUS2ICVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF32ICVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF32IUS2ICVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF32IUS2ICVF32

        Create a new object of the class itkBinaryGeneratorImageFilterICVF32IUS2ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF32IUS2ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF32IUS2ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF32IUS2ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF32IUS2ICVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_swigregister(itkBinaryGeneratorImageFilterICVF32IUS2ICVF32)
itkBinaryGeneratorImageFilterICVF32IUS2ICVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32___New_orig__
itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF32IUS2ICVF32_cast


def itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_New():
    return itkBinaryGeneratorImageFilterICVF33ISS3ICVF33.New()

class itkBinaryGeneratorImageFilterICVF33ISS3ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF33ISS3ICVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF33ISS3ICVF33

        Create a new object of the class itkBinaryGeneratorImageFilterICVF33ISS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF33ISS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF33ISS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF33ISS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF33ISS3ICVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_swigregister(itkBinaryGeneratorImageFilterICVF33ISS3ICVF33)
itkBinaryGeneratorImageFilterICVF33ISS3ICVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33___New_orig__
itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33ISS3ICVF33_cast


def itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_New():
    return itkBinaryGeneratorImageFilterICVF33IUC3ICVF33.New()

class itkBinaryGeneratorImageFilterICVF33IUC3ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF33IUC3ICVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF33IUC3ICVF33

        Create a new object of the class itkBinaryGeneratorImageFilterICVF33IUC3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF33IUC3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF33IUC3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF33IUC3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF33IUC3ICVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_swigregister(itkBinaryGeneratorImageFilterICVF33IUC3ICVF33)
itkBinaryGeneratorImageFilterICVF33IUC3ICVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33___New_orig__
itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUC3ICVF33_cast


def itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_New():
    return itkBinaryGeneratorImageFilterICVF33IUS3ICVF33.New()

class itkBinaryGeneratorImageFilterICVF33IUS3ICVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF33ICVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF33IUS3ICVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF33IUS3ICVF33

        Create a new object of the class itkBinaryGeneratorImageFilterICVF33IUS3ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF33IUS3ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF33IUS3ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF33IUS3ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF33IUS3ICVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_swigregister(itkBinaryGeneratorImageFilterICVF33IUS3ICVF33)
itkBinaryGeneratorImageFilterICVF33IUS3ICVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33___New_orig__
itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF33IUS3ICVF33_cast


def itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_New():
    return itkBinaryGeneratorImageFilterICVF42ISS2ICVF42.New()

class itkBinaryGeneratorImageFilterICVF42ISS2ICVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF42ICVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF42ISS2ICVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF42ISS2ICVF42

        Create a new object of the class itkBinaryGeneratorImageFilterICVF42ISS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF42ISS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF42ISS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF42ISS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF42ISS2ICVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_swigregister(itkBinaryGeneratorImageFilterICVF42ISS2ICVF42)
itkBinaryGeneratorImageFilterICVF42ISS2ICVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42___New_orig__
itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42ISS2ICVF42_cast


def itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_New():
    return itkBinaryGeneratorImageFilterICVF42IUC2ICVF42.New()

class itkBinaryGeneratorImageFilterICVF42IUC2ICVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF42ICVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF42IUC2ICVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF42IUC2ICVF42

        Create a new object of the class itkBinaryGeneratorImageFilterICVF42IUC2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF42IUC2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF42IUC2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF42IUC2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF42IUC2ICVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_swigregister(itkBinaryGeneratorImageFilterICVF42IUC2ICVF42)
itkBinaryGeneratorImageFilterICVF42IUC2ICVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42___New_orig__
itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUC2ICVF42_cast


def itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_New():
    return itkBinaryGeneratorImageFilterICVF42IUS2ICVF42.New()

class itkBinaryGeneratorImageFilterICVF42IUS2ICVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF42ICVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF42IUS2ICVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF42IUS2ICVF42

        Create a new object of the class itkBinaryGeneratorImageFilterICVF42IUS2ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF42IUS2ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF42IUS2ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF42IUS2ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF42IUS2ICVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_swigregister(itkBinaryGeneratorImageFilterICVF42IUS2ICVF42)
itkBinaryGeneratorImageFilterICVF42IUS2ICVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42___New_orig__
itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF42IUS2ICVF42_cast


def itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_New():
    return itkBinaryGeneratorImageFilterICVF43ISS3ICVF43.New()

class itkBinaryGeneratorImageFilterICVF43ISS3ICVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF43ICVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF43ISS3ICVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF43ISS3ICVF43

        Create a new object of the class itkBinaryGeneratorImageFilterICVF43ISS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF43ISS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF43ISS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF43ISS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF43ISS3ICVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_swigregister(itkBinaryGeneratorImageFilterICVF43ISS3ICVF43)
itkBinaryGeneratorImageFilterICVF43ISS3ICVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43___New_orig__
itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43ISS3ICVF43_cast


def itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_New():
    return itkBinaryGeneratorImageFilterICVF43IUC3ICVF43.New()

class itkBinaryGeneratorImageFilterICVF43IUC3ICVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF43ICVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF43IUC3ICVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF43IUC3ICVF43

        Create a new object of the class itkBinaryGeneratorImageFilterICVF43IUC3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF43IUC3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF43IUC3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF43IUC3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF43IUC3ICVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_swigregister(itkBinaryGeneratorImageFilterICVF43IUC3ICVF43)
itkBinaryGeneratorImageFilterICVF43IUC3ICVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43___New_orig__
itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUC3ICVF43_cast


def itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_New():
    return itkBinaryGeneratorImageFilterICVF43IUS3ICVF43.New()

class itkBinaryGeneratorImageFilterICVF43IUS3ICVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterICVF43ICVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterICVF43IUS3ICVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterICVF43IUS3ICVF43

        Create a new object of the class itkBinaryGeneratorImageFilterICVF43IUS3ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterICVF43IUS3ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterICVF43IUS3ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterICVF43IUS3ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterICVF43IUS3ICVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_swigregister(itkBinaryGeneratorImageFilterICVF43IUS3ICVF43)
itkBinaryGeneratorImageFilterICVF43IUS3ICVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43___New_orig__
itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterICVF43IUS3ICVF43_cast


def itkBinaryGeneratorImageFilterID2ID2ICF2_New():
    return itkBinaryGeneratorImageFilterID2ID2ICF2.New()

class itkBinaryGeneratorImageFilterID2ID2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_swigregister(itkBinaryGeneratorImageFilterID2ID2ICF2)
itkBinaryGeneratorImageFilterID2ID2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2___New_orig__
itkBinaryGeneratorImageFilterID2ID2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ICF2_cast


def itkBinaryGeneratorImageFilterID2ID2ID2_New():
    return itkBinaryGeneratorImageFilterID2ID2ID2.New()

class itkBinaryGeneratorImageFilterID2ID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_swigregister(itkBinaryGeneratorImageFilterID2ID2ID2)
itkBinaryGeneratorImageFilterID2ID2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2___New_orig__
itkBinaryGeneratorImageFilterID2ID2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ID2_cast


def itkBinaryGeneratorImageFilterID2ID2IF2_New():
    return itkBinaryGeneratorImageFilterID2ID2IF2.New()

class itkBinaryGeneratorImageFilterID2ID2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_swigregister(itkBinaryGeneratorImageFilterID2ID2IF2)
itkBinaryGeneratorImageFilterID2ID2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2___New_orig__
itkBinaryGeneratorImageFilterID2ID2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IF2_cast


def itkBinaryGeneratorImageFilterID2ID2ISS2_New():
    return itkBinaryGeneratorImageFilterID2ID2ISS2.New()

class itkBinaryGeneratorImageFilterID2ID2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_swigregister(itkBinaryGeneratorImageFilterID2ID2ISS2)
itkBinaryGeneratorImageFilterID2ID2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2___New_orig__
itkBinaryGeneratorImageFilterID2ID2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2ISS2_cast


def itkBinaryGeneratorImageFilterID2ID2IUC2_New():
    return itkBinaryGeneratorImageFilterID2ID2IUC2.New()

class itkBinaryGeneratorImageFilterID2ID2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_swigregister(itkBinaryGeneratorImageFilterID2ID2IUC2)
itkBinaryGeneratorImageFilterID2ID2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2___New_orig__
itkBinaryGeneratorImageFilterID2ID2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUC2_cast


def itkBinaryGeneratorImageFilterID2ID2IUS2_New():
    return itkBinaryGeneratorImageFilterID2ID2IUS2.New()

class itkBinaryGeneratorImageFilterID2ID2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ID2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ID2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ID2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_swigregister(itkBinaryGeneratorImageFilterID2ID2IUS2)
itkBinaryGeneratorImageFilterID2ID2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2___New_orig__
itkBinaryGeneratorImageFilterID2ID2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ID2IUS2_cast


def itkBinaryGeneratorImageFilterID2IF2ID2_New():
    return itkBinaryGeneratorImageFilterID2IF2ID2.New()

class itkBinaryGeneratorImageFilterID2IF2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IF2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IF2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IF2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_swigregister(itkBinaryGeneratorImageFilterID2IF2ID2)
itkBinaryGeneratorImageFilterID2IF2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2___New_orig__
itkBinaryGeneratorImageFilterID2IF2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ID2_cast


def itkBinaryGeneratorImageFilterID2IF2IF2_New():
    return itkBinaryGeneratorImageFilterID2IF2IF2.New()

class itkBinaryGeneratorImageFilterID2IF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IF2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IF2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IF2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_swigregister(itkBinaryGeneratorImageFilterID2IF2IF2)
itkBinaryGeneratorImageFilterID2IF2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2___New_orig__
itkBinaryGeneratorImageFilterID2IF2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IF2_cast


def itkBinaryGeneratorImageFilterID2IF2ISS2_New():
    return itkBinaryGeneratorImageFilterID2IF2ISS2.New()

class itkBinaryGeneratorImageFilterID2IF2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IF2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IF2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IF2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_swigregister(itkBinaryGeneratorImageFilterID2IF2ISS2)
itkBinaryGeneratorImageFilterID2IF2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2___New_orig__
itkBinaryGeneratorImageFilterID2IF2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2ISS2_cast


def itkBinaryGeneratorImageFilterID2IF2IUC2_New():
    return itkBinaryGeneratorImageFilterID2IF2IUC2.New()

class itkBinaryGeneratorImageFilterID2IF2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IF2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IF2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IF2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_swigregister(itkBinaryGeneratorImageFilterID2IF2IUC2)
itkBinaryGeneratorImageFilterID2IF2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2___New_orig__
itkBinaryGeneratorImageFilterID2IF2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUC2_cast


def itkBinaryGeneratorImageFilterID2IF2IUS2_New():
    return itkBinaryGeneratorImageFilterID2IF2IUS2.New()

class itkBinaryGeneratorImageFilterID2IF2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IF2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IF2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IF2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_swigregister(itkBinaryGeneratorImageFilterID2IF2IUS2)
itkBinaryGeneratorImageFilterID2IF2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2___New_orig__
itkBinaryGeneratorImageFilterID2IF2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IF2IUS2_cast


def itkBinaryGeneratorImageFilterID2ISS2ID2_New():
    return itkBinaryGeneratorImageFilterID2ISS2ID2.New()

class itkBinaryGeneratorImageFilterID2ISS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ISS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ISS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ISS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_swigregister(itkBinaryGeneratorImageFilterID2ISS2ID2)
itkBinaryGeneratorImageFilterID2ISS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2___New_orig__
itkBinaryGeneratorImageFilterID2ISS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ID2_cast


def itkBinaryGeneratorImageFilterID2ISS2IF2_New():
    return itkBinaryGeneratorImageFilterID2ISS2IF2.New()

class itkBinaryGeneratorImageFilterID2ISS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ISS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ISS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ISS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_swigregister(itkBinaryGeneratorImageFilterID2ISS2IF2)
itkBinaryGeneratorImageFilterID2ISS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2___New_orig__
itkBinaryGeneratorImageFilterID2ISS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IF2_cast


def itkBinaryGeneratorImageFilterID2ISS2ISS2_New():
    return itkBinaryGeneratorImageFilterID2ISS2ISS2.New()

class itkBinaryGeneratorImageFilterID2ISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ISS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ISS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ISS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_swigregister(itkBinaryGeneratorImageFilterID2ISS2ISS2)
itkBinaryGeneratorImageFilterID2ISS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2___New_orig__
itkBinaryGeneratorImageFilterID2ISS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2ISS2_cast


def itkBinaryGeneratorImageFilterID2ISS2IUC2_New():
    return itkBinaryGeneratorImageFilterID2ISS2IUC2.New()

class itkBinaryGeneratorImageFilterID2ISS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ISS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ISS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ISS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_swigregister(itkBinaryGeneratorImageFilterID2ISS2IUC2)
itkBinaryGeneratorImageFilterID2ISS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2___New_orig__
itkBinaryGeneratorImageFilterID2ISS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUC2_cast


def itkBinaryGeneratorImageFilterID2ISS2IUS2_New():
    return itkBinaryGeneratorImageFilterID2ISS2IUS2.New()

class itkBinaryGeneratorImageFilterID2ISS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2ISS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2ISS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2ISS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_swigregister(itkBinaryGeneratorImageFilterID2ISS2IUS2)
itkBinaryGeneratorImageFilterID2ISS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2___New_orig__
itkBinaryGeneratorImageFilterID2ISS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2ISS2IUS2_cast


def itkBinaryGeneratorImageFilterID2IUC2ID2_New():
    return itkBinaryGeneratorImageFilterID2IUC2ID2.New()

class itkBinaryGeneratorImageFilterID2IUC2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUC2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUC2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUC2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_swigregister(itkBinaryGeneratorImageFilterID2IUC2ID2)
itkBinaryGeneratorImageFilterID2IUC2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2___New_orig__
itkBinaryGeneratorImageFilterID2IUC2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ID2_cast


def itkBinaryGeneratorImageFilterID2IUC2IF2_New():
    return itkBinaryGeneratorImageFilterID2IUC2IF2.New()

class itkBinaryGeneratorImageFilterID2IUC2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUC2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUC2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUC2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_swigregister(itkBinaryGeneratorImageFilterID2IUC2IF2)
itkBinaryGeneratorImageFilterID2IUC2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2___New_orig__
itkBinaryGeneratorImageFilterID2IUC2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IF2_cast


def itkBinaryGeneratorImageFilterID2IUC2ISS2_New():
    return itkBinaryGeneratorImageFilterID2IUC2ISS2.New()

class itkBinaryGeneratorImageFilterID2IUC2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUC2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUC2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUC2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_swigregister(itkBinaryGeneratorImageFilterID2IUC2ISS2)
itkBinaryGeneratorImageFilterID2IUC2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2___New_orig__
itkBinaryGeneratorImageFilterID2IUC2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2ISS2_cast


def itkBinaryGeneratorImageFilterID2IUC2IUC2_New():
    return itkBinaryGeneratorImageFilterID2IUC2IUC2.New()

class itkBinaryGeneratorImageFilterID2IUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUC2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUC2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUC2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_swigregister(itkBinaryGeneratorImageFilterID2IUC2IUC2)
itkBinaryGeneratorImageFilterID2IUC2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2___New_orig__
itkBinaryGeneratorImageFilterID2IUC2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUC2_cast


def itkBinaryGeneratorImageFilterID2IUC2IUS2_New():
    return itkBinaryGeneratorImageFilterID2IUC2IUS2.New()

class itkBinaryGeneratorImageFilterID2IUC2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUC2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUC2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUC2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_swigregister(itkBinaryGeneratorImageFilterID2IUC2IUS2)
itkBinaryGeneratorImageFilterID2IUC2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2___New_orig__
itkBinaryGeneratorImageFilterID2IUC2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUC2IUS2_cast


def itkBinaryGeneratorImageFilterID2IUS2ID2_New():
    return itkBinaryGeneratorImageFilterID2IUS2ID2.New()

class itkBinaryGeneratorImageFilterID2IUS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_swigregister(itkBinaryGeneratorImageFilterID2IUS2ID2)
itkBinaryGeneratorImageFilterID2IUS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2___New_orig__
itkBinaryGeneratorImageFilterID2IUS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ID2_cast


def itkBinaryGeneratorImageFilterID2IUS2IF2_New():
    return itkBinaryGeneratorImageFilterID2IUS2IF2.New()

class itkBinaryGeneratorImageFilterID2IUS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_swigregister(itkBinaryGeneratorImageFilterID2IUS2IF2)
itkBinaryGeneratorImageFilterID2IUS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2___New_orig__
itkBinaryGeneratorImageFilterID2IUS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IF2_cast


def itkBinaryGeneratorImageFilterID2IUS2ISS2_New():
    return itkBinaryGeneratorImageFilterID2IUS2ISS2.New()

class itkBinaryGeneratorImageFilterID2IUS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_swigregister(itkBinaryGeneratorImageFilterID2IUS2ISS2)
itkBinaryGeneratorImageFilterID2IUS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2___New_orig__
itkBinaryGeneratorImageFilterID2IUS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2ISS2_cast


def itkBinaryGeneratorImageFilterID2IUS2IUC2_New():
    return itkBinaryGeneratorImageFilterID2IUS2IUC2.New()

class itkBinaryGeneratorImageFilterID2IUS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_swigregister(itkBinaryGeneratorImageFilterID2IUS2IUC2)
itkBinaryGeneratorImageFilterID2IUS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2___New_orig__
itkBinaryGeneratorImageFilterID2IUS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUC2_cast


def itkBinaryGeneratorImageFilterID2IUS2IUS2_New():
    return itkBinaryGeneratorImageFilterID2IUS2IUS2.New()

class itkBinaryGeneratorImageFilterID2IUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID2IUS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID2IUS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterID2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID2IUS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_swigregister(itkBinaryGeneratorImageFilterID2IUS2IUS2)
itkBinaryGeneratorImageFilterID2IUS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2___New_orig__
itkBinaryGeneratorImageFilterID2IUS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID2IUS2IUS2_cast


def itkBinaryGeneratorImageFilterID3ID3ICF3_New():
    return itkBinaryGeneratorImageFilterID3ID3ICF3.New()

class itkBinaryGeneratorImageFilterID3ID3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterID3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_swigregister(itkBinaryGeneratorImageFilterID3ID3ICF3)
itkBinaryGeneratorImageFilterID3ID3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3___New_orig__
itkBinaryGeneratorImageFilterID3ID3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ICF3_cast


def itkBinaryGeneratorImageFilterID3ID3ID3_New():
    return itkBinaryGeneratorImageFilterID3ID3ID3.New()

class itkBinaryGeneratorImageFilterID3ID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_swigregister(itkBinaryGeneratorImageFilterID3ID3ID3)
itkBinaryGeneratorImageFilterID3ID3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3___New_orig__
itkBinaryGeneratorImageFilterID3ID3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ID3_cast


def itkBinaryGeneratorImageFilterID3ID3IF3_New():
    return itkBinaryGeneratorImageFilterID3ID3IF3.New()

class itkBinaryGeneratorImageFilterID3ID3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_swigregister(itkBinaryGeneratorImageFilterID3ID3IF3)
itkBinaryGeneratorImageFilterID3ID3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3___New_orig__
itkBinaryGeneratorImageFilterID3ID3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IF3_cast


def itkBinaryGeneratorImageFilterID3ID3ISS3_New():
    return itkBinaryGeneratorImageFilterID3ID3ISS3.New()

class itkBinaryGeneratorImageFilterID3ID3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_swigregister(itkBinaryGeneratorImageFilterID3ID3ISS3)
itkBinaryGeneratorImageFilterID3ID3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3___New_orig__
itkBinaryGeneratorImageFilterID3ID3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3ISS3_cast


def itkBinaryGeneratorImageFilterID3ID3IUC3_New():
    return itkBinaryGeneratorImageFilterID3ID3IUC3.New()

class itkBinaryGeneratorImageFilterID3ID3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_swigregister(itkBinaryGeneratorImageFilterID3ID3IUC3)
itkBinaryGeneratorImageFilterID3ID3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3___New_orig__
itkBinaryGeneratorImageFilterID3ID3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUC3_cast


def itkBinaryGeneratorImageFilterID3ID3IUS3_New():
    return itkBinaryGeneratorImageFilterID3ID3IUS3.New()

class itkBinaryGeneratorImageFilterID3ID3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ID3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ID3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ID3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_swigregister(itkBinaryGeneratorImageFilterID3ID3IUS3)
itkBinaryGeneratorImageFilterID3ID3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3___New_orig__
itkBinaryGeneratorImageFilterID3ID3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ID3IUS3_cast


def itkBinaryGeneratorImageFilterID3IF3ID3_New():
    return itkBinaryGeneratorImageFilterID3IF3ID3.New()

class itkBinaryGeneratorImageFilterID3IF3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IF3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IF3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IF3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_swigregister(itkBinaryGeneratorImageFilterID3IF3ID3)
itkBinaryGeneratorImageFilterID3IF3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3___New_orig__
itkBinaryGeneratorImageFilterID3IF3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ID3_cast


def itkBinaryGeneratorImageFilterID3IF3IF3_New():
    return itkBinaryGeneratorImageFilterID3IF3IF3.New()

class itkBinaryGeneratorImageFilterID3IF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IF3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IF3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IF3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_swigregister(itkBinaryGeneratorImageFilterID3IF3IF3)
itkBinaryGeneratorImageFilterID3IF3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3___New_orig__
itkBinaryGeneratorImageFilterID3IF3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IF3_cast


def itkBinaryGeneratorImageFilterID3IF3ISS3_New():
    return itkBinaryGeneratorImageFilterID3IF3ISS3.New()

class itkBinaryGeneratorImageFilterID3IF3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IF3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IF3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IF3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_swigregister(itkBinaryGeneratorImageFilterID3IF3ISS3)
itkBinaryGeneratorImageFilterID3IF3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3___New_orig__
itkBinaryGeneratorImageFilterID3IF3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3ISS3_cast


def itkBinaryGeneratorImageFilterID3IF3IUC3_New():
    return itkBinaryGeneratorImageFilterID3IF3IUC3.New()

class itkBinaryGeneratorImageFilterID3IF3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IF3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IF3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IF3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_swigregister(itkBinaryGeneratorImageFilterID3IF3IUC3)
itkBinaryGeneratorImageFilterID3IF3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3___New_orig__
itkBinaryGeneratorImageFilterID3IF3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUC3_cast


def itkBinaryGeneratorImageFilterID3IF3IUS3_New():
    return itkBinaryGeneratorImageFilterID3IF3IUS3.New()

class itkBinaryGeneratorImageFilterID3IF3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IF3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IF3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IF3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_swigregister(itkBinaryGeneratorImageFilterID3IF3IUS3)
itkBinaryGeneratorImageFilterID3IF3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3___New_orig__
itkBinaryGeneratorImageFilterID3IF3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IF3IUS3_cast


def itkBinaryGeneratorImageFilterID3ISS3ID3_New():
    return itkBinaryGeneratorImageFilterID3ISS3ID3.New()

class itkBinaryGeneratorImageFilterID3ISS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ISS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ISS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ISS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_swigregister(itkBinaryGeneratorImageFilterID3ISS3ID3)
itkBinaryGeneratorImageFilterID3ISS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3___New_orig__
itkBinaryGeneratorImageFilterID3ISS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ID3_cast


def itkBinaryGeneratorImageFilterID3ISS3IF3_New():
    return itkBinaryGeneratorImageFilterID3ISS3IF3.New()

class itkBinaryGeneratorImageFilterID3ISS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ISS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ISS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ISS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_swigregister(itkBinaryGeneratorImageFilterID3ISS3IF3)
itkBinaryGeneratorImageFilterID3ISS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3___New_orig__
itkBinaryGeneratorImageFilterID3ISS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IF3_cast


def itkBinaryGeneratorImageFilterID3ISS3ISS3_New():
    return itkBinaryGeneratorImageFilterID3ISS3ISS3.New()

class itkBinaryGeneratorImageFilterID3ISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ISS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ISS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ISS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_swigregister(itkBinaryGeneratorImageFilterID3ISS3ISS3)
itkBinaryGeneratorImageFilterID3ISS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3___New_orig__
itkBinaryGeneratorImageFilterID3ISS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3ISS3_cast


def itkBinaryGeneratorImageFilterID3ISS3IUC3_New():
    return itkBinaryGeneratorImageFilterID3ISS3IUC3.New()

class itkBinaryGeneratorImageFilterID3ISS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ISS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ISS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ISS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_swigregister(itkBinaryGeneratorImageFilterID3ISS3IUC3)
itkBinaryGeneratorImageFilterID3ISS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3___New_orig__
itkBinaryGeneratorImageFilterID3ISS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUC3_cast


def itkBinaryGeneratorImageFilterID3ISS3IUS3_New():
    return itkBinaryGeneratorImageFilterID3ISS3IUS3.New()

class itkBinaryGeneratorImageFilterID3ISS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3ISS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3ISS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3ISS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_swigregister(itkBinaryGeneratorImageFilterID3ISS3IUS3)
itkBinaryGeneratorImageFilterID3ISS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3___New_orig__
itkBinaryGeneratorImageFilterID3ISS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3ISS3IUS3_cast


def itkBinaryGeneratorImageFilterID3IUC3ID3_New():
    return itkBinaryGeneratorImageFilterID3IUC3ID3.New()

class itkBinaryGeneratorImageFilterID3IUC3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUC3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUC3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUC3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_swigregister(itkBinaryGeneratorImageFilterID3IUC3ID3)
itkBinaryGeneratorImageFilterID3IUC3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3___New_orig__
itkBinaryGeneratorImageFilterID3IUC3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ID3_cast


def itkBinaryGeneratorImageFilterID3IUC3IF3_New():
    return itkBinaryGeneratorImageFilterID3IUC3IF3.New()

class itkBinaryGeneratorImageFilterID3IUC3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUC3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUC3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUC3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_swigregister(itkBinaryGeneratorImageFilterID3IUC3IF3)
itkBinaryGeneratorImageFilterID3IUC3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3___New_orig__
itkBinaryGeneratorImageFilterID3IUC3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IF3_cast


def itkBinaryGeneratorImageFilterID3IUC3ISS3_New():
    return itkBinaryGeneratorImageFilterID3IUC3ISS3.New()

class itkBinaryGeneratorImageFilterID3IUC3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUC3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUC3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUC3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_swigregister(itkBinaryGeneratorImageFilterID3IUC3ISS3)
itkBinaryGeneratorImageFilterID3IUC3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3___New_orig__
itkBinaryGeneratorImageFilterID3IUC3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3ISS3_cast


def itkBinaryGeneratorImageFilterID3IUC3IUC3_New():
    return itkBinaryGeneratorImageFilterID3IUC3IUC3.New()

class itkBinaryGeneratorImageFilterID3IUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUC3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUC3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUC3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_swigregister(itkBinaryGeneratorImageFilterID3IUC3IUC3)
itkBinaryGeneratorImageFilterID3IUC3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3___New_orig__
itkBinaryGeneratorImageFilterID3IUC3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUC3_cast


def itkBinaryGeneratorImageFilterID3IUC3IUS3_New():
    return itkBinaryGeneratorImageFilterID3IUC3IUS3.New()

class itkBinaryGeneratorImageFilterID3IUC3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUC3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUC3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUC3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_swigregister(itkBinaryGeneratorImageFilterID3IUC3IUS3)
itkBinaryGeneratorImageFilterID3IUC3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3___New_orig__
itkBinaryGeneratorImageFilterID3IUC3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUC3IUS3_cast


def itkBinaryGeneratorImageFilterID3IUS3ID3_New():
    return itkBinaryGeneratorImageFilterID3IUS3ID3.New()

class itkBinaryGeneratorImageFilterID3IUS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_swigregister(itkBinaryGeneratorImageFilterID3IUS3ID3)
itkBinaryGeneratorImageFilterID3IUS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3___New_orig__
itkBinaryGeneratorImageFilterID3IUS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ID3_cast


def itkBinaryGeneratorImageFilterID3IUS3IF3_New():
    return itkBinaryGeneratorImageFilterID3IUS3IF3.New()

class itkBinaryGeneratorImageFilterID3IUS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_swigregister(itkBinaryGeneratorImageFilterID3IUS3IF3)
itkBinaryGeneratorImageFilterID3IUS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3___New_orig__
itkBinaryGeneratorImageFilterID3IUS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IF3_cast


def itkBinaryGeneratorImageFilterID3IUS3ISS3_New():
    return itkBinaryGeneratorImageFilterID3IUS3ISS3.New()

class itkBinaryGeneratorImageFilterID3IUS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_swigregister(itkBinaryGeneratorImageFilterID3IUS3ISS3)
itkBinaryGeneratorImageFilterID3IUS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3___New_orig__
itkBinaryGeneratorImageFilterID3IUS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3ISS3_cast


def itkBinaryGeneratorImageFilterID3IUS3IUC3_New():
    return itkBinaryGeneratorImageFilterID3IUS3IUC3.New()

class itkBinaryGeneratorImageFilterID3IUS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_swigregister(itkBinaryGeneratorImageFilterID3IUS3IUC3)
itkBinaryGeneratorImageFilterID3IUS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3___New_orig__
itkBinaryGeneratorImageFilterID3IUS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUC3_cast


def itkBinaryGeneratorImageFilterID3IUS3IUS3_New():
    return itkBinaryGeneratorImageFilterID3IUS3IUS3.New()

class itkBinaryGeneratorImageFilterID3IUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterID3IUS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterID3IUS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterID3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterID3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterID3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterID3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterID3IUS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_swigregister(itkBinaryGeneratorImageFilterID3IUS3IUS3)
itkBinaryGeneratorImageFilterID3IUS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3___New_orig__
itkBinaryGeneratorImageFilterID3IUS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterID3IUS3IUS3_cast


def itkBinaryGeneratorImageFilterIF2ID2ID2_New():
    return itkBinaryGeneratorImageFilterIF2ID2ID2.New()

class itkBinaryGeneratorImageFilterIF2ID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ID2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ID2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ID2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_swigregister(itkBinaryGeneratorImageFilterIF2ID2ID2)
itkBinaryGeneratorImageFilterIF2ID2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2___New_orig__
itkBinaryGeneratorImageFilterIF2ID2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ID2_cast


def itkBinaryGeneratorImageFilterIF2ID2IF2_New():
    return itkBinaryGeneratorImageFilterIF2ID2IF2.New()

class itkBinaryGeneratorImageFilterIF2ID2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ID2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ID2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ID2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_swigregister(itkBinaryGeneratorImageFilterIF2ID2IF2)
itkBinaryGeneratorImageFilterIF2ID2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2___New_orig__
itkBinaryGeneratorImageFilterIF2ID2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IF2_cast


def itkBinaryGeneratorImageFilterIF2ID2ISS2_New():
    return itkBinaryGeneratorImageFilterIF2ID2ISS2.New()

class itkBinaryGeneratorImageFilterIF2ID2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ID2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ID2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ID2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_swigregister(itkBinaryGeneratorImageFilterIF2ID2ISS2)
itkBinaryGeneratorImageFilterIF2ID2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2___New_orig__
itkBinaryGeneratorImageFilterIF2ID2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2ISS2_cast


def itkBinaryGeneratorImageFilterIF2ID2IUC2_New():
    return itkBinaryGeneratorImageFilterIF2ID2IUC2.New()

class itkBinaryGeneratorImageFilterIF2ID2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ID2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ID2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ID2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_swigregister(itkBinaryGeneratorImageFilterIF2ID2IUC2)
itkBinaryGeneratorImageFilterIF2ID2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2___New_orig__
itkBinaryGeneratorImageFilterIF2ID2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUC2_cast


def itkBinaryGeneratorImageFilterIF2ID2IUS2_New():
    return itkBinaryGeneratorImageFilterIF2ID2IUS2.New()

class itkBinaryGeneratorImageFilterIF2ID2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ID2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ID2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ID2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_swigregister(itkBinaryGeneratorImageFilterIF2ID2IUS2)
itkBinaryGeneratorImageFilterIF2ID2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2___New_orig__
itkBinaryGeneratorImageFilterIF2ID2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ID2IUS2_cast


def itkBinaryGeneratorImageFilterIF2IF2ICF2_New():
    return itkBinaryGeneratorImageFilterIF2IF2ICF2.New()

class itkBinaryGeneratorImageFilterIF2IF2ICF2(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2ICF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2ICF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2ICF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_swigregister(itkBinaryGeneratorImageFilterIF2IF2ICF2)
itkBinaryGeneratorImageFilterIF2IF2ICF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2ICF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ICF2_cast


def itkBinaryGeneratorImageFilterIF2IF2ID2_New():
    return itkBinaryGeneratorImageFilterIF2IF2ID2.New()

class itkBinaryGeneratorImageFilterIF2IF2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_swigregister(itkBinaryGeneratorImageFilterIF2IF2ID2)
itkBinaryGeneratorImageFilterIF2IF2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ID2_cast


def itkBinaryGeneratorImageFilterIF2IF2IF2_New():
    return itkBinaryGeneratorImageFilterIF2IF2IF2.New()

class itkBinaryGeneratorImageFilterIF2IF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_swigregister(itkBinaryGeneratorImageFilterIF2IF2IF2)
itkBinaryGeneratorImageFilterIF2IF2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IF2_cast


def itkBinaryGeneratorImageFilterIF2IF2ISS2_New():
    return itkBinaryGeneratorImageFilterIF2IF2ISS2.New()

class itkBinaryGeneratorImageFilterIF2IF2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_swigregister(itkBinaryGeneratorImageFilterIF2IF2ISS2)
itkBinaryGeneratorImageFilterIF2IF2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2ISS2_cast


def itkBinaryGeneratorImageFilterIF2IF2IUC2_New():
    return itkBinaryGeneratorImageFilterIF2IF2IUC2.New()

class itkBinaryGeneratorImageFilterIF2IF2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_swigregister(itkBinaryGeneratorImageFilterIF2IF2IUC2)
itkBinaryGeneratorImageFilterIF2IF2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUC2_cast


def itkBinaryGeneratorImageFilterIF2IF2IUS2_New():
    return itkBinaryGeneratorImageFilterIF2IF2IUS2.New()

class itkBinaryGeneratorImageFilterIF2IF2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IF2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IF2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IF2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_swigregister(itkBinaryGeneratorImageFilterIF2IF2IUS2)
itkBinaryGeneratorImageFilterIF2IF2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2___New_orig__
itkBinaryGeneratorImageFilterIF2IF2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IF2IUS2_cast


def itkBinaryGeneratorImageFilterIF2ISS2ID2_New():
    return itkBinaryGeneratorImageFilterIF2ISS2ID2.New()

class itkBinaryGeneratorImageFilterIF2ISS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ISS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ISS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ISS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_swigregister(itkBinaryGeneratorImageFilterIF2ISS2ID2)
itkBinaryGeneratorImageFilterIF2ISS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2___New_orig__
itkBinaryGeneratorImageFilterIF2ISS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ID2_cast


def itkBinaryGeneratorImageFilterIF2ISS2IF2_New():
    return itkBinaryGeneratorImageFilterIF2ISS2IF2.New()

class itkBinaryGeneratorImageFilterIF2ISS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ISS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ISS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ISS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_swigregister(itkBinaryGeneratorImageFilterIF2ISS2IF2)
itkBinaryGeneratorImageFilterIF2ISS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2___New_orig__
itkBinaryGeneratorImageFilterIF2ISS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IF2_cast


def itkBinaryGeneratorImageFilterIF2ISS2ISS2_New():
    return itkBinaryGeneratorImageFilterIF2ISS2ISS2.New()

class itkBinaryGeneratorImageFilterIF2ISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ISS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ISS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ISS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_swigregister(itkBinaryGeneratorImageFilterIF2ISS2ISS2)
itkBinaryGeneratorImageFilterIF2ISS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIF2ISS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2ISS2_cast


def itkBinaryGeneratorImageFilterIF2ISS2IUC2_New():
    return itkBinaryGeneratorImageFilterIF2ISS2IUC2.New()

class itkBinaryGeneratorImageFilterIF2ISS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ISS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ISS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ISS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_swigregister(itkBinaryGeneratorImageFilterIF2ISS2IUC2)
itkBinaryGeneratorImageFilterIF2ISS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIF2ISS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUC2_cast


def itkBinaryGeneratorImageFilterIF2ISS2IUS2_New():
    return itkBinaryGeneratorImageFilterIF2ISS2IUS2.New()

class itkBinaryGeneratorImageFilterIF2ISS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2ISS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2ISS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2ISS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_swigregister(itkBinaryGeneratorImageFilterIF2ISS2IUS2)
itkBinaryGeneratorImageFilterIF2ISS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIF2ISS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2ISS2IUS2_cast


def itkBinaryGeneratorImageFilterIF2IUC2ID2_New():
    return itkBinaryGeneratorImageFilterIF2IUC2ID2.New()

class itkBinaryGeneratorImageFilterIF2IUC2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUC2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUC2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUC2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_swigregister(itkBinaryGeneratorImageFilterIF2IUC2ID2)
itkBinaryGeneratorImageFilterIF2IUC2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2___New_orig__
itkBinaryGeneratorImageFilterIF2IUC2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ID2_cast


def itkBinaryGeneratorImageFilterIF2IUC2IF2_New():
    return itkBinaryGeneratorImageFilterIF2IUC2IF2.New()

class itkBinaryGeneratorImageFilterIF2IUC2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUC2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUC2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUC2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_swigregister(itkBinaryGeneratorImageFilterIF2IUC2IF2)
itkBinaryGeneratorImageFilterIF2IUC2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2___New_orig__
itkBinaryGeneratorImageFilterIF2IUC2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IF2_cast


def itkBinaryGeneratorImageFilterIF2IUC2ISS2_New():
    return itkBinaryGeneratorImageFilterIF2IUC2ISS2.New()

class itkBinaryGeneratorImageFilterIF2IUC2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUC2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUC2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUC2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_swigregister(itkBinaryGeneratorImageFilterIF2IUC2ISS2)
itkBinaryGeneratorImageFilterIF2IUC2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2___New_orig__
itkBinaryGeneratorImageFilterIF2IUC2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2ISS2_cast


def itkBinaryGeneratorImageFilterIF2IUC2IUC2_New():
    return itkBinaryGeneratorImageFilterIF2IUC2IUC2.New()

class itkBinaryGeneratorImageFilterIF2IUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUC2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUC2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUC2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_swigregister(itkBinaryGeneratorImageFilterIF2IUC2IUC2)
itkBinaryGeneratorImageFilterIF2IUC2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2___New_orig__
itkBinaryGeneratorImageFilterIF2IUC2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUC2_cast


def itkBinaryGeneratorImageFilterIF2IUC2IUS2_New():
    return itkBinaryGeneratorImageFilterIF2IUC2IUS2.New()

class itkBinaryGeneratorImageFilterIF2IUC2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUC2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUC2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUC2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_swigregister(itkBinaryGeneratorImageFilterIF2IUC2IUS2)
itkBinaryGeneratorImageFilterIF2IUC2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2___New_orig__
itkBinaryGeneratorImageFilterIF2IUC2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUC2IUS2_cast


def itkBinaryGeneratorImageFilterIF2IUS2ID2_New():
    return itkBinaryGeneratorImageFilterIF2IUS2ID2.New()

class itkBinaryGeneratorImageFilterIF2IUS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_swigregister(itkBinaryGeneratorImageFilterIF2IUS2ID2)
itkBinaryGeneratorImageFilterIF2IUS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2___New_orig__
itkBinaryGeneratorImageFilterIF2IUS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ID2_cast


def itkBinaryGeneratorImageFilterIF2IUS2IF2_New():
    return itkBinaryGeneratorImageFilterIF2IUS2IF2.New()

class itkBinaryGeneratorImageFilterIF2IUS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_swigregister(itkBinaryGeneratorImageFilterIF2IUS2IF2)
itkBinaryGeneratorImageFilterIF2IUS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2___New_orig__
itkBinaryGeneratorImageFilterIF2IUS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IF2_cast


def itkBinaryGeneratorImageFilterIF2IUS2ISS2_New():
    return itkBinaryGeneratorImageFilterIF2IUS2ISS2.New()

class itkBinaryGeneratorImageFilterIF2IUS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_swigregister(itkBinaryGeneratorImageFilterIF2IUS2ISS2)
itkBinaryGeneratorImageFilterIF2IUS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIF2IUS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2ISS2_cast


def itkBinaryGeneratorImageFilterIF2IUS2IUC2_New():
    return itkBinaryGeneratorImageFilterIF2IUS2IUC2.New()

class itkBinaryGeneratorImageFilterIF2IUS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_swigregister(itkBinaryGeneratorImageFilterIF2IUS2IUC2)
itkBinaryGeneratorImageFilterIF2IUS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIF2IUS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUC2_cast


def itkBinaryGeneratorImageFilterIF2IUS2IUS2_New():
    return itkBinaryGeneratorImageFilterIF2IUS2IUS2.New()

class itkBinaryGeneratorImageFilterIF2IUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF2IUS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF2IUS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIF2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF2IUS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_swigregister(itkBinaryGeneratorImageFilterIF2IUS2IUS2)
itkBinaryGeneratorImageFilterIF2IUS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIF2IUS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF2IUS2IUS2_cast


def itkBinaryGeneratorImageFilterIF3ID3ID3_New():
    return itkBinaryGeneratorImageFilterIF3ID3ID3.New()

class itkBinaryGeneratorImageFilterIF3ID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ID3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ID3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ID3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_swigregister(itkBinaryGeneratorImageFilterIF3ID3ID3)
itkBinaryGeneratorImageFilterIF3ID3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3___New_orig__
itkBinaryGeneratorImageFilterIF3ID3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ID3_cast


def itkBinaryGeneratorImageFilterIF3ID3IF3_New():
    return itkBinaryGeneratorImageFilterIF3ID3IF3.New()

class itkBinaryGeneratorImageFilterIF3ID3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ID3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ID3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ID3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_swigregister(itkBinaryGeneratorImageFilterIF3ID3IF3)
itkBinaryGeneratorImageFilterIF3ID3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3___New_orig__
itkBinaryGeneratorImageFilterIF3ID3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IF3_cast


def itkBinaryGeneratorImageFilterIF3ID3ISS3_New():
    return itkBinaryGeneratorImageFilterIF3ID3ISS3.New()

class itkBinaryGeneratorImageFilterIF3ID3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ID3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ID3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ID3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_swigregister(itkBinaryGeneratorImageFilterIF3ID3ISS3)
itkBinaryGeneratorImageFilterIF3ID3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3___New_orig__
itkBinaryGeneratorImageFilterIF3ID3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3ISS3_cast


def itkBinaryGeneratorImageFilterIF3ID3IUC3_New():
    return itkBinaryGeneratorImageFilterIF3ID3IUC3.New()

class itkBinaryGeneratorImageFilterIF3ID3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ID3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ID3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ID3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_swigregister(itkBinaryGeneratorImageFilterIF3ID3IUC3)
itkBinaryGeneratorImageFilterIF3ID3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3___New_orig__
itkBinaryGeneratorImageFilterIF3ID3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUC3_cast


def itkBinaryGeneratorImageFilterIF3ID3IUS3_New():
    return itkBinaryGeneratorImageFilterIF3ID3IUS3.New()

class itkBinaryGeneratorImageFilterIF3ID3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ID3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ID3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ID3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_swigregister(itkBinaryGeneratorImageFilterIF3ID3IUS3)
itkBinaryGeneratorImageFilterIF3ID3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3___New_orig__
itkBinaryGeneratorImageFilterIF3ID3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ID3IUS3_cast


def itkBinaryGeneratorImageFilterIF3IF3ICF3_New():
    return itkBinaryGeneratorImageFilterIF3IF3ICF3.New()

class itkBinaryGeneratorImageFilterIF3IF3ICF3(itk.itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3ICF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3ICF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3ICF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_swigregister(itkBinaryGeneratorImageFilterIF3IF3ICF3)
itkBinaryGeneratorImageFilterIF3IF3ICF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3ICF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ICF3_cast


def itkBinaryGeneratorImageFilterIF3IF3ID3_New():
    return itkBinaryGeneratorImageFilterIF3IF3ID3.New()

class itkBinaryGeneratorImageFilterIF3IF3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_swigregister(itkBinaryGeneratorImageFilterIF3IF3ID3)
itkBinaryGeneratorImageFilterIF3IF3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ID3_cast


def itkBinaryGeneratorImageFilterIF3IF3IF3_New():
    return itkBinaryGeneratorImageFilterIF3IF3IF3.New()

class itkBinaryGeneratorImageFilterIF3IF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_swigregister(itkBinaryGeneratorImageFilterIF3IF3IF3)
itkBinaryGeneratorImageFilterIF3IF3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IF3_cast


def itkBinaryGeneratorImageFilterIF3IF3ISS3_New():
    return itkBinaryGeneratorImageFilterIF3IF3ISS3.New()

class itkBinaryGeneratorImageFilterIF3IF3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_swigregister(itkBinaryGeneratorImageFilterIF3IF3ISS3)
itkBinaryGeneratorImageFilterIF3IF3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3ISS3_cast


def itkBinaryGeneratorImageFilterIF3IF3IUC3_New():
    return itkBinaryGeneratorImageFilterIF3IF3IUC3.New()

class itkBinaryGeneratorImageFilterIF3IF3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_swigregister(itkBinaryGeneratorImageFilterIF3IF3IUC3)
itkBinaryGeneratorImageFilterIF3IF3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUC3_cast


def itkBinaryGeneratorImageFilterIF3IF3IUS3_New():
    return itkBinaryGeneratorImageFilterIF3IF3IUS3.New()

class itkBinaryGeneratorImageFilterIF3IF3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IF3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IF3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IF3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_swigregister(itkBinaryGeneratorImageFilterIF3IF3IUS3)
itkBinaryGeneratorImageFilterIF3IF3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3___New_orig__
itkBinaryGeneratorImageFilterIF3IF3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IF3IUS3_cast


def itkBinaryGeneratorImageFilterIF3ISS3ID3_New():
    return itkBinaryGeneratorImageFilterIF3ISS3ID3.New()

class itkBinaryGeneratorImageFilterIF3ISS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ISS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ISS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ISS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_swigregister(itkBinaryGeneratorImageFilterIF3ISS3ID3)
itkBinaryGeneratorImageFilterIF3ISS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3___New_orig__
itkBinaryGeneratorImageFilterIF3ISS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ID3_cast


def itkBinaryGeneratorImageFilterIF3ISS3IF3_New():
    return itkBinaryGeneratorImageFilterIF3ISS3IF3.New()

class itkBinaryGeneratorImageFilterIF3ISS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ISS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ISS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ISS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_swigregister(itkBinaryGeneratorImageFilterIF3ISS3IF3)
itkBinaryGeneratorImageFilterIF3ISS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3___New_orig__
itkBinaryGeneratorImageFilterIF3ISS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IF3_cast


def itkBinaryGeneratorImageFilterIF3ISS3ISS3_New():
    return itkBinaryGeneratorImageFilterIF3ISS3ISS3.New()

class itkBinaryGeneratorImageFilterIF3ISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ISS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ISS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ISS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_swigregister(itkBinaryGeneratorImageFilterIF3ISS3ISS3)
itkBinaryGeneratorImageFilterIF3ISS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIF3ISS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3ISS3_cast


def itkBinaryGeneratorImageFilterIF3ISS3IUC3_New():
    return itkBinaryGeneratorImageFilterIF3ISS3IUC3.New()

class itkBinaryGeneratorImageFilterIF3ISS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ISS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ISS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ISS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_swigregister(itkBinaryGeneratorImageFilterIF3ISS3IUC3)
itkBinaryGeneratorImageFilterIF3ISS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIF3ISS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUC3_cast


def itkBinaryGeneratorImageFilterIF3ISS3IUS3_New():
    return itkBinaryGeneratorImageFilterIF3ISS3IUS3.New()

class itkBinaryGeneratorImageFilterIF3ISS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3ISS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3ISS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3ISS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_swigregister(itkBinaryGeneratorImageFilterIF3ISS3IUS3)
itkBinaryGeneratorImageFilterIF3ISS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIF3ISS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3ISS3IUS3_cast


def itkBinaryGeneratorImageFilterIF3IUC3ID3_New():
    return itkBinaryGeneratorImageFilterIF3IUC3ID3.New()

class itkBinaryGeneratorImageFilterIF3IUC3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUC3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUC3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUC3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_swigregister(itkBinaryGeneratorImageFilterIF3IUC3ID3)
itkBinaryGeneratorImageFilterIF3IUC3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3___New_orig__
itkBinaryGeneratorImageFilterIF3IUC3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ID3_cast


def itkBinaryGeneratorImageFilterIF3IUC3IF3_New():
    return itkBinaryGeneratorImageFilterIF3IUC3IF3.New()

class itkBinaryGeneratorImageFilterIF3IUC3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUC3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUC3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUC3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_swigregister(itkBinaryGeneratorImageFilterIF3IUC3IF3)
itkBinaryGeneratorImageFilterIF3IUC3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3___New_orig__
itkBinaryGeneratorImageFilterIF3IUC3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IF3_cast


def itkBinaryGeneratorImageFilterIF3IUC3ISS3_New():
    return itkBinaryGeneratorImageFilterIF3IUC3ISS3.New()

class itkBinaryGeneratorImageFilterIF3IUC3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUC3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUC3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUC3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_swigregister(itkBinaryGeneratorImageFilterIF3IUC3ISS3)
itkBinaryGeneratorImageFilterIF3IUC3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3___New_orig__
itkBinaryGeneratorImageFilterIF3IUC3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3ISS3_cast


def itkBinaryGeneratorImageFilterIF3IUC3IUC3_New():
    return itkBinaryGeneratorImageFilterIF3IUC3IUC3.New()

class itkBinaryGeneratorImageFilterIF3IUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUC3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUC3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUC3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_swigregister(itkBinaryGeneratorImageFilterIF3IUC3IUC3)
itkBinaryGeneratorImageFilterIF3IUC3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3___New_orig__
itkBinaryGeneratorImageFilterIF3IUC3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUC3_cast


def itkBinaryGeneratorImageFilterIF3IUC3IUS3_New():
    return itkBinaryGeneratorImageFilterIF3IUC3IUS3.New()

class itkBinaryGeneratorImageFilterIF3IUC3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUC3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUC3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUC3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_swigregister(itkBinaryGeneratorImageFilterIF3IUC3IUS3)
itkBinaryGeneratorImageFilterIF3IUC3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3___New_orig__
itkBinaryGeneratorImageFilterIF3IUC3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUC3IUS3_cast


def itkBinaryGeneratorImageFilterIF3IUS3ID3_New():
    return itkBinaryGeneratorImageFilterIF3IUS3ID3.New()

class itkBinaryGeneratorImageFilterIF3IUS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_swigregister(itkBinaryGeneratorImageFilterIF3IUS3ID3)
itkBinaryGeneratorImageFilterIF3IUS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3___New_orig__
itkBinaryGeneratorImageFilterIF3IUS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ID3_cast


def itkBinaryGeneratorImageFilterIF3IUS3IF3_New():
    return itkBinaryGeneratorImageFilterIF3IUS3IF3.New()

class itkBinaryGeneratorImageFilterIF3IUS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_swigregister(itkBinaryGeneratorImageFilterIF3IUS3IF3)
itkBinaryGeneratorImageFilterIF3IUS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3___New_orig__
itkBinaryGeneratorImageFilterIF3IUS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IF3_cast


def itkBinaryGeneratorImageFilterIF3IUS3ISS3_New():
    return itkBinaryGeneratorImageFilterIF3IUS3ISS3.New()

class itkBinaryGeneratorImageFilterIF3IUS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_swigregister(itkBinaryGeneratorImageFilterIF3IUS3ISS3)
itkBinaryGeneratorImageFilterIF3IUS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIF3IUS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3ISS3_cast


def itkBinaryGeneratorImageFilterIF3IUS3IUC3_New():
    return itkBinaryGeneratorImageFilterIF3IUS3IUC3.New()

class itkBinaryGeneratorImageFilterIF3IUS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_swigregister(itkBinaryGeneratorImageFilterIF3IUS3IUC3)
itkBinaryGeneratorImageFilterIF3IUS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIF3IUS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUC3_cast


def itkBinaryGeneratorImageFilterIF3IUS3IUS3_New():
    return itkBinaryGeneratorImageFilterIF3IUS3IUS3.New()

class itkBinaryGeneratorImageFilterIF3IUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIF3IUS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIF3IUS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIF3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIF3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIF3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIF3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIF3IUS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_swigregister(itkBinaryGeneratorImageFilterIF3IUS3IUS3)
itkBinaryGeneratorImageFilterIF3IUS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIF3IUS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIF3IUS3IUS3_cast


def itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_New():
    return itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2.New()

class itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_swigregister(itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2)
itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2ISS2IRGBAUC2_cast


def itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_New():
    return itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2.New()

class itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_swigregister(itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2)
itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUC2IRGBAUC2_cast


def itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_New():
    return itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2.New()

class itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_swigregister(itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2)
itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC2IUS2IRGBAUC2_cast


def itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_New():
    return itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3.New()

class itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_swigregister(itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3)
itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3ISS3IRGBAUC3_cast


def itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_New():
    return itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3.New()

class itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_swigregister(itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3)
itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUC3IRGBAUC3_cast


def itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_New():
    return itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3.New()

class itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_swigregister(itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3)
itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBAUC3IUS3IRGBAUC3_cast


def itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2)
itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2ISS2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2)
itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUC2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2)
itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC2IUS2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3)
itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3ISS3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3)
itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUC3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIRGBUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3)
itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIRGBUC3IUS3IRGBUC3_cast


def itkBinaryGeneratorImageFilterISS2ID2ID2_New():
    return itkBinaryGeneratorImageFilterISS2ID2ID2.New()

class itkBinaryGeneratorImageFilterISS2ID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ID2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ID2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ID2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_swigregister(itkBinaryGeneratorImageFilterISS2ID2ID2)
itkBinaryGeneratorImageFilterISS2ID2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2___New_orig__
itkBinaryGeneratorImageFilterISS2ID2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ID2_cast


def itkBinaryGeneratorImageFilterISS2ID2IF2_New():
    return itkBinaryGeneratorImageFilterISS2ID2IF2.New()

class itkBinaryGeneratorImageFilterISS2ID2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ID2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ID2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ID2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_swigregister(itkBinaryGeneratorImageFilterISS2ID2IF2)
itkBinaryGeneratorImageFilterISS2ID2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2___New_orig__
itkBinaryGeneratorImageFilterISS2ID2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IF2_cast


def itkBinaryGeneratorImageFilterISS2ID2ISS2_New():
    return itkBinaryGeneratorImageFilterISS2ID2ISS2.New()

class itkBinaryGeneratorImageFilterISS2ID2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ID2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ID2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ID2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_swigregister(itkBinaryGeneratorImageFilterISS2ID2ISS2)
itkBinaryGeneratorImageFilterISS2ID2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2___New_orig__
itkBinaryGeneratorImageFilterISS2ID2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2ISS2_cast


def itkBinaryGeneratorImageFilterISS2ID2IUC2_New():
    return itkBinaryGeneratorImageFilterISS2ID2IUC2.New()

class itkBinaryGeneratorImageFilterISS2ID2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ID2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ID2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ID2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_swigregister(itkBinaryGeneratorImageFilterISS2ID2IUC2)
itkBinaryGeneratorImageFilterISS2ID2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2___New_orig__
itkBinaryGeneratorImageFilterISS2ID2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUC2_cast


def itkBinaryGeneratorImageFilterISS2ID2IUS2_New():
    return itkBinaryGeneratorImageFilterISS2ID2IUS2.New()

class itkBinaryGeneratorImageFilterISS2ID2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ID2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ID2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ID2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_swigregister(itkBinaryGeneratorImageFilterISS2ID2IUS2)
itkBinaryGeneratorImageFilterISS2ID2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2___New_orig__
itkBinaryGeneratorImageFilterISS2ID2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ID2IUS2_cast


def itkBinaryGeneratorImageFilterISS2IF2ID2_New():
    return itkBinaryGeneratorImageFilterISS2IF2ID2.New()

class itkBinaryGeneratorImageFilterISS2IF2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IF2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IF2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IF2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_swigregister(itkBinaryGeneratorImageFilterISS2IF2ID2)
itkBinaryGeneratorImageFilterISS2IF2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2___New_orig__
itkBinaryGeneratorImageFilterISS2IF2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ID2_cast


def itkBinaryGeneratorImageFilterISS2IF2IF2_New():
    return itkBinaryGeneratorImageFilterISS2IF2IF2.New()

class itkBinaryGeneratorImageFilterISS2IF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IF2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IF2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IF2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_swigregister(itkBinaryGeneratorImageFilterISS2IF2IF2)
itkBinaryGeneratorImageFilterISS2IF2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2___New_orig__
itkBinaryGeneratorImageFilterISS2IF2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IF2_cast


def itkBinaryGeneratorImageFilterISS2IF2ISS2_New():
    return itkBinaryGeneratorImageFilterISS2IF2ISS2.New()

class itkBinaryGeneratorImageFilterISS2IF2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IF2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IF2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IF2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_swigregister(itkBinaryGeneratorImageFilterISS2IF2ISS2)
itkBinaryGeneratorImageFilterISS2IF2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2___New_orig__
itkBinaryGeneratorImageFilterISS2IF2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2ISS2_cast


def itkBinaryGeneratorImageFilterISS2IF2IUC2_New():
    return itkBinaryGeneratorImageFilterISS2IF2IUC2.New()

class itkBinaryGeneratorImageFilterISS2IF2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IF2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IF2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IF2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_swigregister(itkBinaryGeneratorImageFilterISS2IF2IUC2)
itkBinaryGeneratorImageFilterISS2IF2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2___New_orig__
itkBinaryGeneratorImageFilterISS2IF2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUC2_cast


def itkBinaryGeneratorImageFilterISS2IF2IUS2_New():
    return itkBinaryGeneratorImageFilterISS2IF2IUS2.New()

class itkBinaryGeneratorImageFilterISS2IF2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IF2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IF2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IF2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_swigregister(itkBinaryGeneratorImageFilterISS2IF2IUS2)
itkBinaryGeneratorImageFilterISS2IF2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2___New_orig__
itkBinaryGeneratorImageFilterISS2IF2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IF2IUS2_cast


def itkBinaryGeneratorImageFilterISS2ISS2ID2_New():
    return itkBinaryGeneratorImageFilterISS2ISS2ID2.New()

class itkBinaryGeneratorImageFilterISS2ISS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ISS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ISS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ISS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_swigregister(itkBinaryGeneratorImageFilterISS2ISS2ID2)
itkBinaryGeneratorImageFilterISS2ISS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2___New_orig__
itkBinaryGeneratorImageFilterISS2ISS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ID2_cast


def itkBinaryGeneratorImageFilterISS2ISS2IF2_New():
    return itkBinaryGeneratorImageFilterISS2ISS2IF2.New()

class itkBinaryGeneratorImageFilterISS2ISS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ISS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ISS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ISS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_swigregister(itkBinaryGeneratorImageFilterISS2ISS2IF2)
itkBinaryGeneratorImageFilterISS2ISS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2___New_orig__
itkBinaryGeneratorImageFilterISS2ISS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IF2_cast


def itkBinaryGeneratorImageFilterISS2ISS2ISS2_New():
    return itkBinaryGeneratorImageFilterISS2ISS2ISS2.New()

class itkBinaryGeneratorImageFilterISS2ISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ISS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ISS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ISS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_swigregister(itkBinaryGeneratorImageFilterISS2ISS2ISS2)
itkBinaryGeneratorImageFilterISS2ISS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2___New_orig__
itkBinaryGeneratorImageFilterISS2ISS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2ISS2_cast


def itkBinaryGeneratorImageFilterISS2ISS2IUC2_New():
    return itkBinaryGeneratorImageFilterISS2ISS2IUC2.New()

class itkBinaryGeneratorImageFilterISS2ISS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ISS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ISS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ISS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_swigregister(itkBinaryGeneratorImageFilterISS2ISS2IUC2)
itkBinaryGeneratorImageFilterISS2ISS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2___New_orig__
itkBinaryGeneratorImageFilterISS2ISS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUC2_cast


def itkBinaryGeneratorImageFilterISS2ISS2IUS2_New():
    return itkBinaryGeneratorImageFilterISS2ISS2IUS2.New()

class itkBinaryGeneratorImageFilterISS2ISS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2ISS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2ISS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2ISS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_swigregister(itkBinaryGeneratorImageFilterISS2ISS2IUS2)
itkBinaryGeneratorImageFilterISS2ISS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2___New_orig__
itkBinaryGeneratorImageFilterISS2ISS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2ISS2IUS2_cast


def itkBinaryGeneratorImageFilterISS2IUC2ID2_New():
    return itkBinaryGeneratorImageFilterISS2IUC2ID2.New()

class itkBinaryGeneratorImageFilterISS2IUC2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUC2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUC2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUC2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_swigregister(itkBinaryGeneratorImageFilterISS2IUC2ID2)
itkBinaryGeneratorImageFilterISS2IUC2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2___New_orig__
itkBinaryGeneratorImageFilterISS2IUC2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ID2_cast


def itkBinaryGeneratorImageFilterISS2IUC2IF2_New():
    return itkBinaryGeneratorImageFilterISS2IUC2IF2.New()

class itkBinaryGeneratorImageFilterISS2IUC2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUC2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUC2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUC2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_swigregister(itkBinaryGeneratorImageFilterISS2IUC2IF2)
itkBinaryGeneratorImageFilterISS2IUC2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2___New_orig__
itkBinaryGeneratorImageFilterISS2IUC2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IF2_cast


def itkBinaryGeneratorImageFilterISS2IUC2ISS2_New():
    return itkBinaryGeneratorImageFilterISS2IUC2ISS2.New()

class itkBinaryGeneratorImageFilterISS2IUC2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUC2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUC2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUC2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_swigregister(itkBinaryGeneratorImageFilterISS2IUC2ISS2)
itkBinaryGeneratorImageFilterISS2IUC2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2___New_orig__
itkBinaryGeneratorImageFilterISS2IUC2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2ISS2_cast


def itkBinaryGeneratorImageFilterISS2IUC2IUC2_New():
    return itkBinaryGeneratorImageFilterISS2IUC2IUC2.New()

class itkBinaryGeneratorImageFilterISS2IUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUC2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUC2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUC2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_swigregister(itkBinaryGeneratorImageFilterISS2IUC2IUC2)
itkBinaryGeneratorImageFilterISS2IUC2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2___New_orig__
itkBinaryGeneratorImageFilterISS2IUC2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUC2_cast


def itkBinaryGeneratorImageFilterISS2IUC2IUS2_New():
    return itkBinaryGeneratorImageFilterISS2IUC2IUS2.New()

class itkBinaryGeneratorImageFilterISS2IUC2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUC2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUC2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUC2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_swigregister(itkBinaryGeneratorImageFilterISS2IUC2IUS2)
itkBinaryGeneratorImageFilterISS2IUC2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2___New_orig__
itkBinaryGeneratorImageFilterISS2IUC2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUC2IUS2_cast


def itkBinaryGeneratorImageFilterISS2IUS2ID2_New():
    return itkBinaryGeneratorImageFilterISS2IUS2ID2.New()

class itkBinaryGeneratorImageFilterISS2IUS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_swigregister(itkBinaryGeneratorImageFilterISS2IUS2ID2)
itkBinaryGeneratorImageFilterISS2IUS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2___New_orig__
itkBinaryGeneratorImageFilterISS2IUS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ID2_cast


def itkBinaryGeneratorImageFilterISS2IUS2IF2_New():
    return itkBinaryGeneratorImageFilterISS2IUS2IF2.New()

class itkBinaryGeneratorImageFilterISS2IUS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_swigregister(itkBinaryGeneratorImageFilterISS2IUS2IF2)
itkBinaryGeneratorImageFilterISS2IUS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2___New_orig__
itkBinaryGeneratorImageFilterISS2IUS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IF2_cast


def itkBinaryGeneratorImageFilterISS2IUS2ISS2_New():
    return itkBinaryGeneratorImageFilterISS2IUS2ISS2.New()

class itkBinaryGeneratorImageFilterISS2IUS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_swigregister(itkBinaryGeneratorImageFilterISS2IUS2ISS2)
itkBinaryGeneratorImageFilterISS2IUS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2___New_orig__
itkBinaryGeneratorImageFilterISS2IUS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2ISS2_cast


def itkBinaryGeneratorImageFilterISS2IUS2IUC2_New():
    return itkBinaryGeneratorImageFilterISS2IUS2IUC2.New()

class itkBinaryGeneratorImageFilterISS2IUS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_swigregister(itkBinaryGeneratorImageFilterISS2IUS2IUC2)
itkBinaryGeneratorImageFilterISS2IUS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2___New_orig__
itkBinaryGeneratorImageFilterISS2IUS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUC2_cast


def itkBinaryGeneratorImageFilterISS2IUS2IUS2_New():
    return itkBinaryGeneratorImageFilterISS2IUS2IUS2.New()

class itkBinaryGeneratorImageFilterISS2IUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS2IUS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS2IUS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterISS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS2IUS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_swigregister(itkBinaryGeneratorImageFilterISS2IUS2IUS2)
itkBinaryGeneratorImageFilterISS2IUS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2___New_orig__
itkBinaryGeneratorImageFilterISS2IUS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS2IUS2IUS2_cast


def itkBinaryGeneratorImageFilterISS3ID3ID3_New():
    return itkBinaryGeneratorImageFilterISS3ID3ID3.New()

class itkBinaryGeneratorImageFilterISS3ID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ID3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ID3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ID3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_swigregister(itkBinaryGeneratorImageFilterISS3ID3ID3)
itkBinaryGeneratorImageFilterISS3ID3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3___New_orig__
itkBinaryGeneratorImageFilterISS3ID3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ID3_cast


def itkBinaryGeneratorImageFilterISS3ID3IF3_New():
    return itkBinaryGeneratorImageFilterISS3ID3IF3.New()

class itkBinaryGeneratorImageFilterISS3ID3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ID3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ID3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ID3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_swigregister(itkBinaryGeneratorImageFilterISS3ID3IF3)
itkBinaryGeneratorImageFilterISS3ID3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3___New_orig__
itkBinaryGeneratorImageFilterISS3ID3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IF3_cast


def itkBinaryGeneratorImageFilterISS3ID3ISS3_New():
    return itkBinaryGeneratorImageFilterISS3ID3ISS3.New()

class itkBinaryGeneratorImageFilterISS3ID3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ID3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ID3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ID3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_swigregister(itkBinaryGeneratorImageFilterISS3ID3ISS3)
itkBinaryGeneratorImageFilterISS3ID3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3___New_orig__
itkBinaryGeneratorImageFilterISS3ID3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3ISS3_cast


def itkBinaryGeneratorImageFilterISS3ID3IUC3_New():
    return itkBinaryGeneratorImageFilterISS3ID3IUC3.New()

class itkBinaryGeneratorImageFilterISS3ID3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ID3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ID3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ID3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_swigregister(itkBinaryGeneratorImageFilterISS3ID3IUC3)
itkBinaryGeneratorImageFilterISS3ID3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3___New_orig__
itkBinaryGeneratorImageFilterISS3ID3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUC3_cast


def itkBinaryGeneratorImageFilterISS3ID3IUS3_New():
    return itkBinaryGeneratorImageFilterISS3ID3IUS3.New()

class itkBinaryGeneratorImageFilterISS3ID3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ID3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ID3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ID3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_swigregister(itkBinaryGeneratorImageFilterISS3ID3IUS3)
itkBinaryGeneratorImageFilterISS3ID3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3___New_orig__
itkBinaryGeneratorImageFilterISS3ID3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ID3IUS3_cast


def itkBinaryGeneratorImageFilterISS3IF3ID3_New():
    return itkBinaryGeneratorImageFilterISS3IF3ID3.New()

class itkBinaryGeneratorImageFilterISS3IF3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IF3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IF3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IF3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_swigregister(itkBinaryGeneratorImageFilterISS3IF3ID3)
itkBinaryGeneratorImageFilterISS3IF3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3___New_orig__
itkBinaryGeneratorImageFilterISS3IF3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ID3_cast


def itkBinaryGeneratorImageFilterISS3IF3IF3_New():
    return itkBinaryGeneratorImageFilterISS3IF3IF3.New()

class itkBinaryGeneratorImageFilterISS3IF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IF3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IF3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IF3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_swigregister(itkBinaryGeneratorImageFilterISS3IF3IF3)
itkBinaryGeneratorImageFilterISS3IF3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3___New_orig__
itkBinaryGeneratorImageFilterISS3IF3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IF3_cast


def itkBinaryGeneratorImageFilterISS3IF3ISS3_New():
    return itkBinaryGeneratorImageFilterISS3IF3ISS3.New()

class itkBinaryGeneratorImageFilterISS3IF3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IF3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IF3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IF3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_swigregister(itkBinaryGeneratorImageFilterISS3IF3ISS3)
itkBinaryGeneratorImageFilterISS3IF3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3___New_orig__
itkBinaryGeneratorImageFilterISS3IF3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3ISS3_cast


def itkBinaryGeneratorImageFilterISS3IF3IUC3_New():
    return itkBinaryGeneratorImageFilterISS3IF3IUC3.New()

class itkBinaryGeneratorImageFilterISS3IF3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IF3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IF3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IF3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_swigregister(itkBinaryGeneratorImageFilterISS3IF3IUC3)
itkBinaryGeneratorImageFilterISS3IF3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3___New_orig__
itkBinaryGeneratorImageFilterISS3IF3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUC3_cast


def itkBinaryGeneratorImageFilterISS3IF3IUS3_New():
    return itkBinaryGeneratorImageFilterISS3IF3IUS3.New()

class itkBinaryGeneratorImageFilterISS3IF3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IF3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IF3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IF3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_swigregister(itkBinaryGeneratorImageFilterISS3IF3IUS3)
itkBinaryGeneratorImageFilterISS3IF3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3___New_orig__
itkBinaryGeneratorImageFilterISS3IF3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IF3IUS3_cast


def itkBinaryGeneratorImageFilterISS3ISS3ID3_New():
    return itkBinaryGeneratorImageFilterISS3ISS3ID3.New()

class itkBinaryGeneratorImageFilterISS3ISS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ISS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ISS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ISS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_swigregister(itkBinaryGeneratorImageFilterISS3ISS3ID3)
itkBinaryGeneratorImageFilterISS3ISS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3___New_orig__
itkBinaryGeneratorImageFilterISS3ISS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ID3_cast


def itkBinaryGeneratorImageFilterISS3ISS3IF3_New():
    return itkBinaryGeneratorImageFilterISS3ISS3IF3.New()

class itkBinaryGeneratorImageFilterISS3ISS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ISS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ISS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ISS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_swigregister(itkBinaryGeneratorImageFilterISS3ISS3IF3)
itkBinaryGeneratorImageFilterISS3ISS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3___New_orig__
itkBinaryGeneratorImageFilterISS3ISS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IF3_cast


def itkBinaryGeneratorImageFilterISS3ISS3ISS3_New():
    return itkBinaryGeneratorImageFilterISS3ISS3ISS3.New()

class itkBinaryGeneratorImageFilterISS3ISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ISS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ISS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ISS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_swigregister(itkBinaryGeneratorImageFilterISS3ISS3ISS3)
itkBinaryGeneratorImageFilterISS3ISS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3___New_orig__
itkBinaryGeneratorImageFilterISS3ISS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3ISS3_cast


def itkBinaryGeneratorImageFilterISS3ISS3IUC3_New():
    return itkBinaryGeneratorImageFilterISS3ISS3IUC3.New()

class itkBinaryGeneratorImageFilterISS3ISS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ISS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ISS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ISS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_swigregister(itkBinaryGeneratorImageFilterISS3ISS3IUC3)
itkBinaryGeneratorImageFilterISS3ISS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3___New_orig__
itkBinaryGeneratorImageFilterISS3ISS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUC3_cast


def itkBinaryGeneratorImageFilterISS3ISS3IUS3_New():
    return itkBinaryGeneratorImageFilterISS3ISS3IUS3.New()

class itkBinaryGeneratorImageFilterISS3ISS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3ISS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3ISS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3ISS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_swigregister(itkBinaryGeneratorImageFilterISS3ISS3IUS3)
itkBinaryGeneratorImageFilterISS3ISS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3___New_orig__
itkBinaryGeneratorImageFilterISS3ISS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3ISS3IUS3_cast


def itkBinaryGeneratorImageFilterISS3IUC3ID3_New():
    return itkBinaryGeneratorImageFilterISS3IUC3ID3.New()

class itkBinaryGeneratorImageFilterISS3IUC3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUC3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUC3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUC3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_swigregister(itkBinaryGeneratorImageFilterISS3IUC3ID3)
itkBinaryGeneratorImageFilterISS3IUC3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3___New_orig__
itkBinaryGeneratorImageFilterISS3IUC3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ID3_cast


def itkBinaryGeneratorImageFilterISS3IUC3IF3_New():
    return itkBinaryGeneratorImageFilterISS3IUC3IF3.New()

class itkBinaryGeneratorImageFilterISS3IUC3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUC3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUC3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUC3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_swigregister(itkBinaryGeneratorImageFilterISS3IUC3IF3)
itkBinaryGeneratorImageFilterISS3IUC3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3___New_orig__
itkBinaryGeneratorImageFilterISS3IUC3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IF3_cast


def itkBinaryGeneratorImageFilterISS3IUC3ISS3_New():
    return itkBinaryGeneratorImageFilterISS3IUC3ISS3.New()

class itkBinaryGeneratorImageFilterISS3IUC3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUC3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUC3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUC3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_swigregister(itkBinaryGeneratorImageFilterISS3IUC3ISS3)
itkBinaryGeneratorImageFilterISS3IUC3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3___New_orig__
itkBinaryGeneratorImageFilterISS3IUC3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3ISS3_cast


def itkBinaryGeneratorImageFilterISS3IUC3IUC3_New():
    return itkBinaryGeneratorImageFilterISS3IUC3IUC3.New()

class itkBinaryGeneratorImageFilterISS3IUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUC3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUC3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUC3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_swigregister(itkBinaryGeneratorImageFilterISS3IUC3IUC3)
itkBinaryGeneratorImageFilterISS3IUC3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3___New_orig__
itkBinaryGeneratorImageFilterISS3IUC3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUC3_cast


def itkBinaryGeneratorImageFilterISS3IUC3IUS3_New():
    return itkBinaryGeneratorImageFilterISS3IUC3IUS3.New()

class itkBinaryGeneratorImageFilterISS3IUC3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUC3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUC3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUC3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_swigregister(itkBinaryGeneratorImageFilterISS3IUC3IUS3)
itkBinaryGeneratorImageFilterISS3IUC3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3___New_orig__
itkBinaryGeneratorImageFilterISS3IUC3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUC3IUS3_cast


def itkBinaryGeneratorImageFilterISS3IUS3ID3_New():
    return itkBinaryGeneratorImageFilterISS3IUS3ID3.New()

class itkBinaryGeneratorImageFilterISS3IUS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_swigregister(itkBinaryGeneratorImageFilterISS3IUS3ID3)
itkBinaryGeneratorImageFilterISS3IUS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3___New_orig__
itkBinaryGeneratorImageFilterISS3IUS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ID3_cast


def itkBinaryGeneratorImageFilterISS3IUS3IF3_New():
    return itkBinaryGeneratorImageFilterISS3IUS3IF3.New()

class itkBinaryGeneratorImageFilterISS3IUS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_swigregister(itkBinaryGeneratorImageFilterISS3IUS3IF3)
itkBinaryGeneratorImageFilterISS3IUS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3___New_orig__
itkBinaryGeneratorImageFilterISS3IUS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IF3_cast


def itkBinaryGeneratorImageFilterISS3IUS3ISS3_New():
    return itkBinaryGeneratorImageFilterISS3IUS3ISS3.New()

class itkBinaryGeneratorImageFilterISS3IUS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_swigregister(itkBinaryGeneratorImageFilterISS3IUS3ISS3)
itkBinaryGeneratorImageFilterISS3IUS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3___New_orig__
itkBinaryGeneratorImageFilterISS3IUS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3ISS3_cast


def itkBinaryGeneratorImageFilterISS3IUS3IUC3_New():
    return itkBinaryGeneratorImageFilterISS3IUS3IUC3.New()

class itkBinaryGeneratorImageFilterISS3IUS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_swigregister(itkBinaryGeneratorImageFilterISS3IUS3IUC3)
itkBinaryGeneratorImageFilterISS3IUS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3___New_orig__
itkBinaryGeneratorImageFilterISS3IUS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUC3_cast


def itkBinaryGeneratorImageFilterISS3IUS3IUS3_New():
    return itkBinaryGeneratorImageFilterISS3IUS3IUS3.New()

class itkBinaryGeneratorImageFilterISS3IUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterISS3IUS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterISS3IUS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterISS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterISS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterISS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterISS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterISS3IUS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_swigregister(itkBinaryGeneratorImageFilterISS3IUS3IUS3)
itkBinaryGeneratorImageFilterISS3IUS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3___New_orig__
itkBinaryGeneratorImageFilterISS3IUS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterISS3IUS3IUS3_cast


def itkBinaryGeneratorImageFilterIUC2ID2ID2_New():
    return itkBinaryGeneratorImageFilterIUC2ID2ID2.New()

class itkBinaryGeneratorImageFilterIUC2ID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ID2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ID2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ID2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_swigregister(itkBinaryGeneratorImageFilterIUC2ID2ID2)
itkBinaryGeneratorImageFilterIUC2ID2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2___New_orig__
itkBinaryGeneratorImageFilterIUC2ID2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ID2_cast


def itkBinaryGeneratorImageFilterIUC2ID2IF2_New():
    return itkBinaryGeneratorImageFilterIUC2ID2IF2.New()

class itkBinaryGeneratorImageFilterIUC2ID2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ID2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ID2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ID2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_swigregister(itkBinaryGeneratorImageFilterIUC2ID2IF2)
itkBinaryGeneratorImageFilterIUC2ID2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2___New_orig__
itkBinaryGeneratorImageFilterIUC2ID2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IF2_cast


def itkBinaryGeneratorImageFilterIUC2ID2ISS2_New():
    return itkBinaryGeneratorImageFilterIUC2ID2ISS2.New()

class itkBinaryGeneratorImageFilterIUC2ID2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ID2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ID2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ID2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_swigregister(itkBinaryGeneratorImageFilterIUC2ID2ISS2)
itkBinaryGeneratorImageFilterIUC2ID2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUC2ID2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2ISS2_cast


def itkBinaryGeneratorImageFilterIUC2ID2IUC2_New():
    return itkBinaryGeneratorImageFilterIUC2ID2IUC2.New()

class itkBinaryGeneratorImageFilterIUC2ID2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ID2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ID2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ID2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_swigregister(itkBinaryGeneratorImageFilterIUC2ID2IUC2)
itkBinaryGeneratorImageFilterIUC2ID2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2ID2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUC2_cast


def itkBinaryGeneratorImageFilterIUC2ID2IUS2_New():
    return itkBinaryGeneratorImageFilterIUC2ID2IUS2.New()

class itkBinaryGeneratorImageFilterIUC2ID2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ID2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ID2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ID2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_swigregister(itkBinaryGeneratorImageFilterIUC2ID2IUS2)
itkBinaryGeneratorImageFilterIUC2ID2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUC2ID2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ID2IUS2_cast


def itkBinaryGeneratorImageFilterIUC2IF2ID2_New():
    return itkBinaryGeneratorImageFilterIUC2IF2ID2.New()

class itkBinaryGeneratorImageFilterIUC2IF2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IF2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IF2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IF2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_swigregister(itkBinaryGeneratorImageFilterIUC2IF2ID2)
itkBinaryGeneratorImageFilterIUC2IF2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2___New_orig__
itkBinaryGeneratorImageFilterIUC2IF2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ID2_cast


def itkBinaryGeneratorImageFilterIUC2IF2IF2_New():
    return itkBinaryGeneratorImageFilterIUC2IF2IF2.New()

class itkBinaryGeneratorImageFilterIUC2IF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IF2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IF2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IF2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_swigregister(itkBinaryGeneratorImageFilterIUC2IF2IF2)
itkBinaryGeneratorImageFilterIUC2IF2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2___New_orig__
itkBinaryGeneratorImageFilterIUC2IF2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IF2_cast


def itkBinaryGeneratorImageFilterIUC2IF2ISS2_New():
    return itkBinaryGeneratorImageFilterIUC2IF2ISS2.New()

class itkBinaryGeneratorImageFilterIUC2IF2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IF2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IF2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IF2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_swigregister(itkBinaryGeneratorImageFilterIUC2IF2ISS2)
itkBinaryGeneratorImageFilterIUC2IF2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IF2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2ISS2_cast


def itkBinaryGeneratorImageFilterIUC2IF2IUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IF2IUC2.New()

class itkBinaryGeneratorImageFilterIUC2IF2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IF2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IF2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IF2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IF2IUC2)
itkBinaryGeneratorImageFilterIUC2IF2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IF2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUC2_cast


def itkBinaryGeneratorImageFilterIUC2IF2IUS2_New():
    return itkBinaryGeneratorImageFilterIUC2IF2IUS2.New()

class itkBinaryGeneratorImageFilterIUC2IF2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IF2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IF2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IF2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_swigregister(itkBinaryGeneratorImageFilterIUC2IF2IUS2)
itkBinaryGeneratorImageFilterIUC2IF2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IF2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IF2IUS2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2ID2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2ID2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2ID2)
itkBinaryGeneratorImageFilterIUC2ISS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ID2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2IF2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2IF2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2IF2)
itkBinaryGeneratorImageFilterIUC2ISS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IF2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2)
itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2ISS2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2ISS2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2ISS2)
itkBinaryGeneratorImageFilterIUC2ISS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2ISS2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2IUC2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2IUC2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2IUC2)
itkBinaryGeneratorImageFilterIUC2ISS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUC2_cast


def itkBinaryGeneratorImageFilterIUC2ISS2IUS2_New():
    return itkBinaryGeneratorImageFilterIUC2ISS2IUS2.New()

class itkBinaryGeneratorImageFilterIUC2ISS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2ISS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2ISS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2ISS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_swigregister(itkBinaryGeneratorImageFilterIUC2ISS2IUS2)
itkBinaryGeneratorImageFilterIUC2ISS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUC2ISS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IUS2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2ID2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2ID2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2ID2)
itkBinaryGeneratorImageFilterIUC2IUC2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ID2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2IF2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2IF2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2IF2)
itkBinaryGeneratorImageFilterIUC2IUC2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IF2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2)
itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2ISS2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2ISS2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2ISS2)
itkBinaryGeneratorImageFilterIUC2IUC2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2ISS2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2IUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2IUC2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2IUC2)
itkBinaryGeneratorImageFilterIUC2IUC2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUC2_cast


def itkBinaryGeneratorImageFilterIUC2IUC2IUS2_New():
    return itkBinaryGeneratorImageFilterIUC2IUC2IUS2.New()

class itkBinaryGeneratorImageFilterIUC2IUC2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUC2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUC2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUC2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_swigregister(itkBinaryGeneratorImageFilterIUC2IUC2IUS2)
itkBinaryGeneratorImageFilterIUC2IUC2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUC2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IUS2_cast


def itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2)
itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2ID2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2ID2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2ID2)
itkBinaryGeneratorImageFilterIUC2IUS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ID2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2IF2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2IF2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2IF2)
itkBinaryGeneratorImageFilterIUC2IUS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IF2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2)
itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2ISS2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2ISS2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2ISS2)
itkBinaryGeneratorImageFilterIUC2IUS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2ISS2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2IUC2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2IUC2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2IUC2)
itkBinaryGeneratorImageFilterIUC2IUS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUC2_cast


def itkBinaryGeneratorImageFilterIUC2IUS2IUS2_New():
    return itkBinaryGeneratorImageFilterIUC2IUS2IUS2.New()

class itkBinaryGeneratorImageFilterIUC2IUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC2IUS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC2IUS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUC2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC2IUS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_swigregister(itkBinaryGeneratorImageFilterIUC2IUS2IUS2)
itkBinaryGeneratorImageFilterIUC2IUS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUC2IUS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IUS2_cast


def itkBinaryGeneratorImageFilterIUC3ID3ID3_New():
    return itkBinaryGeneratorImageFilterIUC3ID3ID3.New()

class itkBinaryGeneratorImageFilterIUC3ID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ID3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ID3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ID3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_swigregister(itkBinaryGeneratorImageFilterIUC3ID3ID3)
itkBinaryGeneratorImageFilterIUC3ID3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3___New_orig__
itkBinaryGeneratorImageFilterIUC3ID3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ID3_cast


def itkBinaryGeneratorImageFilterIUC3ID3IF3_New():
    return itkBinaryGeneratorImageFilterIUC3ID3IF3.New()

class itkBinaryGeneratorImageFilterIUC3ID3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ID3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ID3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ID3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_swigregister(itkBinaryGeneratorImageFilterIUC3ID3IF3)
itkBinaryGeneratorImageFilterIUC3ID3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3___New_orig__
itkBinaryGeneratorImageFilterIUC3ID3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IF3_cast


def itkBinaryGeneratorImageFilterIUC3ID3ISS3_New():
    return itkBinaryGeneratorImageFilterIUC3ID3ISS3.New()

class itkBinaryGeneratorImageFilterIUC3ID3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ID3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ID3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ID3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_swigregister(itkBinaryGeneratorImageFilterIUC3ID3ISS3)
itkBinaryGeneratorImageFilterIUC3ID3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUC3ID3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3ISS3_cast


def itkBinaryGeneratorImageFilterIUC3ID3IUC3_New():
    return itkBinaryGeneratorImageFilterIUC3ID3IUC3.New()

class itkBinaryGeneratorImageFilterIUC3ID3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ID3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ID3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ID3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_swigregister(itkBinaryGeneratorImageFilterIUC3ID3IUC3)
itkBinaryGeneratorImageFilterIUC3ID3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3ID3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUC3_cast


def itkBinaryGeneratorImageFilterIUC3ID3IUS3_New():
    return itkBinaryGeneratorImageFilterIUC3ID3IUS3.New()

class itkBinaryGeneratorImageFilterIUC3ID3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ID3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ID3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ID3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_swigregister(itkBinaryGeneratorImageFilterIUC3ID3IUS3)
itkBinaryGeneratorImageFilterIUC3ID3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUC3ID3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ID3IUS3_cast


def itkBinaryGeneratorImageFilterIUC3IF3ID3_New():
    return itkBinaryGeneratorImageFilterIUC3IF3ID3.New()

class itkBinaryGeneratorImageFilterIUC3IF3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IF3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IF3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IF3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_swigregister(itkBinaryGeneratorImageFilterIUC3IF3ID3)
itkBinaryGeneratorImageFilterIUC3IF3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3___New_orig__
itkBinaryGeneratorImageFilterIUC3IF3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ID3_cast


def itkBinaryGeneratorImageFilterIUC3IF3IF3_New():
    return itkBinaryGeneratorImageFilterIUC3IF3IF3.New()

class itkBinaryGeneratorImageFilterIUC3IF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IF3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IF3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IF3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_swigregister(itkBinaryGeneratorImageFilterIUC3IF3IF3)
itkBinaryGeneratorImageFilterIUC3IF3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3___New_orig__
itkBinaryGeneratorImageFilterIUC3IF3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IF3_cast


def itkBinaryGeneratorImageFilterIUC3IF3ISS3_New():
    return itkBinaryGeneratorImageFilterIUC3IF3ISS3.New()

class itkBinaryGeneratorImageFilterIUC3IF3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IF3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IF3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IF3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_swigregister(itkBinaryGeneratorImageFilterIUC3IF3ISS3)
itkBinaryGeneratorImageFilterIUC3IF3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IF3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3ISS3_cast


def itkBinaryGeneratorImageFilterIUC3IF3IUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IF3IUC3.New()

class itkBinaryGeneratorImageFilterIUC3IF3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IF3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IF3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IF3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IF3IUC3)
itkBinaryGeneratorImageFilterIUC3IF3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IF3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUC3_cast


def itkBinaryGeneratorImageFilterIUC3IF3IUS3_New():
    return itkBinaryGeneratorImageFilterIUC3IF3IUS3.New()

class itkBinaryGeneratorImageFilterIUC3IF3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IF3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IF3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IF3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_swigregister(itkBinaryGeneratorImageFilterIUC3IF3IUS3)
itkBinaryGeneratorImageFilterIUC3IF3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IF3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IF3IUS3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3ID3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3ID3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3ID3)
itkBinaryGeneratorImageFilterIUC3ISS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ID3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3IF3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3IF3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3IF3)
itkBinaryGeneratorImageFilterIUC3ISS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IF3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3)
itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3ISS3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3ISS3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3ISS3)
itkBinaryGeneratorImageFilterIUC3ISS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3ISS3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3IUC3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3IUC3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3IUC3)
itkBinaryGeneratorImageFilterIUC3ISS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUC3_cast


def itkBinaryGeneratorImageFilterIUC3ISS3IUS3_New():
    return itkBinaryGeneratorImageFilterIUC3ISS3IUS3.New()

class itkBinaryGeneratorImageFilterIUC3ISS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3ISS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3ISS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3ISS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_swigregister(itkBinaryGeneratorImageFilterIUC3ISS3IUS3)
itkBinaryGeneratorImageFilterIUC3ISS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUC3ISS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IUS3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3ID3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3ID3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3ID3)
itkBinaryGeneratorImageFilterIUC3IUC3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ID3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3IF3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3IF3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3IF3)
itkBinaryGeneratorImageFilterIUC3IUC3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IF3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3)
itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3ISS3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3ISS3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3ISS3)
itkBinaryGeneratorImageFilterIUC3IUC3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3ISS3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3IUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3IUC3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3IUC3)
itkBinaryGeneratorImageFilterIUC3IUC3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUC3_cast


def itkBinaryGeneratorImageFilterIUC3IUC3IUS3_New():
    return itkBinaryGeneratorImageFilterIUC3IUC3IUS3.New()

class itkBinaryGeneratorImageFilterIUC3IUC3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUC3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUC3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUC3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_swigregister(itkBinaryGeneratorImageFilterIUC3IUC3IUS3)
itkBinaryGeneratorImageFilterIUC3IUC3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUC3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IUS3_cast


def itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3)
itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3ID3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3ID3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3ID3)
itkBinaryGeneratorImageFilterIUC3IUS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ID3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3IF3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3IF3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3IF3)
itkBinaryGeneratorImageFilterIUC3IUS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IF3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3)
itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3ISS3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3ISS3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3ISS3)
itkBinaryGeneratorImageFilterIUC3IUS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3ISS3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3IUC3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3IUC3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3IUC3)
itkBinaryGeneratorImageFilterIUC3IUS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUC3_cast


def itkBinaryGeneratorImageFilterIUC3IUS3IUS3_New():
    return itkBinaryGeneratorImageFilterIUC3IUS3IUS3.New()

class itkBinaryGeneratorImageFilterIUC3IUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUC3IUS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUC3IUS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUC3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUC3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUC3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUC3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUC3IUS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_swigregister(itkBinaryGeneratorImageFilterIUC3IUS3IUS3)
itkBinaryGeneratorImageFilterIUC3IUS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUC3IUS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IUS3_cast


def itkBinaryGeneratorImageFilterIUS2ID2ID2_New():
    return itkBinaryGeneratorImageFilterIUS2ID2ID2.New()

class itkBinaryGeneratorImageFilterIUS2ID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ID2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ID2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ID2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_swigregister(itkBinaryGeneratorImageFilterIUS2ID2ID2)
itkBinaryGeneratorImageFilterIUS2ID2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2___New_orig__
itkBinaryGeneratorImageFilterIUS2ID2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ID2_cast


def itkBinaryGeneratorImageFilterIUS2ID2IF2_New():
    return itkBinaryGeneratorImageFilterIUS2ID2IF2.New()

class itkBinaryGeneratorImageFilterIUS2ID2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ID2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ID2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ID2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ID2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_swigregister(itkBinaryGeneratorImageFilterIUS2ID2IF2)
itkBinaryGeneratorImageFilterIUS2ID2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2___New_orig__
itkBinaryGeneratorImageFilterIUS2ID2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IF2_cast


def itkBinaryGeneratorImageFilterIUS2ID2ISS2_New():
    return itkBinaryGeneratorImageFilterIUS2ID2ISS2.New()

class itkBinaryGeneratorImageFilterIUS2ID2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ID2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ID2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ID2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_swigregister(itkBinaryGeneratorImageFilterIUS2ID2ISS2)
itkBinaryGeneratorImageFilterIUS2ID2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUS2ID2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2ISS2_cast


def itkBinaryGeneratorImageFilterIUS2ID2IUC2_New():
    return itkBinaryGeneratorImageFilterIUS2ID2IUC2.New()

class itkBinaryGeneratorImageFilterIUS2ID2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ID2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ID2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ID2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_swigregister(itkBinaryGeneratorImageFilterIUS2ID2IUC2)
itkBinaryGeneratorImageFilterIUS2ID2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUS2ID2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUC2_cast


def itkBinaryGeneratorImageFilterIUS2ID2IUS2_New():
    return itkBinaryGeneratorImageFilterIUS2ID2IUS2.New()

class itkBinaryGeneratorImageFilterIUS2ID2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ID2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ID2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ID2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_swigregister(itkBinaryGeneratorImageFilterIUS2ID2IUS2)
itkBinaryGeneratorImageFilterIUS2ID2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUS2ID2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ID2IUS2_cast


def itkBinaryGeneratorImageFilterIUS2IF2ID2_New():
    return itkBinaryGeneratorImageFilterIUS2IF2ID2.New()

class itkBinaryGeneratorImageFilterIUS2IF2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IF2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IF2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IF2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IF2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_swigregister(itkBinaryGeneratorImageFilterIUS2IF2ID2)
itkBinaryGeneratorImageFilterIUS2IF2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2___New_orig__
itkBinaryGeneratorImageFilterIUS2IF2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ID2_cast


def itkBinaryGeneratorImageFilterIUS2IF2IF2_New():
    return itkBinaryGeneratorImageFilterIUS2IF2IF2.New()

class itkBinaryGeneratorImageFilterIUS2IF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IF2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IF2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IF2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_swigregister(itkBinaryGeneratorImageFilterIUS2IF2IF2)
itkBinaryGeneratorImageFilterIUS2IF2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2___New_orig__
itkBinaryGeneratorImageFilterIUS2IF2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IF2_cast


def itkBinaryGeneratorImageFilterIUS2IF2ISS2_New():
    return itkBinaryGeneratorImageFilterIUS2IF2ISS2.New()

class itkBinaryGeneratorImageFilterIUS2IF2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IF2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IF2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IF2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_swigregister(itkBinaryGeneratorImageFilterIUS2IF2ISS2)
itkBinaryGeneratorImageFilterIUS2IF2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IF2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2ISS2_cast


def itkBinaryGeneratorImageFilterIUS2IF2IUC2_New():
    return itkBinaryGeneratorImageFilterIUS2IF2IUC2.New()

class itkBinaryGeneratorImageFilterIUS2IF2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IF2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IF2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IF2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_swigregister(itkBinaryGeneratorImageFilterIUS2IF2IUC2)
itkBinaryGeneratorImageFilterIUS2IF2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUS2IF2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUC2_cast


def itkBinaryGeneratorImageFilterIUS2IF2IUS2_New():
    return itkBinaryGeneratorImageFilterIUS2IF2IUS2.New()

class itkBinaryGeneratorImageFilterIUS2IF2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IF2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IF2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IF2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_swigregister(itkBinaryGeneratorImageFilterIUS2IF2IUS2)
itkBinaryGeneratorImageFilterIUS2IF2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IF2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IF2IUS2_cast


def itkBinaryGeneratorImageFilterIUS2ISS2ID2_New():
    return itkBinaryGeneratorImageFilterIUS2ISS2ID2.New()

class itkBinaryGeneratorImageFilterIUS2ISS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ISS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ISS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ISS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ISS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_swigregister(itkBinaryGeneratorImageFilterIUS2ISS2ID2)
itkBinaryGeneratorImageFilterIUS2ISS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2___New_orig__
itkBinaryGeneratorImageFilterIUS2ISS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ID2_cast


def itkBinaryGeneratorImageFilterIUS2ISS2IF2_New():
    return itkBinaryGeneratorImageFilterIUS2ISS2IF2.New()

class itkBinaryGeneratorImageFilterIUS2ISS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ISS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ISS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ISS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ISS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_swigregister(itkBinaryGeneratorImageFilterIUS2ISS2IF2)
itkBinaryGeneratorImageFilterIUS2ISS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2___New_orig__
itkBinaryGeneratorImageFilterIUS2ISS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IF2_cast


def itkBinaryGeneratorImageFilterIUS2ISS2ISS2_New():
    return itkBinaryGeneratorImageFilterIUS2ISS2ISS2.New()

class itkBinaryGeneratorImageFilterIUS2ISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ISS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ISS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ISS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_swigregister(itkBinaryGeneratorImageFilterIUS2ISS2ISS2)
itkBinaryGeneratorImageFilterIUS2ISS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUS2ISS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2ISS2_cast


def itkBinaryGeneratorImageFilterIUS2ISS2IUC2_New():
    return itkBinaryGeneratorImageFilterIUS2ISS2IUC2.New()

class itkBinaryGeneratorImageFilterIUS2ISS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ISS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ISS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ISS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_swigregister(itkBinaryGeneratorImageFilterIUS2ISS2IUC2)
itkBinaryGeneratorImageFilterIUS2ISS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUS2ISS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUC2_cast


def itkBinaryGeneratorImageFilterIUS2ISS2IUS2_New():
    return itkBinaryGeneratorImageFilterIUS2ISS2IUS2.New()

class itkBinaryGeneratorImageFilterIUS2ISS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2ISS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2ISS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2ISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2ISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2ISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2ISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2ISS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_swigregister(itkBinaryGeneratorImageFilterIUS2ISS2IUS2)
itkBinaryGeneratorImageFilterIUS2ISS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUS2ISS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2ISS2IUS2_cast


def itkBinaryGeneratorImageFilterIUS2IUC2ID2_New():
    return itkBinaryGeneratorImageFilterIUS2IUC2ID2.New()

class itkBinaryGeneratorImageFilterIUS2IUC2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUC2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUC2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUC2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUC2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_swigregister(itkBinaryGeneratorImageFilterIUS2IUC2ID2)
itkBinaryGeneratorImageFilterIUS2IUC2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUC2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ID2_cast


def itkBinaryGeneratorImageFilterIUS2IUC2IF2_New():
    return itkBinaryGeneratorImageFilterIUS2IUC2IF2.New()

class itkBinaryGeneratorImageFilterIUS2IUC2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUC2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUC2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUC2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUC2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_swigregister(itkBinaryGeneratorImageFilterIUS2IUC2IF2)
itkBinaryGeneratorImageFilterIUS2IUC2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUC2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IF2_cast


def itkBinaryGeneratorImageFilterIUS2IUC2ISS2_New():
    return itkBinaryGeneratorImageFilterIUS2IUC2ISS2.New()

class itkBinaryGeneratorImageFilterIUS2IUC2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUC2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUC2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUC2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_swigregister(itkBinaryGeneratorImageFilterIUS2IUC2ISS2)
itkBinaryGeneratorImageFilterIUS2IUC2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUC2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2ISS2_cast


def itkBinaryGeneratorImageFilterIUS2IUC2IUC2_New():
    return itkBinaryGeneratorImageFilterIUS2IUC2IUC2.New()

class itkBinaryGeneratorImageFilterIUS2IUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUC2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUC2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUC2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_swigregister(itkBinaryGeneratorImageFilterIUS2IUC2IUC2)
itkBinaryGeneratorImageFilterIUS2IUC2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUC2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUC2_cast


def itkBinaryGeneratorImageFilterIUS2IUC2IUS2_New():
    return itkBinaryGeneratorImageFilterIUS2IUC2IUS2.New()

class itkBinaryGeneratorImageFilterIUS2IUC2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUC2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUC2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUC2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_swigregister(itkBinaryGeneratorImageFilterIUS2IUC2IUS2)
itkBinaryGeneratorImageFilterIUS2IUC2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUC2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUC2IUS2_cast


def itkBinaryGeneratorImageFilterIUS2IUS2ID2_New():
    return itkBinaryGeneratorImageFilterIUS2IUS2ID2.New()

class itkBinaryGeneratorImageFilterIUS2IUS2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ID2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUS2ID2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUS2ID2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUS2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUS2ID2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_swigregister(itkBinaryGeneratorImageFilterIUS2IUS2ID2)
itkBinaryGeneratorImageFilterIUS2IUS2ID2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUS2ID2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ID2_cast


def itkBinaryGeneratorImageFilterIUS2IUS2IF2_New():
    return itkBinaryGeneratorImageFilterIUS2IUS2IF2.New()

class itkBinaryGeneratorImageFilterIUS2IUS2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IF2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUS2IF2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUS2IF2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUS2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUS2IF2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_swigregister(itkBinaryGeneratorImageFilterIUS2IUS2IF2)
itkBinaryGeneratorImageFilterIUS2IUS2IF2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUS2IF2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IF2_cast


def itkBinaryGeneratorImageFilterIUS2IUS2ISS2_New():
    return itkBinaryGeneratorImageFilterIUS2IUS2ISS2.New()

class itkBinaryGeneratorImageFilterIUS2IUS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2ISS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUS2ISS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUS2ISS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUS2ISS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_swigregister(itkBinaryGeneratorImageFilterIUS2IUS2ISS2)
itkBinaryGeneratorImageFilterIUS2IUS2ISS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUS2ISS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2ISS2_cast


def itkBinaryGeneratorImageFilterIUS2IUS2IUC2_New():
    return itkBinaryGeneratorImageFilterIUS2IUS2IUC2.New()

class itkBinaryGeneratorImageFilterIUS2IUS2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUC2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUS2IUC2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUS2IUC2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUS2IUC2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_swigregister(itkBinaryGeneratorImageFilterIUS2IUS2IUC2)
itkBinaryGeneratorImageFilterIUS2IUS2IUC2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUS2IUC2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUC2_cast


def itkBinaryGeneratorImageFilterIUS2IUS2IUS2_New():
    return itkBinaryGeneratorImageFilterIUS2IUS2IUS2.New()

class itkBinaryGeneratorImageFilterIUS2IUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS2IUS2IUS2
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS2IUS2IUS2

        Create a new object of the class itkBinaryGeneratorImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS2IUS2IUS2 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_swigregister(itkBinaryGeneratorImageFilterIUS2IUS2IUS2)
itkBinaryGeneratorImageFilterIUS2IUS2IUS2___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2___New_orig__
itkBinaryGeneratorImageFilterIUS2IUS2IUS2_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS2IUS2IUS2_cast


def itkBinaryGeneratorImageFilterIUS3ID3ID3_New():
    return itkBinaryGeneratorImageFilterIUS3ID3ID3.New()

class itkBinaryGeneratorImageFilterIUS3ID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ID3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ID3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ID3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_swigregister(itkBinaryGeneratorImageFilterIUS3ID3ID3)
itkBinaryGeneratorImageFilterIUS3ID3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3___New_orig__
itkBinaryGeneratorImageFilterIUS3ID3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ID3_cast


def itkBinaryGeneratorImageFilterIUS3ID3IF3_New():
    return itkBinaryGeneratorImageFilterIUS3ID3IF3.New()

class itkBinaryGeneratorImageFilterIUS3ID3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ID3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ID3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ID3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ID3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_swigregister(itkBinaryGeneratorImageFilterIUS3ID3IF3)
itkBinaryGeneratorImageFilterIUS3ID3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3___New_orig__
itkBinaryGeneratorImageFilterIUS3ID3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IF3_cast


def itkBinaryGeneratorImageFilterIUS3ID3ISS3_New():
    return itkBinaryGeneratorImageFilterIUS3ID3ISS3.New()

class itkBinaryGeneratorImageFilterIUS3ID3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ID3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ID3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ID3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_swigregister(itkBinaryGeneratorImageFilterIUS3ID3ISS3)
itkBinaryGeneratorImageFilterIUS3ID3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUS3ID3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3ISS3_cast


def itkBinaryGeneratorImageFilterIUS3ID3IUC3_New():
    return itkBinaryGeneratorImageFilterIUS3ID3IUC3.New()

class itkBinaryGeneratorImageFilterIUS3ID3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ID3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ID3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ID3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_swigregister(itkBinaryGeneratorImageFilterIUS3ID3IUC3)
itkBinaryGeneratorImageFilterIUS3ID3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUS3ID3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUC3_cast


def itkBinaryGeneratorImageFilterIUS3ID3IUS3_New():
    return itkBinaryGeneratorImageFilterIUS3ID3IUS3.New()

class itkBinaryGeneratorImageFilterIUS3ID3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ID3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ID3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ID3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_swigregister(itkBinaryGeneratorImageFilterIUS3ID3IUS3)
itkBinaryGeneratorImageFilterIUS3ID3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUS3ID3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ID3IUS3_cast


def itkBinaryGeneratorImageFilterIUS3IF3ID3_New():
    return itkBinaryGeneratorImageFilterIUS3IF3ID3.New()

class itkBinaryGeneratorImageFilterIUS3IF3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IF3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IF3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IF3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IF3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_swigregister(itkBinaryGeneratorImageFilterIUS3IF3ID3)
itkBinaryGeneratorImageFilterIUS3IF3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3___New_orig__
itkBinaryGeneratorImageFilterIUS3IF3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ID3_cast


def itkBinaryGeneratorImageFilterIUS3IF3IF3_New():
    return itkBinaryGeneratorImageFilterIUS3IF3IF3.New()

class itkBinaryGeneratorImageFilterIUS3IF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IF3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IF3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IF3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_swigregister(itkBinaryGeneratorImageFilterIUS3IF3IF3)
itkBinaryGeneratorImageFilterIUS3IF3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3___New_orig__
itkBinaryGeneratorImageFilterIUS3IF3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IF3_cast


def itkBinaryGeneratorImageFilterIUS3IF3ISS3_New():
    return itkBinaryGeneratorImageFilterIUS3IF3ISS3.New()

class itkBinaryGeneratorImageFilterIUS3IF3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IF3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IF3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IF3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_swigregister(itkBinaryGeneratorImageFilterIUS3IF3ISS3)
itkBinaryGeneratorImageFilterIUS3IF3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IF3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3ISS3_cast


def itkBinaryGeneratorImageFilterIUS3IF3IUC3_New():
    return itkBinaryGeneratorImageFilterIUS3IF3IUC3.New()

class itkBinaryGeneratorImageFilterIUS3IF3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IF3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IF3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IF3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_swigregister(itkBinaryGeneratorImageFilterIUS3IF3IUC3)
itkBinaryGeneratorImageFilterIUS3IF3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUS3IF3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUC3_cast


def itkBinaryGeneratorImageFilterIUS3IF3IUS3_New():
    return itkBinaryGeneratorImageFilterIUS3IF3IUS3.New()

class itkBinaryGeneratorImageFilterIUS3IF3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IF3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IF3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IF3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_swigregister(itkBinaryGeneratorImageFilterIUS3IF3IUS3)
itkBinaryGeneratorImageFilterIUS3IF3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IF3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IF3IUS3_cast


def itkBinaryGeneratorImageFilterIUS3ISS3ID3_New():
    return itkBinaryGeneratorImageFilterIUS3ISS3ID3.New()

class itkBinaryGeneratorImageFilterIUS3ISS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ISS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ISS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ISS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ISS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_swigregister(itkBinaryGeneratorImageFilterIUS3ISS3ID3)
itkBinaryGeneratorImageFilterIUS3ISS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3___New_orig__
itkBinaryGeneratorImageFilterIUS3ISS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ID3_cast


def itkBinaryGeneratorImageFilterIUS3ISS3IF3_New():
    return itkBinaryGeneratorImageFilterIUS3ISS3IF3.New()

class itkBinaryGeneratorImageFilterIUS3ISS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ISS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ISS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ISS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ISS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_swigregister(itkBinaryGeneratorImageFilterIUS3ISS3IF3)
itkBinaryGeneratorImageFilterIUS3ISS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3___New_orig__
itkBinaryGeneratorImageFilterIUS3ISS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IF3_cast


def itkBinaryGeneratorImageFilterIUS3ISS3ISS3_New():
    return itkBinaryGeneratorImageFilterIUS3ISS3ISS3.New()

class itkBinaryGeneratorImageFilterIUS3ISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ISS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ISS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ISS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_swigregister(itkBinaryGeneratorImageFilterIUS3ISS3ISS3)
itkBinaryGeneratorImageFilterIUS3ISS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUS3ISS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3ISS3_cast


def itkBinaryGeneratorImageFilterIUS3ISS3IUC3_New():
    return itkBinaryGeneratorImageFilterIUS3ISS3IUC3.New()

class itkBinaryGeneratorImageFilterIUS3ISS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ISS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ISS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ISS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_swigregister(itkBinaryGeneratorImageFilterIUS3ISS3IUC3)
itkBinaryGeneratorImageFilterIUS3ISS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUS3ISS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUC3_cast


def itkBinaryGeneratorImageFilterIUS3ISS3IUS3_New():
    return itkBinaryGeneratorImageFilterIUS3ISS3IUS3.New()

class itkBinaryGeneratorImageFilterIUS3ISS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3ISS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3ISS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3ISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3ISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3ISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3ISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3ISS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_swigregister(itkBinaryGeneratorImageFilterIUS3ISS3IUS3)
itkBinaryGeneratorImageFilterIUS3ISS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUS3ISS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3ISS3IUS3_cast


def itkBinaryGeneratorImageFilterIUS3IUC3ID3_New():
    return itkBinaryGeneratorImageFilterIUS3IUC3ID3.New()

class itkBinaryGeneratorImageFilterIUS3IUC3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUC3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUC3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUC3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUC3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_swigregister(itkBinaryGeneratorImageFilterIUS3IUC3ID3)
itkBinaryGeneratorImageFilterIUS3IUC3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUC3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ID3_cast


def itkBinaryGeneratorImageFilterIUS3IUC3IF3_New():
    return itkBinaryGeneratorImageFilterIUS3IUC3IF3.New()

class itkBinaryGeneratorImageFilterIUS3IUC3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUC3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUC3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUC3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUC3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_swigregister(itkBinaryGeneratorImageFilterIUS3IUC3IF3)
itkBinaryGeneratorImageFilterIUS3IUC3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUC3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IF3_cast


def itkBinaryGeneratorImageFilterIUS3IUC3ISS3_New():
    return itkBinaryGeneratorImageFilterIUS3IUC3ISS3.New()

class itkBinaryGeneratorImageFilterIUS3IUC3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUC3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUC3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUC3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_swigregister(itkBinaryGeneratorImageFilterIUS3IUC3ISS3)
itkBinaryGeneratorImageFilterIUS3IUC3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUC3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3ISS3_cast


def itkBinaryGeneratorImageFilterIUS3IUC3IUC3_New():
    return itkBinaryGeneratorImageFilterIUS3IUC3IUC3.New()

class itkBinaryGeneratorImageFilterIUS3IUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUC3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUC3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUC3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_swigregister(itkBinaryGeneratorImageFilterIUS3IUC3IUC3)
itkBinaryGeneratorImageFilterIUS3IUC3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUC3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUC3_cast


def itkBinaryGeneratorImageFilterIUS3IUC3IUS3_New():
    return itkBinaryGeneratorImageFilterIUS3IUC3IUS3.New()

class itkBinaryGeneratorImageFilterIUS3IUC3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUC3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUC3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUC3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_swigregister(itkBinaryGeneratorImageFilterIUS3IUC3IUS3)
itkBinaryGeneratorImageFilterIUS3IUC3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUC3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUC3IUS3_cast


def itkBinaryGeneratorImageFilterIUS3IUS3ID3_New():
    return itkBinaryGeneratorImageFilterIUS3IUS3ID3.New()

class itkBinaryGeneratorImageFilterIUS3IUS3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ID3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUS3ID3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUS3ID3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUS3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUS3ID3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_swigregister(itkBinaryGeneratorImageFilterIUS3IUS3ID3)
itkBinaryGeneratorImageFilterIUS3IUS3ID3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUS3ID3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ID3_cast


def itkBinaryGeneratorImageFilterIUS3IUS3IF3_New():
    return itkBinaryGeneratorImageFilterIUS3IUS3IF3.New()

class itkBinaryGeneratorImageFilterIUS3IUS3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IF3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUS3IF3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUS3IF3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUS3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUS3IF3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_swigregister(itkBinaryGeneratorImageFilterIUS3IUS3IF3)
itkBinaryGeneratorImageFilterIUS3IUS3IF3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUS3IF3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IF3_cast


def itkBinaryGeneratorImageFilterIUS3IUS3ISS3_New():
    return itkBinaryGeneratorImageFilterIUS3IUS3ISS3.New()

class itkBinaryGeneratorImageFilterIUS3IUS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3ISS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUS3ISS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUS3ISS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUS3ISS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_swigregister(itkBinaryGeneratorImageFilterIUS3IUS3ISS3)
itkBinaryGeneratorImageFilterIUS3IUS3ISS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUS3ISS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3ISS3_cast


def itkBinaryGeneratorImageFilterIUS3IUS3IUC3_New():
    return itkBinaryGeneratorImageFilterIUS3IUS3IUC3.New()

class itkBinaryGeneratorImageFilterIUS3IUS3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUC3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUS3IUC3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUS3IUC3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUS3IUC3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_swigregister(itkBinaryGeneratorImageFilterIUS3IUS3IUC3)
itkBinaryGeneratorImageFilterIUS3IUS3IUC3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUS3IUC3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUC3_cast


def itkBinaryGeneratorImageFilterIUS3IUS3IUS3_New():
    return itkBinaryGeneratorImageFilterIUS3IUS3IUS3.New()

class itkBinaryGeneratorImageFilterIUS3IUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIUS3IUS3IUS3
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIUS3IUS3IUS3

        Create a new object of the class itkBinaryGeneratorImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIUS3IUS3IUS3 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_swigregister(itkBinaryGeneratorImageFilterIUS3IUS3IUS3)
itkBinaryGeneratorImageFilterIUS3IUS3IUS3___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3___New_orig__
itkBinaryGeneratorImageFilterIUS3IUS3IUS3_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUS3IUS3IUS3_cast


def itkBinaryGeneratorImageFilterIVF22ISS2IVF22_New():
    return itkBinaryGeneratorImageFilterIVF22ISS2IVF22.New()

class itkBinaryGeneratorImageFilterIVF22ISS2IVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF22ISS2IVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF22ISS2IVF22

        Create a new object of the class itkBinaryGeneratorImageFilterIVF22ISS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF22ISS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF22ISS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF22ISS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF22ISS2IVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_swigregister(itkBinaryGeneratorImageFilterIVF22ISS2IVF22)
itkBinaryGeneratorImageFilterIVF22ISS2IVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22___New_orig__
itkBinaryGeneratorImageFilterIVF22ISS2IVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22ISS2IVF22_cast


def itkBinaryGeneratorImageFilterIVF22IUC2IVF22_New():
    return itkBinaryGeneratorImageFilterIVF22IUC2IVF22.New()

class itkBinaryGeneratorImageFilterIVF22IUC2IVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF22IUC2IVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF22IUC2IVF22

        Create a new object of the class itkBinaryGeneratorImageFilterIVF22IUC2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF22IUC2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF22IUC2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF22IUC2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF22IUC2IVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_swigregister(itkBinaryGeneratorImageFilterIVF22IUC2IVF22)
itkBinaryGeneratorImageFilterIVF22IUC2IVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22___New_orig__
itkBinaryGeneratorImageFilterIVF22IUC2IVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUC2IVF22_cast


def itkBinaryGeneratorImageFilterIVF22IUS2IVF22_New():
    return itkBinaryGeneratorImageFilterIVF22IUS2IVF22.New()

class itkBinaryGeneratorImageFilterIVF22IUS2IVF22(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF22IVF22):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF22IUS2IVF22
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF22IUS2IVF22

        Create a new object of the class itkBinaryGeneratorImageFilterIVF22IUS2IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF22IUS2IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF22IUS2IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF22IUS2IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF22IUS2IVF22 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_swigregister(itkBinaryGeneratorImageFilterIVF22IUS2IVF22)
itkBinaryGeneratorImageFilterIVF22IUS2IVF22___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22___New_orig__
itkBinaryGeneratorImageFilterIVF22IUS2IVF22_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF22IUS2IVF22_cast


def itkBinaryGeneratorImageFilterIVF23ISS3IVF23_New():
    return itkBinaryGeneratorImageFilterIVF23ISS3IVF23.New()

class itkBinaryGeneratorImageFilterIVF23ISS3IVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF23ISS3IVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF23ISS3IVF23

        Create a new object of the class itkBinaryGeneratorImageFilterIVF23ISS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF23ISS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF23ISS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF23ISS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF23ISS3IVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_swigregister(itkBinaryGeneratorImageFilterIVF23ISS3IVF23)
itkBinaryGeneratorImageFilterIVF23ISS3IVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23___New_orig__
itkBinaryGeneratorImageFilterIVF23ISS3IVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23ISS3IVF23_cast


def itkBinaryGeneratorImageFilterIVF23IUC3IVF23_New():
    return itkBinaryGeneratorImageFilterIVF23IUC3IVF23.New()

class itkBinaryGeneratorImageFilterIVF23IUC3IVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF23IUC3IVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF23IUC3IVF23

        Create a new object of the class itkBinaryGeneratorImageFilterIVF23IUC3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF23IUC3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF23IUC3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF23IUC3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF23IUC3IVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_swigregister(itkBinaryGeneratorImageFilterIVF23IUC3IVF23)
itkBinaryGeneratorImageFilterIVF23IUC3IVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23___New_orig__
itkBinaryGeneratorImageFilterIVF23IUC3IVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUC3IVF23_cast


def itkBinaryGeneratorImageFilterIVF23IUS3IVF23_New():
    return itkBinaryGeneratorImageFilterIVF23IUS3IVF23.New()

class itkBinaryGeneratorImageFilterIVF23IUS3IVF23(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF23IVF23):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF23IUS3IVF23
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF23IUS3IVF23

        Create a new object of the class itkBinaryGeneratorImageFilterIVF23IUS3IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF23IUS3IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF23IUS3IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF23IUS3IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF23IUS3IVF23 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_swigregister(itkBinaryGeneratorImageFilterIVF23IUS3IVF23)
itkBinaryGeneratorImageFilterIVF23IUS3IVF23___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23___New_orig__
itkBinaryGeneratorImageFilterIVF23IUS3IVF23_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF23IUS3IVF23_cast


def itkBinaryGeneratorImageFilterIVF32ISS2IVF32_New():
    return itkBinaryGeneratorImageFilterIVF32ISS2IVF32.New()

class itkBinaryGeneratorImageFilterIVF32ISS2IVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF32ISS2IVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF32ISS2IVF32

        Create a new object of the class itkBinaryGeneratorImageFilterIVF32ISS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF32ISS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF32ISS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF32ISS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF32ISS2IVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_swigregister(itkBinaryGeneratorImageFilterIVF32ISS2IVF32)
itkBinaryGeneratorImageFilterIVF32ISS2IVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32___New_orig__
itkBinaryGeneratorImageFilterIVF32ISS2IVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32ISS2IVF32_cast


def itkBinaryGeneratorImageFilterIVF32IUC2IVF32_New():
    return itkBinaryGeneratorImageFilterIVF32IUC2IVF32.New()

class itkBinaryGeneratorImageFilterIVF32IUC2IVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF32IUC2IVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF32IUC2IVF32

        Create a new object of the class itkBinaryGeneratorImageFilterIVF32IUC2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF32IUC2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF32IUC2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF32IUC2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF32IUC2IVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_swigregister(itkBinaryGeneratorImageFilterIVF32IUC2IVF32)
itkBinaryGeneratorImageFilterIVF32IUC2IVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32___New_orig__
itkBinaryGeneratorImageFilterIVF32IUC2IVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUC2IVF32_cast


def itkBinaryGeneratorImageFilterIVF32IUS2IVF32_New():
    return itkBinaryGeneratorImageFilterIVF32IUS2IVF32.New()

class itkBinaryGeneratorImageFilterIVF32IUS2IVF32(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF32IVF32):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF32IUS2IVF32
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF32IUS2IVF32

        Create a new object of the class itkBinaryGeneratorImageFilterIVF32IUS2IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF32IUS2IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF32IUS2IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF32IUS2IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF32IUS2IVF32 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_swigregister(itkBinaryGeneratorImageFilterIVF32IUS2IVF32)
itkBinaryGeneratorImageFilterIVF32IUS2IVF32___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32___New_orig__
itkBinaryGeneratorImageFilterIVF32IUS2IVF32_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF32IUS2IVF32_cast


def itkBinaryGeneratorImageFilterIVF33ISS3IVF33_New():
    return itkBinaryGeneratorImageFilterIVF33ISS3IVF33.New()

class itkBinaryGeneratorImageFilterIVF33ISS3IVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF33ISS3IVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF33ISS3IVF33

        Create a new object of the class itkBinaryGeneratorImageFilterIVF33ISS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF33ISS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF33ISS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF33ISS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF33ISS3IVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_swigregister(itkBinaryGeneratorImageFilterIVF33ISS3IVF33)
itkBinaryGeneratorImageFilterIVF33ISS3IVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33___New_orig__
itkBinaryGeneratorImageFilterIVF33ISS3IVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33ISS3IVF33_cast


def itkBinaryGeneratorImageFilterIVF33IUC3IVF33_New():
    return itkBinaryGeneratorImageFilterIVF33IUC3IVF33.New()

class itkBinaryGeneratorImageFilterIVF33IUC3IVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF33IUC3IVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF33IUC3IVF33

        Create a new object of the class itkBinaryGeneratorImageFilterIVF33IUC3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF33IUC3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF33IUC3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF33IUC3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF33IUC3IVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_swigregister(itkBinaryGeneratorImageFilterIVF33IUC3IVF33)
itkBinaryGeneratorImageFilterIVF33IUC3IVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33___New_orig__
itkBinaryGeneratorImageFilterIVF33IUC3IVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUC3IVF33_cast


def itkBinaryGeneratorImageFilterIVF33IUS3IVF33_New():
    return itkBinaryGeneratorImageFilterIVF33IUS3IVF33.New()

class itkBinaryGeneratorImageFilterIVF33IUS3IVF33(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF33IVF33):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF33IUS3IVF33
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF33IUS3IVF33

        Create a new object of the class itkBinaryGeneratorImageFilterIVF33IUS3IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF33IUS3IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF33IUS3IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF33IUS3IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF33IUS3IVF33 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_swigregister(itkBinaryGeneratorImageFilterIVF33IUS3IVF33)
itkBinaryGeneratorImageFilterIVF33IUS3IVF33___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33___New_orig__
itkBinaryGeneratorImageFilterIVF33IUS3IVF33_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF33IUS3IVF33_cast


def itkBinaryGeneratorImageFilterIVF42ISS2IVF42_New():
    return itkBinaryGeneratorImageFilterIVF42ISS2IVF42.New()

class itkBinaryGeneratorImageFilterIVF42ISS2IVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF42ISS2IVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF42ISS2IVF42

        Create a new object of the class itkBinaryGeneratorImageFilterIVF42ISS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF42ISS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF42ISS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF42ISS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF42ISS2IVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_swigregister(itkBinaryGeneratorImageFilterIVF42ISS2IVF42)
itkBinaryGeneratorImageFilterIVF42ISS2IVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42___New_orig__
itkBinaryGeneratorImageFilterIVF42ISS2IVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42ISS2IVF42_cast


def itkBinaryGeneratorImageFilterIVF42IUC2IVF42_New():
    return itkBinaryGeneratorImageFilterIVF42IUC2IVF42.New()

class itkBinaryGeneratorImageFilterIVF42IUC2IVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF42IUC2IVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF42IUC2IVF42

        Create a new object of the class itkBinaryGeneratorImageFilterIVF42IUC2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF42IUC2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF42IUC2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF42IUC2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF42IUC2IVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_swigregister(itkBinaryGeneratorImageFilterIVF42IUC2IVF42)
itkBinaryGeneratorImageFilterIVF42IUC2IVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42___New_orig__
itkBinaryGeneratorImageFilterIVF42IUC2IVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUC2IVF42_cast


def itkBinaryGeneratorImageFilterIVF42IUS2IVF42_New():
    return itkBinaryGeneratorImageFilterIVF42IUS2IVF42.New()

class itkBinaryGeneratorImageFilterIVF42IUS2IVF42(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF42IVF42):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF42IUS2IVF42
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF42IUS2IVF42

        Create a new object of the class itkBinaryGeneratorImageFilterIVF42IUS2IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF42IUS2IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF42IUS2IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF42IUS2IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF42IUS2IVF42 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_swigregister(itkBinaryGeneratorImageFilterIVF42IUS2IVF42)
itkBinaryGeneratorImageFilterIVF42IUS2IVF42___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42___New_orig__
itkBinaryGeneratorImageFilterIVF42IUS2IVF42_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF42IUS2IVF42_cast


def itkBinaryGeneratorImageFilterIVF43ISS3IVF43_New():
    return itkBinaryGeneratorImageFilterIVF43ISS3IVF43.New()

class itkBinaryGeneratorImageFilterIVF43ISS3IVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF43ISS3IVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF43ISS3IVF43

        Create a new object of the class itkBinaryGeneratorImageFilterIVF43ISS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF43ISS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF43ISS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF43ISS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF43ISS3IVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_swigregister(itkBinaryGeneratorImageFilterIVF43ISS3IVF43)
itkBinaryGeneratorImageFilterIVF43ISS3IVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43___New_orig__
itkBinaryGeneratorImageFilterIVF43ISS3IVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43ISS3IVF43_cast


def itkBinaryGeneratorImageFilterIVF43IUC3IVF43_New():
    return itkBinaryGeneratorImageFilterIVF43IUC3IVF43.New()

class itkBinaryGeneratorImageFilterIVF43IUC3IVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF43IUC3IVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF43IUC3IVF43

        Create a new object of the class itkBinaryGeneratorImageFilterIVF43IUC3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF43IUC3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF43IUC3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF43IUC3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF43IUC3IVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_swigregister(itkBinaryGeneratorImageFilterIVF43IUC3IVF43)
itkBinaryGeneratorImageFilterIVF43IUC3IVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43___New_orig__
itkBinaryGeneratorImageFilterIVF43IUC3IVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUC3IVF43_cast


def itkBinaryGeneratorImageFilterIVF43IUS3IVF43_New():
    return itkBinaryGeneratorImageFilterIVF43IUS3IVF43.New()

class itkBinaryGeneratorImageFilterIVF43IUS3IVF43(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIVF43IVF43):
    r"""


    Implements pixel-wise generic operation of two images, or of an image
    and a constant.

    This class is parameterized over the types of the two input images and
    the type of the output image.

    This filter allows per-pixel operations to be specified in several
    way: ITK traditional "Functor", with operator()

    C++11 lambda functions, with closures

    C++ std::function

    C-style function pointers

    The constant must be of the same type as the pixel type of the
    corresponding image. It is wrapped in a SimpleDataObjectDecorator so
    it can be updated through the pipeline. The SetConstant() and
    GetConstant() methods are provided as shortcuts to set or get the
    constant value without manipulating the decorator.

    See:   UnaryGeneratorImageFilter

    See:  BinaryFunctorImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_Clone)
    SetInput1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SetInput1)
    SetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SetConstant1)
    GetConstant1 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_GetConstant1)
    SetInput2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SetInput2)
    SetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SetConstant2)
    SetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SetConstant)
    GetConstant = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_GetConstant)
    GetConstant2 = _swig_new_instance_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_GetConstant2)
    SameDimensionCheck1 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_SameDimensionCheck2
    
    __swig_destroy__ = _itkBinaryGeneratorImageFilterPython.delete_itkBinaryGeneratorImageFilterIVF43IUS3IVF43
    cast = _swig_new_static_method(_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryGeneratorImageFilterIVF43IUS3IVF43

        Create a new object of the class itkBinaryGeneratorImageFilterIVF43IUS3IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryGeneratorImageFilterIVF43IUS3IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryGeneratorImageFilterIVF43IUS3IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryGeneratorImageFilterIVF43IUS3IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryGeneratorImageFilterIVF43IUS3IVF43 in _itkBinaryGeneratorImageFilterPython:
_itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_swigregister(itkBinaryGeneratorImageFilterIVF43IUS3IVF43)
itkBinaryGeneratorImageFilterIVF43IUS3IVF43___New_orig__ = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43___New_orig__
itkBinaryGeneratorImageFilterIVF43IUS3IVF43_cast = _itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIVF43IUS3IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_generator_image_filter(*args, **kwargs):
    """Procedural interface for BinaryGeneratorImageFilter"""
    import itk
    instance = itk.BinaryGeneratorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_generator_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryGeneratorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryGeneratorImageFilter.values()[0]
    else:
        filter_object = itk.BinaryGeneratorImageFilter

    binary_generator_image_filter.__doc__ = filter_object.__doc__
    binary_generator_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_generator_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryGeneratorImageFilter, itkTemplate.itkTemplate):
        binary_generator_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_generator_image_filter.__doc__ += "\n"
        binary_generator_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_generator_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



