# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkValuedRegionalMinimaImageFilterPython
else:
    import _itkValuedRegionalMinimaImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkValuedRegionalMinimaImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkValuedRegionalMinimaImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.stdcomplexPython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkValuedRegionalMinimaImageFilterID2ID2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New()

class itkValuedRegionalMinimaImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID2ID2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID2ID2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterID2ID2_Superclass)
itkValuedRegionalMinimaImageFilterID2ID2_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterID2ID2_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Superclass_cast


def itkValuedRegionalMinimaImageFilterID3ID3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New()

class itkValuedRegionalMinimaImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID3ID3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID3ID3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterID3ID3_Superclass)
itkValuedRegionalMinimaImageFilterID3ID3_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterID3ID3_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Superclass_cast


def itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF2IF2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF2IF2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIF2IF2_Superclass)
itkValuedRegionalMinimaImageFilterIF2IF2_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Superclass_cast


def itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF3IF3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF3IF3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIF3IF3_Superclass)
itkValuedRegionalMinimaImageFilterIF3IF3_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Superclass_cast


def itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New()

class itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass)
itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass_cast


def itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New()

class itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass)
itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass_cast


def itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass)
itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass_cast


def itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass)
itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass_cast


def itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass)
itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass_cast


def itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_New():
    return itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New()

class itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_FullyConnectedOff)
    SetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_SetMarkerValue)
    GetMarkerValue = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetMarkerValue)
    GetFlat = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_GetFlat)
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_swigregister(itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass)
itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass___New_orig__
itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass_cast


def itkValuedRegionalMinimaImageFilterID2ID2_New():
    return itkValuedRegionalMinimaImageFilterID2ID2.New()

class itkValuedRegionalMinimaImageFilterID2ID2(itkValuedRegionalMinimaImageFilterID2ID2_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID2ID2
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID2ID2

        Create a new object of the class itkValuedRegionalMinimaImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID2ID2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_swigregister(itkValuedRegionalMinimaImageFilterID2ID2)
itkValuedRegionalMinimaImageFilterID2ID2___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2___New_orig__
itkValuedRegionalMinimaImageFilterID2ID2_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID2ID2_cast


def itkValuedRegionalMinimaImageFilterID3ID3_New():
    return itkValuedRegionalMinimaImageFilterID3ID3.New()

class itkValuedRegionalMinimaImageFilterID3ID3(itkValuedRegionalMinimaImageFilterID3ID3_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterID3ID3
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterID3ID3

        Create a new object of the class itkValuedRegionalMinimaImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterID3ID3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_swigregister(itkValuedRegionalMinimaImageFilterID3ID3)
itkValuedRegionalMinimaImageFilterID3ID3___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3___New_orig__
itkValuedRegionalMinimaImageFilterID3ID3_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterID3ID3_cast


def itkValuedRegionalMinimaImageFilterIF2IF2_New():
    return itkValuedRegionalMinimaImageFilterIF2IF2.New()

class itkValuedRegionalMinimaImageFilterIF2IF2(itkValuedRegionalMinimaImageFilterIF2IF2_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF2IF2
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF2IF2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF2IF2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_swigregister(itkValuedRegionalMinimaImageFilterIF2IF2)
itkValuedRegionalMinimaImageFilterIF2IF2___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2___New_orig__
itkValuedRegionalMinimaImageFilterIF2IF2_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF2IF2_cast


def itkValuedRegionalMinimaImageFilterIF3IF3_New():
    return itkValuedRegionalMinimaImageFilterIF3IF3.New()

class itkValuedRegionalMinimaImageFilterIF3IF3(itkValuedRegionalMinimaImageFilterIF3IF3_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIF3IF3
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIF3IF3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIF3IF3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_swigregister(itkValuedRegionalMinimaImageFilterIF3IF3)
itkValuedRegionalMinimaImageFilterIF3IF3___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3___New_orig__
itkValuedRegionalMinimaImageFilterIF3IF3_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIF3IF3_cast


def itkValuedRegionalMinimaImageFilterISS2ISS2_New():
    return itkValuedRegionalMinimaImageFilterISS2ISS2.New()

class itkValuedRegionalMinimaImageFilterISS2ISS2(itkValuedRegionalMinimaImageFilterISS2ISS2_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS2ISS2

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS2ISS2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_swigregister(itkValuedRegionalMinimaImageFilterISS2ISS2)
itkValuedRegionalMinimaImageFilterISS2ISS2___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2___New_orig__
itkValuedRegionalMinimaImageFilterISS2ISS2_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS2ISS2_cast


def itkValuedRegionalMinimaImageFilterISS3ISS3_New():
    return itkValuedRegionalMinimaImageFilterISS3ISS3.New()

class itkValuedRegionalMinimaImageFilterISS3ISS3(itkValuedRegionalMinimaImageFilterISS3ISS3_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterISS3ISS3

        Create a new object of the class itkValuedRegionalMinimaImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterISS3ISS3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_swigregister(itkValuedRegionalMinimaImageFilterISS3ISS3)
itkValuedRegionalMinimaImageFilterISS3ISS3___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3___New_orig__
itkValuedRegionalMinimaImageFilterISS3ISS3_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterISS3ISS3_cast


def itkValuedRegionalMinimaImageFilterIUC2IUC2_New():
    return itkValuedRegionalMinimaImageFilterIUC2IUC2.New()

class itkValuedRegionalMinimaImageFilterIUC2IUC2(itkValuedRegionalMinimaImageFilterIUC2IUC2_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC2IUC2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC2IUC2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_swigregister(itkValuedRegionalMinimaImageFilterIUC2IUC2)
itkValuedRegionalMinimaImageFilterIUC2IUC2___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2___New_orig__
itkValuedRegionalMinimaImageFilterIUC2IUC2_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC2IUC2_cast


def itkValuedRegionalMinimaImageFilterIUC3IUC3_New():
    return itkValuedRegionalMinimaImageFilterIUC3IUC3.New()

class itkValuedRegionalMinimaImageFilterIUC3IUC3(itkValuedRegionalMinimaImageFilterIUC3IUC3_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUC3IUC3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUC3IUC3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_swigregister(itkValuedRegionalMinimaImageFilterIUC3IUC3)
itkValuedRegionalMinimaImageFilterIUC3IUC3___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3___New_orig__
itkValuedRegionalMinimaImageFilterIUC3IUC3_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUC3IUC3_cast


def itkValuedRegionalMinimaImageFilterIUS2IUS2_New():
    return itkValuedRegionalMinimaImageFilterIUS2IUS2.New()

class itkValuedRegionalMinimaImageFilterIUS2IUS2(itkValuedRegionalMinimaImageFilterIUS2IUS2_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS2IUS2

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS2IUS2 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_swigregister(itkValuedRegionalMinimaImageFilterIUS2IUS2)
itkValuedRegionalMinimaImageFilterIUS2IUS2___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2___New_orig__
itkValuedRegionalMinimaImageFilterIUS2IUS2_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS2IUS2_cast


def itkValuedRegionalMinimaImageFilterIUS3IUS3_New():
    return itkValuedRegionalMinimaImageFilterIUS3IUS3.New()

class itkValuedRegionalMinimaImageFilterIUS3IUS3(itkValuedRegionalMinimaImageFilterIUS3IUS3_Superclass):
    r"""


    Transforms the image so that any pixel that is not a regional minima
    is set to the maximum value for the pixel type. Pixels that are
    regional minima retain their value.

    Regional minima are flat zones surrounded by pixels of higher value. A
    completely flat image will be marked as a regional minima by this
    filter.

    This code was contributed in the Insight Journal paper: "Finding
    regional extrema - methods and performance" by Beare R., Lehmann
    G.https://hdl.handle.net/1926/153http://www.insight-
    journal.org/browse/publication/65

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    See:   ValuedRegionalMaximaImageFilter,
    ValuedRegionalExtremaImageFilter,

    See:   HMinimaImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_Clone)
    InputPixelTypeComparable = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputPixelTypeComparable
    
    InputHasPixelTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputHasPixelTraitsCheck
    
    InputHasNumericTraitsCheck = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkValuedRegionalMinimaImageFilterPython.delete_itkValuedRegionalMinimaImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkValuedRegionalMinimaImageFilterIUS3IUS3

        Create a new object of the class itkValuedRegionalMinimaImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkValuedRegionalMinimaImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkValuedRegionalMinimaImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkValuedRegionalMinimaImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkValuedRegionalMinimaImageFilterIUS3IUS3 in _itkValuedRegionalMinimaImageFilterPython:
_itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_swigregister(itkValuedRegionalMinimaImageFilterIUS3IUS3)
itkValuedRegionalMinimaImageFilterIUS3IUS3___New_orig__ = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3___New_orig__
itkValuedRegionalMinimaImageFilterIUS3IUS3_cast = _itkValuedRegionalMinimaImageFilterPython.itkValuedRegionalMinimaImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def valued_regional_extrema_image_filter(*args, **kwargs):
    """Procedural interface for ValuedRegionalExtremaImageFilter"""
    import itk
    instance = itk.ValuedRegionalExtremaImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def valued_regional_extrema_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ValuedRegionalExtremaImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ValuedRegionalExtremaImageFilter.values()[0]
    else:
        filter_object = itk.ValuedRegionalExtremaImageFilter

    valued_regional_extrema_image_filter.__doc__ = filter_object.__doc__
    valued_regional_extrema_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    valued_regional_extrema_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ValuedRegionalExtremaImageFilter, itkTemplate.itkTemplate):
        valued_regional_extrema_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        valued_regional_extrema_image_filter.__doc__ += "\n"
        valued_regional_extrema_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        valued_regional_extrema_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def valued_regional_minima_image_filter(*args, **kwargs):
    """Procedural interface for ValuedRegionalMinimaImageFilter"""
    import itk
    instance = itk.ValuedRegionalMinimaImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def valued_regional_minima_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ValuedRegionalMinimaImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.ValuedRegionalMinimaImageFilter.values()[0]
    else:
        filter_object = itk.ValuedRegionalMinimaImageFilter

    valued_regional_minima_image_filter.__doc__ = filter_object.__doc__
    valued_regional_minima_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    valued_regional_minima_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ValuedRegionalMinimaImageFilter, itkTemplate.itkTemplate):
        valued_regional_minima_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        valued_regional_minima_image_filter.__doc__ += "\n"
        valued_regional_minima_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        valued_regional_minima_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



