# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleGrindPeakImageFilterPython
else:
    import _itkGrayscaleGrindPeakImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGrayscaleGrindPeakImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGrayscaleGrindPeakImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.stdcomplexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkGrayscaleGrindPeakImageFilterID2ID2_New():
    return itkGrayscaleGrindPeakImageFilterID2ID2.New()

class itkGrayscaleGrindPeakImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterID2ID2
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterID2ID2

        Create a new object of the class itkGrayscaleGrindPeakImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterID2ID2 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_swigregister(itkGrayscaleGrindPeakImageFilterID2ID2)
itkGrayscaleGrindPeakImageFilterID2ID2___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2___New_orig__
itkGrayscaleGrindPeakImageFilterID2ID2_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID2ID2_cast


def itkGrayscaleGrindPeakImageFilterID3ID3_New():
    return itkGrayscaleGrindPeakImageFilterID3ID3.New()

class itkGrayscaleGrindPeakImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterID3ID3
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterID3ID3

        Create a new object of the class itkGrayscaleGrindPeakImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterID3ID3 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_swigregister(itkGrayscaleGrindPeakImageFilterID3ID3)
itkGrayscaleGrindPeakImageFilterID3ID3___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3___New_orig__
itkGrayscaleGrindPeakImageFilterID3ID3_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterID3ID3_cast


def itkGrayscaleGrindPeakImageFilterIF2IF2_New():
    return itkGrayscaleGrindPeakImageFilterIF2IF2.New()

class itkGrayscaleGrindPeakImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIF2IF2
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIF2IF2

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIF2IF2 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_swigregister(itkGrayscaleGrindPeakImageFilterIF2IF2)
itkGrayscaleGrindPeakImageFilterIF2IF2___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2___New_orig__
itkGrayscaleGrindPeakImageFilterIF2IF2_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF2IF2_cast


def itkGrayscaleGrindPeakImageFilterIF3IF3_New():
    return itkGrayscaleGrindPeakImageFilterIF3IF3.New()

class itkGrayscaleGrindPeakImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIF3IF3
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIF3IF3

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIF3IF3 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_swigregister(itkGrayscaleGrindPeakImageFilterIF3IF3)
itkGrayscaleGrindPeakImageFilterIF3IF3___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3___New_orig__
itkGrayscaleGrindPeakImageFilterIF3IF3_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIF3IF3_cast


def itkGrayscaleGrindPeakImageFilterISS2ISS2_New():
    return itkGrayscaleGrindPeakImageFilterISS2ISS2.New()

class itkGrayscaleGrindPeakImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterISS2ISS2

        Create a new object of the class itkGrayscaleGrindPeakImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterISS2ISS2 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_swigregister(itkGrayscaleGrindPeakImageFilterISS2ISS2)
itkGrayscaleGrindPeakImageFilterISS2ISS2___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2___New_orig__
itkGrayscaleGrindPeakImageFilterISS2ISS2_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS2ISS2_cast


def itkGrayscaleGrindPeakImageFilterISS3ISS3_New():
    return itkGrayscaleGrindPeakImageFilterISS3ISS3.New()

class itkGrayscaleGrindPeakImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterISS3ISS3

        Create a new object of the class itkGrayscaleGrindPeakImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterISS3ISS3 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_swigregister(itkGrayscaleGrindPeakImageFilterISS3ISS3)
itkGrayscaleGrindPeakImageFilterISS3ISS3___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3___New_orig__
itkGrayscaleGrindPeakImageFilterISS3ISS3_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterISS3ISS3_cast


def itkGrayscaleGrindPeakImageFilterIUC2IUC2_New():
    return itkGrayscaleGrindPeakImageFilterIUC2IUC2.New()

class itkGrayscaleGrindPeakImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIUC2IUC2

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIUC2IUC2 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_swigregister(itkGrayscaleGrindPeakImageFilterIUC2IUC2)
itkGrayscaleGrindPeakImageFilterIUC2IUC2___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2___New_orig__
itkGrayscaleGrindPeakImageFilterIUC2IUC2_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC2IUC2_cast


def itkGrayscaleGrindPeakImageFilterIUC3IUC3_New():
    return itkGrayscaleGrindPeakImageFilterIUC3IUC3.New()

class itkGrayscaleGrindPeakImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIUC3IUC3

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIUC3IUC3 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_swigregister(itkGrayscaleGrindPeakImageFilterIUC3IUC3)
itkGrayscaleGrindPeakImageFilterIUC3IUC3___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3___New_orig__
itkGrayscaleGrindPeakImageFilterIUC3IUC3_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUC3IUC3_cast


def itkGrayscaleGrindPeakImageFilterIUS2IUS2_New():
    return itkGrayscaleGrindPeakImageFilterIUS2IUS2.New()

class itkGrayscaleGrindPeakImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIUS2IUS2

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIUS2IUS2 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_swigregister(itkGrayscaleGrindPeakImageFilterIUS2IUS2)
itkGrayscaleGrindPeakImageFilterIUS2IUS2___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2___New_orig__
itkGrayscaleGrindPeakImageFilterIUS2IUS2_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS2IUS2_cast


def itkGrayscaleGrindPeakImageFilterIUS3IUS3_New():
    return itkGrayscaleGrindPeakImageFilterIUS3IUS3.New()

class itkGrayscaleGrindPeakImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Remove local maxima not connected to the boundary of the image.

    GrayscaleGrindPeakImageFilter removes peaks in a grayscale image.
    Peaks are local maxima in the grayscale topography that are not
    connected to boundaries of the image. Gray level values adjacent to a
    peak are extrapolated through the peak.

    This filter is used to smooth over local maxima without affecting the
    values of local minima. If you take the difference between the output
    of this filter and the original image (and perhaps threshold the
    difference above a small value), you'll obtain a map of the local
    maxima.

    This filter uses the GrayscaleGeodesicDilateImageFilter. It provides
    its own input as the "mask" input to the geodesic erosion. The
    "marker" image for the geodesic erosion is constructed such that
    boundary pixels match the boundary pixels of the input image and the
    interior pixels are set to the minimum pixel value in the input image.

    This filter is the dual to the GrayscaleFillholeImageFilter which
    implements the Fillhole algorithm. Since it is a dual, it is somewhat
    superfluous but is provided as a convenience.

    Geodesic morphology and the Fillhole algorithm is described in Chapter
    6 of Pierre Soille's book "Morphological Image Analysis: Principles
    and Applications", Second Edition, Springer, 2003.

    See:   GrayscaleGeodesicDilateImageFilter

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleFunctionDilateImageFilter, BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_Clone)
    SetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_FullyConnectedOff)
    InputOStreamWritableCheck = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleGrindPeakImageFilterPython.delete_itkGrayscaleGrindPeakImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleGrindPeakImageFilterIUS3IUS3

        Create a new object of the class itkGrayscaleGrindPeakImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleGrindPeakImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleGrindPeakImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleGrindPeakImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleGrindPeakImageFilterIUS3IUS3 in _itkGrayscaleGrindPeakImageFilterPython:
_itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_swigregister(itkGrayscaleGrindPeakImageFilterIUS3IUS3)
itkGrayscaleGrindPeakImageFilterIUS3IUS3___New_orig__ = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3___New_orig__
itkGrayscaleGrindPeakImageFilterIUS3IUS3_cast = _itkGrayscaleGrindPeakImageFilterPython.itkGrayscaleGrindPeakImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def grayscale_grind_peak_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleGrindPeakImageFilter"""
    import itk
    instance = itk.GrayscaleGrindPeakImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_grind_peak_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GrayscaleGrindPeakImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GrayscaleGrindPeakImageFilter.values()[0]
    else:
        filter_object = itk.GrayscaleGrindPeakImageFilter

    grayscale_grind_peak_image_filter.__doc__ = filter_object.__doc__
    grayscale_grind_peak_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    grayscale_grind_peak_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GrayscaleGrindPeakImageFilter, itkTemplate.itkTemplate):
        grayscale_grind_peak_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        grayscale_grind_peak_image_filter.__doc__ += "\n"
        grayscale_grind_peak_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        grayscale_grind_peak_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



