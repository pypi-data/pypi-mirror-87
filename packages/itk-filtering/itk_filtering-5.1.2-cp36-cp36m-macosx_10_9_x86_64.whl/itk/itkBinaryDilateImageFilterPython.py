# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryDilateImageFilterPython
else:
    import _itkBinaryDilateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryDilateImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryDilateImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkBoxImageFilterPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkNeighborhoodPython

def itkBinaryDilateImageFilterID2ID2SE2_Superclass_New():
    return itkBinaryDilateImageFilterID2ID2SE2_Superclass.New()

class itkBinaryDilateImageFilterID2ID2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterID2ID2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID2ID2SE2_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID2ID2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterID2ID2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID2ID2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID2ID2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID2ID2SE2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID2ID2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_swigregister(itkBinaryDilateImageFilterID2ID2SE2_Superclass)
itkBinaryDilateImageFilterID2ID2SE2_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass___New_orig__
itkBinaryDilateImageFilterID2ID2SE2_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass_cast


def itkBinaryDilateImageFilterID3ID3SE3_Superclass_New():
    return itkBinaryDilateImageFilterID3ID3SE3_Superclass.New()

class itkBinaryDilateImageFilterID3ID3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterID3ID3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID3ID3SE3_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID3ID3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterID3ID3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID3ID3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID3ID3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID3ID3SE3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID3ID3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_swigregister(itkBinaryDilateImageFilterID3ID3SE3_Superclass)
itkBinaryDilateImageFilterID3ID3SE3_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass___New_orig__
itkBinaryDilateImageFilterID3ID3SE3_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass_cast


def itkBinaryDilateImageFilterIF2IF2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New()

class itkBinaryDilateImageFilterIF2IF2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF2IF2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF2IF2SE2_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF2IF2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIF2IF2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF2IF2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF2IF2SE2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF2IF2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIF2IF2SE2_Superclass)
itkBinaryDilateImageFilterIF2IF2SE2_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass___New_orig__
itkBinaryDilateImageFilterIF2IF2SE2_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass_cast


def itkBinaryDilateImageFilterIF3IF3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New()

class itkBinaryDilateImageFilterIF3IF3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIF3IF3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF3IF3SE3_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF3IF3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIF3IF3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF3IF3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF3IF3SE3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF3IF3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIF3IF3SE3_Superclass)
itkBinaryDilateImageFilterIF3IF3SE3_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass___New_orig__
itkBinaryDilateImageFilterIF3IF3SE3_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass_cast


def itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_New():
    return itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New()

class itkBinaryDilateImageFilterISS2ISS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS2ISS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS2ISS2SE2_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS2ISS2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterISS2ISS2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS2ISS2SE2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS2ISS2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_swigregister(itkBinaryDilateImageFilterISS2ISS2SE2_Superclass)
itkBinaryDilateImageFilterISS2ISS2SE2_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass___New_orig__
itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass_cast


def itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_New():
    return itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New()

class itkBinaryDilateImageFilterISS3ISS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterISS3ISS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS3ISS3SE3_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS3ISS3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterISS3ISS3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS3ISS3SE3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS3ISS3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_swigregister(itkBinaryDilateImageFilterISS3ISS3SE3_Superclass)
itkBinaryDilateImageFilterISS3ISS3SE3_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass___New_orig__
itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass_cast


def itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New()

class itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass)
itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass___New_orig__
itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass_cast


def itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New()

class itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass)
itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass___New_orig__
itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass_cast


def itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_New():
    return itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New()

class itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_swigregister(itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass)
itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass___New_orig__
itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass_cast


def itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_New():
    return itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New()

class itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_Clone)
    ImageDimensionCheck = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_ImageDimensionCheck
    
    SetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetBackgroundValue)
    SetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_SetBoundaryToForeground)
    GetBoundaryToForeground = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_GetBoundaryToForeground)
    BoundaryToForegroundOn = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_BoundaryToForegroundOn)
    BoundaryToForegroundOff = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_BoundaryToForegroundOff)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass

        Create a new object of the class itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_swigregister(itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass)
itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass___New_orig__
itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass_cast


def itkBinaryDilateImageFilterID2ID2SE2_New():
    return itkBinaryDilateImageFilterID2ID2SE2.New()

class itkBinaryDilateImageFilterID2ID2SE2(itkBinaryDilateImageFilterID2ID2SE2_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID2ID2SE2

        Create a new object of the class itkBinaryDilateImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID2ID2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_swigregister(itkBinaryDilateImageFilterID2ID2SE2)
itkBinaryDilateImageFilterID2ID2SE2___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2___New_orig__
itkBinaryDilateImageFilterID2ID2SE2_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_cast


def itkBinaryDilateImageFilterID3ID3SE3_New():
    return itkBinaryDilateImageFilterID3ID3SE3.New()

class itkBinaryDilateImageFilterID3ID3SE3(itkBinaryDilateImageFilterID3ID3SE3_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterID3ID3SE3

        Create a new object of the class itkBinaryDilateImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterID3ID3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_swigregister(itkBinaryDilateImageFilterID3ID3SE3)
itkBinaryDilateImageFilterID3ID3SE3___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3___New_orig__
itkBinaryDilateImageFilterID3ID3SE3_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_cast


def itkBinaryDilateImageFilterIF2IF2SE2_New():
    return itkBinaryDilateImageFilterIF2IF2SE2.New()

class itkBinaryDilateImageFilterIF2IF2SE2(itkBinaryDilateImageFilterIF2IF2SE2_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryDilateImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF2IF2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_swigregister(itkBinaryDilateImageFilterIF2IF2SE2)
itkBinaryDilateImageFilterIF2IF2SE2___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2___New_orig__
itkBinaryDilateImageFilterIF2IF2SE2_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_cast


def itkBinaryDilateImageFilterIF3IF3SE3_New():
    return itkBinaryDilateImageFilterIF3IF3SE3.New()

class itkBinaryDilateImageFilterIF3IF3SE3(itkBinaryDilateImageFilterIF3IF3SE3_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryDilateImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIF3IF3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_swigregister(itkBinaryDilateImageFilterIF3IF3SE3)
itkBinaryDilateImageFilterIF3IF3SE3___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3___New_orig__
itkBinaryDilateImageFilterIF3IF3SE3_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_cast


def itkBinaryDilateImageFilterISS2ISS2SE2_New():
    return itkBinaryDilateImageFilterISS2ISS2SE2.New()

class itkBinaryDilateImageFilterISS2ISS2SE2(itkBinaryDilateImageFilterISS2ISS2SE2_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryDilateImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS2ISS2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_swigregister(itkBinaryDilateImageFilterISS2ISS2SE2)
itkBinaryDilateImageFilterISS2ISS2SE2___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2___New_orig__
itkBinaryDilateImageFilterISS2ISS2SE2_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_cast


def itkBinaryDilateImageFilterISS3ISS3SE3_New():
    return itkBinaryDilateImageFilterISS3ISS3SE3.New()

class itkBinaryDilateImageFilterISS3ISS3SE3(itkBinaryDilateImageFilterISS3ISS3SE3_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryDilateImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterISS3ISS3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_swigregister(itkBinaryDilateImageFilterISS3ISS3SE3)
itkBinaryDilateImageFilterISS3ISS3SE3___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3___New_orig__
itkBinaryDilateImageFilterISS3ISS3SE3_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_cast


def itkBinaryDilateImageFilterIUC2IUC2SE2_New():
    return itkBinaryDilateImageFilterIUC2IUC2SE2.New()

class itkBinaryDilateImageFilterIUC2IUC2SE2(itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryDilateImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC2IUC2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_swigregister(itkBinaryDilateImageFilterIUC2IUC2SE2)
itkBinaryDilateImageFilterIUC2IUC2SE2___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2___New_orig__
itkBinaryDilateImageFilterIUC2IUC2SE2_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_cast


def itkBinaryDilateImageFilterIUC3IUC3SE3_New():
    return itkBinaryDilateImageFilterIUC3IUC3SE3.New()

class itkBinaryDilateImageFilterIUC3IUC3SE3(itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryDilateImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUC3IUC3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_swigregister(itkBinaryDilateImageFilterIUC3IUC3SE3)
itkBinaryDilateImageFilterIUC3IUC3SE3___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3___New_orig__
itkBinaryDilateImageFilterIUC3IUC3SE3_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_cast


def itkBinaryDilateImageFilterIUS2IUS2SE2_New():
    return itkBinaryDilateImageFilterIUS2IUS2SE2.New()

class itkBinaryDilateImageFilterIUS2IUS2SE2(itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryDilateImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS2IUS2SE2 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_swigregister(itkBinaryDilateImageFilterIUS2IUS2SE2)
itkBinaryDilateImageFilterIUS2IUS2SE2___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2___New_orig__
itkBinaryDilateImageFilterIUS2IUS2SE2_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_cast


def itkBinaryDilateImageFilterIUS3IUS3SE3_New():
    return itkBinaryDilateImageFilterIUS3IUS3SE3.New()

class itkBinaryDilateImageFilterIUS3IUS3SE3(itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass):
    r"""


    Fast binary dilation of a single intensity value in the image.

    BinaryDilateImageFilter is a binary dilation morphologic operation on
    the foreground of an image. Only the value designated by the intensity
    value "SetForegroundValue()" (alias as SetDilateValue()) is
    considered as foreground, and other intensity values are considered
    background.

    Gray scale images can be processed as binary images by selecting a
    "ForegroundValue" (alias "DilateValue"). Pixel values matching the
    dilate value are considered the "foreground" and all other pixels
    are "background". This is useful in processing segmented images
    where all pixels in segment #1 have value 1 and pixels in segment #2
    have value 2, etc. A particular "segment number" can be processed.
    ForegroundValue defaults to the maximum possible value of the
    PixelType.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel. A reasonable choice
    of structuring element is itk::BinaryBallStructuringElement.

    This implementation is based on the papers:

    L.Vincent "Morphological transformations of binary images with
    arbitrary structuring elements", and

    N.Nikopoulos et al. "An efficient algorithm for 3d binary
    morphological transformations with 3d structuring elements for
    arbitrary size and shape". IEEE Transactions on Image Processing.
    Vol. 9. No. 3. 2000. pp. 283-286.

    See:  ImageToImageFilter BinaryErodeImageFilter
    BinaryMorphologyImageFilter
    example{Filtering/BinaryMathematicalMorphology/DilateABinaryImage,
    Dilate A Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Clone)
    SetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_SetDilateValue)
    GetDilateValue = _swig_new_instance_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_GetDilateValue)
    __swig_destroy__ = _itkBinaryDilateImageFilterPython.delete_itkBinaryDilateImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryDilateImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryDilateImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryDilateImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryDilateImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryDilateImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryDilateImageFilterIUS3IUS3SE3 in _itkBinaryDilateImageFilterPython:
_itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_swigregister(itkBinaryDilateImageFilterIUS3IUS3SE3)
itkBinaryDilateImageFilterIUS3IUS3SE3___New_orig__ = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3___New_orig__
itkBinaryDilateImageFilterIUS3IUS3SE3_cast = _itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_morphology_image_filter(*args, **kwargs):
    """Procedural interface for BinaryMorphologyImageFilter"""
    import itk
    instance = itk.BinaryMorphologyImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_morphology_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryMorphologyImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryMorphologyImageFilter.values()[0]
    else:
        filter_object = itk.BinaryMorphologyImageFilter

    binary_morphology_image_filter.__doc__ = filter_object.__doc__
    binary_morphology_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_morphology_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryMorphologyImageFilter, itkTemplate.itkTemplate):
        binary_morphology_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_morphology_image_filter.__doc__ += "\n"
        binary_morphology_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_morphology_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_dilate_image_filter(*args, **kwargs):
    """Procedural interface for BinaryDilateImageFilter"""
    import itk
    instance = itk.BinaryDilateImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_dilate_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryDilateImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryDilateImageFilter.values()[0]
    else:
        filter_object = itk.BinaryDilateImageFilter

    binary_dilate_image_filter.__doc__ = filter_object.__doc__
    binary_dilate_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_dilate_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryDilateImageFilter, itkTemplate.itkTemplate):
        binary_dilate_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_dilate_image_filter.__doc__ += "\n"
        binary_dilate_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_dilate_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



