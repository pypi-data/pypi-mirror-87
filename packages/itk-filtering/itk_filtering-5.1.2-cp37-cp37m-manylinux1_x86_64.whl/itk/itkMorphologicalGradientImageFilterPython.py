# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMorphologicalGradientImageFilterPython
else:
    import _itkMorphologicalGradientImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMorphologicalGradientImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMorphologicalGradientImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.itkBoxImageFilterPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.stdcomplexPython
import itk.itkRGBAPixelPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkNeighborhoodPython

def itkMorphologicalGradientImageFilterID2ID2SE2_New():
    return itkMorphologicalGradientImageFilterID2ID2SE2.New()

class itkMorphologicalGradientImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID2ID2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterID2ID2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_swigregister(itkMorphologicalGradientImageFilterID2ID2SE2)
itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__
itkMorphologicalGradientImageFilterID2ID2SE2_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_cast


def itkMorphologicalGradientImageFilterID3ID3SE3_New():
    return itkMorphologicalGradientImageFilterID3ID3SE3.New()

class itkMorphologicalGradientImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID3ID3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterID3ID3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_swigregister(itkMorphologicalGradientImageFilterID3ID3SE3)
itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__
itkMorphologicalGradientImageFilterID3ID3SE3_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_cast


def itkMorphologicalGradientImageFilterIF2IF2SE2_New():
    return itkMorphologicalGradientImageFilterIF2IF2SE2.New()

class itkMorphologicalGradientImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF2IF2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIF2IF2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_swigregister(itkMorphologicalGradientImageFilterIF2IF2SE2)
itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__
itkMorphologicalGradientImageFilterIF2IF2SE2_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_cast


def itkMorphologicalGradientImageFilterIF3IF3SE3_New():
    return itkMorphologicalGradientImageFilterIF3IF3SE3.New()

class itkMorphologicalGradientImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF3IF3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIF3IF3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_swigregister(itkMorphologicalGradientImageFilterIF3IF3SE3)
itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__
itkMorphologicalGradientImageFilterIF3IF3SE3_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_cast


def itkMorphologicalGradientImageFilterISS2ISS2SE2_New():
    return itkMorphologicalGradientImageFilterISS2ISS2SE2.New()

class itkMorphologicalGradientImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS2ISS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterISS2ISS2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_swigregister(itkMorphologicalGradientImageFilterISS2ISS2SE2)
itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__
itkMorphologicalGradientImageFilterISS2ISS2SE2_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_cast


def itkMorphologicalGradientImageFilterISS3ISS3SE3_New():
    return itkMorphologicalGradientImageFilterISS3ISS3SE3.New()

class itkMorphologicalGradientImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS3ISS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterISS3ISS3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_swigregister(itkMorphologicalGradientImageFilterISS3ISS3SE3)
itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__
itkMorphologicalGradientImageFilterISS3ISS3SE3_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_cast


def itkMorphologicalGradientImageFilterIUC2IUC2SE2_New():
    return itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()

class itkMorphologicalGradientImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUC2IUC2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_swigregister(itkMorphologicalGradientImageFilterIUC2IUC2SE2)
itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__
itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast


def itkMorphologicalGradientImageFilterIUC3IUC3SE3_New():
    return itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()

class itkMorphologicalGradientImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUC3IUC3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_swigregister(itkMorphologicalGradientImageFilterIUC3IUC3SE3)
itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__
itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast


def itkMorphologicalGradientImageFilterIUS2IUS2SE2_New():
    return itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()

class itkMorphologicalGradientImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUS2IUS2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_swigregister(itkMorphologicalGradientImageFilterIUS2IUS2SE2)
itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__
itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast


def itkMorphologicalGradientImageFilterIUS3IUS3SE3_New():
    return itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()

class itkMorphologicalGradientImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    gray scale dilation of an image

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_Clone)
    SetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUS3IUS3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_swigregister(itkMorphologicalGradientImageFilterIUS3IUS3SE3)
itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__ = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__
itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast = _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def morphological_gradient_image_filter(*args, **kwargs):
    """Procedural interface for MorphologicalGradientImageFilter"""
    import itk
    instance = itk.MorphologicalGradientImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def morphological_gradient_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MorphologicalGradientImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.MorphologicalGradientImageFilter.values()[0]
    else:
        filter_object = itk.MorphologicalGradientImageFilter

    morphological_gradient_image_filter.__doc__ = filter_object.__doc__
    morphological_gradient_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    morphological_gradient_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MorphologicalGradientImageFilter, itkTemplate.itkTemplate):
        morphological_gradient_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        morphological_gradient_image_filter.__doc__ += "\n"
        morphological_gradient_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        morphological_gradient_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



