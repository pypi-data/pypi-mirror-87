# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKIOMeshBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshFileWriterPython
else:
    import _itkMeshFileWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeshFileWriterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeshFileWriterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkMapContainerPython
import itk.ITKCommonBasePython
import itk.itkVectorContainerPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkArrayPython
import itk.itkPointSetPython
import itk.itkMeshIOBasePython

def itkMeshFileWriterMD2_New():
    return itkMeshFileWriterMD2.New()

class itkMeshFileWriterMD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes mesh data to a single file.

    MeshFileWriter writes its input data to a single output file.
    MeshFileWriter interfaces with an MeshIO class to write out the data.

    A pluggable factory pattern is used that allows different kinds of
    writers to be registered (even at run time) without having to modify
    the code in this class. You can either manually instantiate the MeshIO
    object and associate it with the MeshFileWriter, or let the class
    figure it out from the extension. Normally just setting the filename
    with a suitable suffix (".vtk", etc) and setting the input to the
    writer is enough to get the writer to work properly.

    Wanlin Zhu. Uviversity of New South Wales, Australia.

    See:   MeshIOBase 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_GetInput)
    SetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileName)
    GetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_GetFileName)
    SetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetMeshIO)
    GetModifiableMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_GetModifiableMeshIO)
    GetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_GetMeshIO)
    SetFileTypeAsASCII = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileTypeAsASCII)
    SetFileTypeAsBINARY = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileTypeAsBINARY)
    Write = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_Write)
    SetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_UseCompressionOff)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMD2
    cast = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMD2

        Create a new object of the class itkMeshFileWriterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMD2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMD2_swigregister(itkMeshFileWriterMD2)
itkMeshFileWriterMD2___New_orig__ = _itkMeshFileWriterPython.itkMeshFileWriterMD2___New_orig__
itkMeshFileWriterMD2_cast = _itkMeshFileWriterPython.itkMeshFileWriterMD2_cast


def itkMeshFileWriterMD3_New():
    return itkMeshFileWriterMD3.New()

class itkMeshFileWriterMD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes mesh data to a single file.

    MeshFileWriter writes its input data to a single output file.
    MeshFileWriter interfaces with an MeshIO class to write out the data.

    A pluggable factory pattern is used that allows different kinds of
    writers to be registered (even at run time) without having to modify
    the code in this class. You can either manually instantiate the MeshIO
    object and associate it with the MeshFileWriter, or let the class
    figure it out from the extension. Normally just setting the filename
    with a suitable suffix (".vtk", etc) and setting the input to the
    writer is enough to get the writer to work properly.

    Wanlin Zhu. Uviversity of New South Wales, Australia.

    See:   MeshIOBase 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_GetInput)
    SetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileName)
    GetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_GetFileName)
    SetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetMeshIO)
    GetModifiableMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_GetModifiableMeshIO)
    GetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_GetMeshIO)
    SetFileTypeAsASCII = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileTypeAsASCII)
    SetFileTypeAsBINARY = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileTypeAsBINARY)
    Write = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_Write)
    SetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_UseCompressionOff)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMD3
    cast = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMD3

        Create a new object of the class itkMeshFileWriterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMD3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMD3_swigregister(itkMeshFileWriterMD3)
itkMeshFileWriterMD3___New_orig__ = _itkMeshFileWriterPython.itkMeshFileWriterMD3___New_orig__
itkMeshFileWriterMD3_cast = _itkMeshFileWriterPython.itkMeshFileWriterMD3_cast


def itkMeshFileWriterMF2_New():
    return itkMeshFileWriterMF2.New()

class itkMeshFileWriterMF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes mesh data to a single file.

    MeshFileWriter writes its input data to a single output file.
    MeshFileWriter interfaces with an MeshIO class to write out the data.

    A pluggable factory pattern is used that allows different kinds of
    writers to be registered (even at run time) without having to modify
    the code in this class. You can either manually instantiate the MeshIO
    object and associate it with the MeshFileWriter, or let the class
    figure it out from the extension. Normally just setting the filename
    with a suitable suffix (".vtk", etc) and setting the input to the
    writer is enough to get the writer to work properly.

    Wanlin Zhu. Uviversity of New South Wales, Australia.

    See:   MeshIOBase 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_Clone)
    SetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_GetInput)
    SetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileName)
    GetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_GetFileName)
    SetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetMeshIO)
    GetModifiableMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_GetModifiableMeshIO)
    GetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_GetMeshIO)
    SetFileTypeAsASCII = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileTypeAsASCII)
    SetFileTypeAsBINARY = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileTypeAsBINARY)
    Write = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_Write)
    SetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_UseCompressionOff)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMF2
    cast = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMF2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMF2

        Create a new object of the class itkMeshFileWriterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMF2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMF2_swigregister(itkMeshFileWriterMF2)
itkMeshFileWriterMF2___New_orig__ = _itkMeshFileWriterPython.itkMeshFileWriterMF2___New_orig__
itkMeshFileWriterMF2_cast = _itkMeshFileWriterPython.itkMeshFileWriterMF2_cast


def itkMeshFileWriterMF3_New():
    return itkMeshFileWriterMF3.New()

class itkMeshFileWriterMF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Writes mesh data to a single file.

    MeshFileWriter writes its input data to a single output file.
    MeshFileWriter interfaces with an MeshIO class to write out the data.

    A pluggable factory pattern is used that allows different kinds of
    writers to be registered (even at run time) without having to modify
    the code in this class. You can either manually instantiate the MeshIO
    object and associate it with the MeshFileWriter, or let the class
    figure it out from the extension. Normally just setting the filename
    with a suitable suffix (".vtk", etc) and setting the input to the
    writer is enough to get the writer to work properly.

    Wanlin Zhu. Uviversity of New South Wales, Australia.

    See:   MeshIOBase 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_Clone)
    SetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetInput)
    GetInput = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_GetInput)
    SetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileName)
    GetFileName = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_GetFileName)
    SetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetMeshIO)
    GetModifiableMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_GetModifiableMeshIO)
    GetMeshIO = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_GetMeshIO)
    SetFileTypeAsASCII = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileTypeAsASCII)
    SetFileTypeAsBINARY = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileTypeAsBINARY)
    Write = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_Write)
    SetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_SetUseCompression)
    GetUseCompression = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_GetUseCompression)
    UseCompressionOn = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_UseCompressionOn)
    UseCompressionOff = _swig_new_instance_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_UseCompressionOff)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMF3
    cast = _swig_new_static_method(_itkMeshFileWriterPython.itkMeshFileWriterMF3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMF3

        Create a new object of the class itkMeshFileWriterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMF3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMF3_swigregister(itkMeshFileWriterMF3)
itkMeshFileWriterMF3___New_orig__ = _itkMeshFileWriterPython.itkMeshFileWriterMF3___New_orig__
itkMeshFileWriterMF3_cast = _itkMeshFileWriterPython.itkMeshFileWriterMF3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mesh_file_writer(*args, **kwargs):
    """Procedural interface for MeshFileWriter"""
    import itk
    instance = itk.MeshFileWriter.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_file_writer_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeshFileWriter, itkTemplate.itkTemplate):
        filter_object = itk.MeshFileWriter.values()[0]
    else:
        filter_object = itk.MeshFileWriter

    mesh_file_writer.__doc__ = filter_object.__doc__
    mesh_file_writer.__doc__ += "\n Args are Input(s) to the filter.\n"
    mesh_file_writer.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.MeshFileWriter, itkTemplate.itkTemplate):
        mesh_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[0]
        mesh_file_writer.__doc__ += "\n"
        mesh_file_writer.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        mesh_file_writer.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



