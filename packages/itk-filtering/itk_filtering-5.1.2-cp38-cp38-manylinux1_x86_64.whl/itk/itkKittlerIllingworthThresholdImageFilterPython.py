# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKThresholdingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkKittlerIllingworthThresholdImageFilterPython
else:
    import _itkKittlerIllingworthThresholdImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkKittlerIllingworthThresholdImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkKittlerIllingworthThresholdImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkHistogramThresholdImageFilterPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkHistogramThresholdCalculatorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkImageToHistogramFilterPython
import itk.itkImageSinkPython

def itkKittlerIllingworthThresholdImageFilterID2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterID2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterID2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2ISS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2ISS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2ISS2)
itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2___New_orig__
itkKittlerIllingworthThresholdImageFilterID2ISS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2ISS2_cast


def itkKittlerIllingworthThresholdImageFilterID2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterID2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterID2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUC2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUC2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUC2)
itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2___New_orig__
itkKittlerIllingworthThresholdImageFilterID2IUC2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUC2_cast


def itkKittlerIllingworthThresholdImageFilterID2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterID2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterID2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID2IUS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID2IUS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterID2IUS2)
itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2___New_orig__
itkKittlerIllingworthThresholdImageFilterID2IUS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID2IUS2_cast


def itkKittlerIllingworthThresholdImageFilterID3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterID3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterID3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3ISS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3ISS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3ISS3)
itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3___New_orig__
itkKittlerIllingworthThresholdImageFilterID3ISS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3ISS3_cast


def itkKittlerIllingworthThresholdImageFilterID3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterID3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterID3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUC3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUC3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUC3)
itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3___New_orig__
itkKittlerIllingworthThresholdImageFilterID3IUC3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUC3_cast


def itkKittlerIllingworthThresholdImageFilterID3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterID3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterID3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterID3IUS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterID3IUS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterID3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterID3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterID3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterID3IUS3)
itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3___New_orig__
itkKittlerIllingworthThresholdImageFilterID3IUS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterID3IUS3_cast


def itkKittlerIllingworthThresholdImageFilterIF2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIF2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2ISS2)
itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2ISS2_cast


def itkKittlerIllingworthThresholdImageFilterIF2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIF2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUC2)
itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2___New_orig__
itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUC2_cast


def itkKittlerIllingworthThresholdImageFilterIF2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIF2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIF2IUS2)
itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF2IUS2_cast


def itkKittlerIllingworthThresholdImageFilterIF3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIF3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3ISS3)
itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3ISS3_cast


def itkKittlerIllingworthThresholdImageFilterIF3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIF3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUC3)
itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3___New_orig__
itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUC3_cast


def itkKittlerIllingworthThresholdImageFilterIF3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIF3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIF3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIF3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIF3IUS3)
itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIF3IUS3_cast


def itkKittlerIllingworthThresholdImageFilterISS2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterISS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2ISS2)
itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2___New_orig__
itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2ISS2_cast


def itkKittlerIllingworthThresholdImageFilterISS2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterISS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUC2)
itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2___New_orig__
itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUC2_cast


def itkKittlerIllingworthThresholdImageFilterISS2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterISS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterISS2IUS2)
itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2___New_orig__
itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS2IUS2_cast


def itkKittlerIllingworthThresholdImageFilterISS3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterISS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3ISS3)
itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3___New_orig__
itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3ISS3_cast


def itkKittlerIllingworthThresholdImageFilterISS3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterISS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUC3)
itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3___New_orig__
itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUC3_cast


def itkKittlerIllingworthThresholdImageFilterISS3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterISS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterISS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterISS3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterISS3IUS3)
itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3___New_orig__
itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterISS3IUS3_cast


def itkKittlerIllingworthThresholdImageFilterIUC2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2ISS2)
itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2ISS2_cast


def itkKittlerIllingworthThresholdImageFilterIUC2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUC2)
itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUC2_cast


def itkKittlerIllingworthThresholdImageFilterIUC2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIUC2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUC2IUS2)
itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC2IUS2_cast


def itkKittlerIllingworthThresholdImageFilterIUC3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3ISS3)
itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3ISS3_cast


def itkKittlerIllingworthThresholdImageFilterIUC3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUC3)
itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUC3_cast


def itkKittlerIllingworthThresholdImageFilterIUC3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIUC3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUC3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUC3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUC3IUS3)
itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUC3IUS3_cast


def itkKittlerIllingworthThresholdImageFilterIUS2ISS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2ISS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2ISS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2ISS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2ISS2)
itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2ISS2_cast


def itkKittlerIllingworthThresholdImageFilterIUS2IUC2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2IUC2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUC2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2IUC2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUC2)
itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUC2_cast


def itkKittlerIllingworthThresholdImageFilterIUS2IUS2_New():
    return itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()

class itkKittlerIllingworthThresholdImageFilterIUS2IUS2(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS2IUS2

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS2IUS2 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_swigregister(itkKittlerIllingworthThresholdImageFilterIUS2IUS2)
itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS2IUS2_cast


def itkKittlerIllingworthThresholdImageFilterIUS3ISS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3ISS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3ISS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3ISS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3ISS3)
itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3ISS3_cast


def itkKittlerIllingworthThresholdImageFilterIUS3IUC3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3IUC3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUC3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3IUC3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUC3)
itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUC3_cast


def itkKittlerIllingworthThresholdImageFilterIUS3IUS3_New():
    return itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()

class itkKittlerIllingworthThresholdImageFilterIUS3IUS3(itk.itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    r"""


    Threshold an image using the KittlerIllingworth Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the KittlerIllingworthThresholdCalculator and applies
    that threshold to the input image using the
    BinaryThresholdImageFilter.

    Richard Beare. Department of Medicine, Monash University, Melbourne,
    Australia.

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279
    orhttp://www.insight-journal.org/browse/publication/811

    See:   HistogramThresholdImageFilter 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_Clone)
    __swig_destroy__ = _itkKittlerIllingworthThresholdImageFilterPython.delete_itkKittlerIllingworthThresholdImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkKittlerIllingworthThresholdImageFilterIUS3IUS3

        Create a new object of the class itkKittlerIllingworthThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkKittlerIllingworthThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkKittlerIllingworthThresholdImageFilterIUS3IUS3 in _itkKittlerIllingworthThresholdImageFilterPython:
_itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_swigregister(itkKittlerIllingworthThresholdImageFilterIUS3IUS3)
itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__ = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3___New_orig__
itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast = _itkKittlerIllingworthThresholdImageFilterPython.itkKittlerIllingworthThresholdImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def kittler_illingworth_threshold_image_filter(*args, **kwargs):
    """Procedural interface for KittlerIllingworthThresholdImageFilter"""
    import itk
    instance = itk.KittlerIllingworthThresholdImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def kittler_illingworth_threshold_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.KittlerIllingworthThresholdImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.KittlerIllingworthThresholdImageFilter.values()[0]
    else:
        filter_object = itk.KittlerIllingworthThresholdImageFilter

    kittler_illingworth_threshold_image_filter.__doc__ = filter_object.__doc__
    kittler_illingworth_threshold_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    kittler_illingworth_threshold_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.KittlerIllingworthThresholdImageFilter, itkTemplate.itkTemplate):
        kittler_illingworth_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        kittler_illingworth_threshold_image_filter.__doc__ += "\n"
        kittler_illingworth_threshold_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        kittler_illingworth_threshold_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



