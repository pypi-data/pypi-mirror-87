# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGradientPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGradientRecursiveGaussianImageFilterPython
else:
    import _itkGradientRecursiveGaussianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGradientRecursiveGaussianImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGradientRecursiveGaussianImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkGradientRecursiveGaussianImageFilterID2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterID2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterID2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID2ICVF22
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterID2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterID2ICVF22)
itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__
itkGradientRecursiveGaussianImageFilterID2ICVF22_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_cast


def itkGradientRecursiveGaussianImageFilterID3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterID3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterID3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF23):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID3ICVF23
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterID3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterID3ICVF23)
itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__
itkGradientRecursiveGaussianImageFilterID3ICVF23_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_cast


def itkGradientRecursiveGaussianImageFilterIF2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIF2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF2ICVF22
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIF2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIF2ICVF22)
itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__
itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast


def itkGradientRecursiveGaussianImageFilterIF3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIF3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF23):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF3ICVF23
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIF3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIF3ICVF23)
itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__
itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast


def itkGradientRecursiveGaussianImageFilterISS2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterISS2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2ICVF22):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS2ICVF22
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterISS2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterISS2ICVF22)
itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__
itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast


def itkGradientRecursiveGaussianImageFilterISS3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterISS3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ICVF23):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS3ICVF23
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterISS3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterISS3ICVF23)
itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__
itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast


def itkGradientRecursiveGaussianImageFilterIUC2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIUC2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC2ICVF22
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUC2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUC2ICVF22)
itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__
itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast


def itkGradientRecursiveGaussianImageFilterIUC3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIUC3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF23):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC3ICVF23
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUC3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUC3ICVF23)
itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__
itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast


def itkGradientRecursiveGaussianImageFilterIUS2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIUS2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS2ICVF22
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUS2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUS2ICVF22)
itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__
itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast


def itkGradientRecursiveGaussianImageFilterIUS3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIUS3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF23):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS3ICVF23
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUS3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUS3ICVF23)
itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__
itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast


def itkGradientRecursiveGaussianImageFilterIVF22ICVF42_New():
    return itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()

class itkGradientRecursiveGaussianImageFilterIVF22ICVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF22ICVF42
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF22ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIVF22ICVF42 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_swigregister(itkGradientRecursiveGaussianImageFilterIVF22ICVF42)
itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__
itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast


def itkGradientRecursiveGaussianImageFilterIVF23ICVF43_New():
    return itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()

class itkGradientRecursiveGaussianImageFilterIVF23ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43):
    r"""


    Computes the gradient of an image by convolution with the first
    derivative of a Gaussian.

    This filter is implemented using the recursive gaussian filters.

    This filter supports both scalar and vector pixel types within the
    input image, including VectorImage type.

    GradientRecursiveGaussianImageFilter on Image with Vector type} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Clone)
    SetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigmaArray)
    SetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigma)
    GetSigmaArray = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigmaArray)
    GetSigma = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigma)
    SetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetNormalizeAcrossScale)
    GetNormalizeAcrossScale = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetNormalizeAcrossScale)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GenerateInputRequestedRegion)
    SetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetUseImageDirection)
    GetUseImageDirection = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetUseImageDirection)
    UseImageDirectionOn = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOn)
    UseImageDirectionOff = _swig_new_instance_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOff)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF23ICVF43
    cast = _swig_new_static_method(_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF23ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIVF23ICVF43 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_swigregister(itkGradientRecursiveGaussianImageFilterIVF23ICVF43)
itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__ = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__
itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast = _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def gradient_recursive_gaussian_image_filter(*args, **kwargs):
    """Procedural interface for GradientRecursiveGaussianImageFilter"""
    import itk
    instance = itk.GradientRecursiveGaussianImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def gradient_recursive_gaussian_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GradientRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GradientRecursiveGaussianImageFilter.values()[0]
    else:
        filter_object = itk.GradientRecursiveGaussianImageFilter

    gradient_recursive_gaussian_image_filter.__doc__ = filter_object.__doc__
    gradient_recursive_gaussian_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    gradient_recursive_gaussian_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GradientRecursiveGaussianImageFilter, itkTemplate.itkTemplate):
        gradient_recursive_gaussian_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        gradient_recursive_gaussian_image_filter.__doc__ += "\n"
        gradient_recursive_gaussian_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        gradient_recursive_gaussian_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



