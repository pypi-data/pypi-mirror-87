# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageSourcePython
else:
    import _itkImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageSourcePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageSourcePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
class itkImageSourceICF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICF2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICF2_cast)

# Register itkImageSourceICF2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICF2_swigregister(itkImageSourceICF2)
itkImageSourceICF2_cast = _itkImageSourcePython.itkImageSourceICF2_cast

class itkImageSourceICF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICF3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICF3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICF3_cast)

# Register itkImageSourceICF3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICF3_swigregister(itkImageSourceICF3)
itkImageSourceICF3_cast = _itkImageSourcePython.itkImageSourceICF3_cast

class itkImageSourceICVD22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD22_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD22_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD22_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD22_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVD22
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVD22_cast)

# Register itkImageSourceICVD22 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVD22_swigregister(itkImageSourceICVD22)
itkImageSourceICVD22_cast = _itkImageSourcePython.itkImageSourceICVD22_cast

class itkImageSourceICVD33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD33_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD33_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD33_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVD33_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVD33
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVD33_cast)

# Register itkImageSourceICVD33 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVD33_swigregister(itkImageSourceICVD33)
itkImageSourceICVD33_cast = _itkImageSourcePython.itkImageSourceICVD33_cast

class itkImageSourceICVF22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF22_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF22_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF22_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF22_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF22
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF22_cast)

# Register itkImageSourceICVF22 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF22_swigregister(itkImageSourceICVF22)
itkImageSourceICVF22_cast = _itkImageSourcePython.itkImageSourceICVF22_cast

class itkImageSourceICVF23(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF23_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF23_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF23_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF23_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF23
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF23_cast)

# Register itkImageSourceICVF23 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF23_swigregister(itkImageSourceICVF23)
itkImageSourceICVF23_cast = _itkImageSourcePython.itkImageSourceICVF23_cast

class itkImageSourceICVF32(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF32_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF32_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF32_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF32_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF32
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF32_cast)

# Register itkImageSourceICVF32 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF32_swigregister(itkImageSourceICVF32)
itkImageSourceICVF32_cast = _itkImageSourcePython.itkImageSourceICVF32_cast

class itkImageSourceICVF33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF33_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF33_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF33_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF33_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF33
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF33_cast)

# Register itkImageSourceICVF33 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF33_swigregister(itkImageSourceICVF33)
itkImageSourceICVF33_cast = _itkImageSourcePython.itkImageSourceICVF33_cast

class itkImageSourceICVF42(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF42_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF42_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF42_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF42_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF42
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF42_cast)

# Register itkImageSourceICVF42 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF42_swigregister(itkImageSourceICVF42)
itkImageSourceICVF42_cast = _itkImageSourcePython.itkImageSourceICVF42_cast

class itkImageSourceICVF43(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF43_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF43_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF43_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceICVF43_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceICVF43
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceICVF43_cast)

# Register itkImageSourceICVF43 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceICVF43_swigregister(itkImageSourceICVF43)
itkImageSourceICVF43_cast = _itkImageSourcePython.itkImageSourceICVF43_cast

class itkImageSourceID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceID2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceID2_cast)

# Register itkImageSourceID2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceID2_swigregister(itkImageSourceID2)
itkImageSourceID2_cast = _itkImageSourcePython.itkImageSourceID2_cast

class itkImageSourceID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceID3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceID3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceID3_cast)

# Register itkImageSourceID3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceID3_swigregister(itkImageSourceID3)
itkImageSourceID3_cast = _itkImageSourcePython.itkImageSourceID3_cast

class itkImageSourceIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIF2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIF2_cast)

# Register itkImageSourceIF2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIF2_swigregister(itkImageSourceIF2)
itkImageSourceIF2_cast = _itkImageSourcePython.itkImageSourceIF2_cast

class itkImageSourceIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIF3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIF3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIF3_cast)

# Register itkImageSourceIF3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIF3_swigregister(itkImageSourceIF3)
itkImageSourceIF3_cast = _itkImageSourcePython.itkImageSourceIF3_cast

class itkImageSourceIRGBAUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIRGBAUC2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIRGBAUC2_cast)

# Register itkImageSourceIRGBAUC2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIRGBAUC2_swigregister(itkImageSourceIRGBAUC2)
itkImageSourceIRGBAUC2_cast = _itkImageSourcePython.itkImageSourceIRGBAUC2_cast

class itkImageSourceIRGBAUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBAUC3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIRGBAUC3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIRGBAUC3_cast)

# Register itkImageSourceIRGBAUC3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIRGBAUC3_swigregister(itkImageSourceIRGBAUC3)
itkImageSourceIRGBAUC3_cast = _itkImageSourcePython.itkImageSourceIRGBAUC3_cast

class itkImageSourceIRGBUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIRGBUC2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIRGBUC2_cast)

# Register itkImageSourceIRGBUC2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIRGBUC2_swigregister(itkImageSourceIRGBUC2)
itkImageSourceIRGBUC2_cast = _itkImageSourcePython.itkImageSourceIRGBUC2_cast

class itkImageSourceIRGBUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIRGBUC3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIRGBUC3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIRGBUC3_cast)

# Register itkImageSourceIRGBUC3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIRGBUC3_swigregister(itkImageSourceIRGBUC3)
itkImageSourceIRGBUC3_cast = _itkImageSourcePython.itkImageSourceIRGBUC3_cast

class itkImageSourceISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceISS2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceISS2_cast)

# Register itkImageSourceISS2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceISS2_swigregister(itkImageSourceISS2)
itkImageSourceISS2_cast = _itkImageSourcePython.itkImageSourceISS2_cast

class itkImageSourceISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISS3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceISS3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceISS3_cast)

# Register itkImageSourceISS3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceISS3_swigregister(itkImageSourceISS3)
itkImageSourceISS3_cast = _itkImageSourcePython.itkImageSourceISS3_cast

class itkImageSourceISSRTD22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD22_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD22_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD22_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD22_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceISSRTD22
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceISSRTD22_cast)

# Register itkImageSourceISSRTD22 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceISSRTD22_swigregister(itkImageSourceISSRTD22)
itkImageSourceISSRTD22_cast = _itkImageSourcePython.itkImageSourceISSRTD22_cast

class itkImageSourceISSRTD33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD33_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD33_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD33_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceISSRTD33_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceISSRTD33
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceISSRTD33_cast)

# Register itkImageSourceISSRTD33 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceISSRTD33_swigregister(itkImageSourceISSRTD33)
itkImageSourceISSRTD33_cast = _itkImageSourcePython.itkImageSourceISSRTD33_cast

class itkImageSourceIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUC2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUC2_cast)

# Register itkImageSourceIUC2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUC2_swigregister(itkImageSourceIUC2)
itkImageSourceIUC2_cast = _itkImageSourcePython.itkImageSourceIUC2_cast

class itkImageSourceIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUC3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUC3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUC3_cast)

# Register itkImageSourceIUC3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUC3_swigregister(itkImageSourceIUC3)
itkImageSourceIUC3_cast = _itkImageSourcePython.itkImageSourceIUC3_cast

class itkImageSourceIUL2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUL2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUL2_cast)

# Register itkImageSourceIUL2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUL2_swigregister(itkImageSourceIUL2)
itkImageSourceIUL2_cast = _itkImageSourcePython.itkImageSourceIUL2_cast

class itkImageSourceIUL3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUL3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUL3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUL3_cast)

# Register itkImageSourceIUL3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUL3_swigregister(itkImageSourceIUL3)
itkImageSourceIUL3_cast = _itkImageSourcePython.itkImageSourceIUL3_cast

class itkImageSourceIULL2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIULL2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIULL2_cast)

# Register itkImageSourceIULL2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIULL2_swigregister(itkImageSourceIULL2)
itkImageSourceIULL2_cast = _itkImageSourcePython.itkImageSourceIULL2_cast

class itkImageSourceIULL3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIULL3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIULL3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIULL3_cast)

# Register itkImageSourceIULL3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIULL3_swigregister(itkImageSourceIULL3)
itkImageSourceIULL3_cast = _itkImageSourcePython.itkImageSourceIULL3_cast

class itkImageSourceIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUS2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUS2_cast)

# Register itkImageSourceIUS2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUS2_swigregister(itkImageSourceIUS2)
itkImageSourceIUS2_cast = _itkImageSourcePython.itkImageSourceIUS2_cast

class itkImageSourceIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIUS3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIUS3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIUS3_cast)

# Register itkImageSourceIUS3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIUS3_swigregister(itkImageSourceIUS3)
itkImageSourceIUS3_cast = _itkImageSourcePython.itkImageSourceIUS3_cast

class itkImageSourceIVF22(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF22_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF22_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF22_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF22_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF22
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF22_cast)

# Register itkImageSourceIVF22 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF22_swigregister(itkImageSourceIVF22)
itkImageSourceIVF22_cast = _itkImageSourcePython.itkImageSourceIVF22_cast

class itkImageSourceIVF23(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF23_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF23_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF23_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF23_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF23
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF23_cast)

# Register itkImageSourceIVF23 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF23_swigregister(itkImageSourceIVF23)
itkImageSourceIVF23_cast = _itkImageSourcePython.itkImageSourceIVF23_cast

class itkImageSourceIVF32(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF32_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF32_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF32_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF32_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF32
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF32_cast)

# Register itkImageSourceIVF32 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF32_swigregister(itkImageSourceIVF32)
itkImageSourceIVF32_cast = _itkImageSourcePython.itkImageSourceIVF32_cast

class itkImageSourceIVF33(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF33_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF33_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF33_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF33_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF33
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF33_cast)

# Register itkImageSourceIVF33 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF33_swigregister(itkImageSourceIVF33)
itkImageSourceIVF33_cast = _itkImageSourcePython.itkImageSourceIVF33_cast

class itkImageSourceIVF42(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF42_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF42_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF42_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF42_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF42
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF42_cast)

# Register itkImageSourceIVF42 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF42_swigregister(itkImageSourceIVF42)
itkImageSourceIVF42_cast = _itkImageSourcePython.itkImageSourceIVF42_cast

class itkImageSourceIVF43(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF43_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF43_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF43_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceIVF43_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceIVF43
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceIVF43_cast)

# Register itkImageSourceIVF43 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceIVF43_swigregister(itkImageSourceIVF43)
itkImageSourceIVF43_cast = _itkImageSourcePython.itkImageSourceIVF43_cast

class itkImageSourceVID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVID2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVID2_cast)

# Register itkImageSourceVID2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVID2_swigregister(itkImageSourceVID2)
itkImageSourceVID2_cast = _itkImageSourcePython.itkImageSourceVID2_cast

class itkImageSourceVID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVID3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVID3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVID3_cast)

# Register itkImageSourceVID3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVID3_swigregister(itkImageSourceVID3)
itkImageSourceVID3_cast = _itkImageSourcePython.itkImageSourceVID3_cast

class itkImageSourceVIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIF2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIF2_cast)

# Register itkImageSourceVIF2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIF2_swigregister(itkImageSourceVIF2)
itkImageSourceVIF2_cast = _itkImageSourcePython.itkImageSourceVIF2_cast

class itkImageSourceVIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIF3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIF3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIF3_cast)

# Register itkImageSourceVIF3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIF3_swigregister(itkImageSourceVIF3)
itkImageSourceVIF3_cast = _itkImageSourcePython.itkImageSourceVIF3_cast

class itkImageSourceVISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVISS2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVISS2_cast)

# Register itkImageSourceVISS2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVISS2_swigregister(itkImageSourceVISS2)
itkImageSourceVISS2_cast = _itkImageSourcePython.itkImageSourceVISS2_cast

class itkImageSourceVISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVISS3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVISS3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVISS3_cast)

# Register itkImageSourceVISS3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVISS3_swigregister(itkImageSourceVISS3)
itkImageSourceVISS3_cast = _itkImageSourcePython.itkImageSourceVISS3_cast

class itkImageSourceVIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIUC2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIUC2_cast)

# Register itkImageSourceVIUC2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIUC2_swigregister(itkImageSourceVIUC2)
itkImageSourceVIUC2_cast = _itkImageSourcePython.itkImageSourceVIUC2_cast

class itkImageSourceVIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUC3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIUC3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIUC3_cast)

# Register itkImageSourceVIUC3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIUC3_swigregister(itkImageSourceVIUC3)
itkImageSourceVIUC3_cast = _itkImageSourcePython.itkImageSourceVIUC3_cast

class itkImageSourceVIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS2_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS2_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIUS2
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIUS2_cast)

# Register itkImageSourceVIUS2 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIUS2_swigregister(itkImageSourceVIUS2)
itkImageSourceVIUS2_cast = _itkImageSourcePython.itkImageSourceVIUS2_cast

class itkImageSourceVIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""


    Base class for all process objects that output image data.

    ImageSource is the base class for all process objects that output
    image data. Specifically, this class defines the GetOutput() method
    that returns a pointer to the output image. The class also defines
    some internal private data members that are used to manage streaming
    of data.

    Memory management in an ImageSource is slightly different than a
    standard ProcessObject. ProcessObject's always release the bulk data
    associated with their output prior to GenerateData() being called.
    ImageSources default to not releasing the bulk data incase that
    particular memory block is large enough to hold the new output values.
    This avoids unnecessary deallocation/allocation sequences.
    ImageSource's can be forced to use a memory management model similar
    to the default ProcessObject behaviour by calling
    ProcessObject::ReleaseDataBeforeUpdateFlagOn(). A user may want to set
    this flag to limit peak memory usage during a pipeline update. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS3_GetOutput)
    GraftOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_itkImageSourcePython.itkImageSourceVIUS3_MakeOutput)
    __swig_destroy__ = _itkImageSourcePython.delete_itkImageSourceVIUS3
    cast = _swig_new_static_method(_itkImageSourcePython.itkImageSourceVIUS3_cast)

# Register itkImageSourceVIUS3 in _itkImageSourcePython:
_itkImageSourcePython.itkImageSourceVIUS3_swigregister(itkImageSourceVIUS3)
itkImageSourceVIUS3_cast = _itkImageSourcePython.itkImageSourceVIUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def image_source(*args, **kwargs):
    """Procedural interface for ImageSource"""
    import itk
    instance = itk.ImageSource.New(*args, **kwargs)
    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.ImageSource, itkTemplate.itkTemplate):
        filter_object = itk.ImageSource.values()[0]
    else:
        filter_object = itk.ImageSource

    image_source.__doc__ = filter_object.__doc__
    image_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    image_source.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.ImageSource, itkTemplate.itkTemplate):
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[0]
        image_source.__doc__ += "\n"
        image_source.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        image_source.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



