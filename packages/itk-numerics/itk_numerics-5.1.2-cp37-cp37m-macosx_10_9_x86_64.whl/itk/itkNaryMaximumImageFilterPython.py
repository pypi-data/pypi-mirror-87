# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNaryMaximumImageFilterPython
else:
    import _itkNaryMaximumImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNaryMaximumImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNaryMaximumImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkNaryMaximumImageFilterID2ID2_Superclass_New():
    return itkNaryMaximumImageFilterID2ID2_Superclass.New()

class itkNaryMaximumImageFilterID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkNaryMaximumImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID2ID2_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID2ID2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID2ID2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_swigregister(itkNaryMaximumImageFilterID2ID2_Superclass)
itkNaryMaximumImageFilterID2ID2_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass___New_orig__
itkNaryMaximumImageFilterID2ID2_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Superclass_cast


def itkNaryMaximumImageFilterID3ID3_Superclass_New():
    return itkNaryMaximumImageFilterID3ID3_Superclass.New()

class itkNaryMaximumImageFilterID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkNaryMaximumImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID3ID3_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID3ID3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID3ID3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_swigregister(itkNaryMaximumImageFilterID3ID3_Superclass)
itkNaryMaximumImageFilterID3ID3_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass___New_orig__
itkNaryMaximumImageFilterID3ID3_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Superclass_cast


def itkNaryMaximumImageFilterIF2IF2_Superclass_New():
    return itkNaryMaximumImageFilterIF2IF2_Superclass.New()

class itkNaryMaximumImageFilterIF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF2IF2_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF2IF2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF2IF2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_swigregister(itkNaryMaximumImageFilterIF2IF2_Superclass)
itkNaryMaximumImageFilterIF2IF2_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass___New_orig__
itkNaryMaximumImageFilterIF2IF2_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Superclass_cast


def itkNaryMaximumImageFilterIF3IF3_Superclass_New():
    return itkNaryMaximumImageFilterIF3IF3_Superclass.New()

class itkNaryMaximumImageFilterIF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF3IF3_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF3IF3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF3IF3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_swigregister(itkNaryMaximumImageFilterIF3IF3_Superclass)
itkNaryMaximumImageFilterIF3IF3_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass___New_orig__
itkNaryMaximumImageFilterIF3IF3_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Superclass_cast


def itkNaryMaximumImageFilterISS2ISS2_Superclass_New():
    return itkNaryMaximumImageFilterISS2ISS2_Superclass.New()

class itkNaryMaximumImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS2ISS2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS2ISS2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_swigregister(itkNaryMaximumImageFilterISS2ISS2_Superclass)
itkNaryMaximumImageFilterISS2ISS2_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass___New_orig__
itkNaryMaximumImageFilterISS2ISS2_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Superclass_cast


def itkNaryMaximumImageFilterISS3ISS3_Superclass_New():
    return itkNaryMaximumImageFilterISS3ISS3_Superclass.New()

class itkNaryMaximumImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkNaryMaximumImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS3ISS3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS3ISS3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_swigregister(itkNaryMaximumImageFilterISS3ISS3_Superclass)
itkNaryMaximumImageFilterISS3ISS3_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass___New_orig__
itkNaryMaximumImageFilterISS3ISS3_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Superclass_cast


def itkNaryMaximumImageFilterIUC2IUC2_Superclass_New():
    return itkNaryMaximumImageFilterIUC2IUC2_Superclass.New()

class itkNaryMaximumImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC2IUC2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_swigregister(itkNaryMaximumImageFilterIUC2IUC2_Superclass)
itkNaryMaximumImageFilterIUC2IUC2_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass___New_orig__
itkNaryMaximumImageFilterIUC2IUC2_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Superclass_cast


def itkNaryMaximumImageFilterIUC3IUC3_Superclass_New():
    return itkNaryMaximumImageFilterIUC3IUC3_Superclass.New()

class itkNaryMaximumImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC3IUC3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_swigregister(itkNaryMaximumImageFilterIUC3IUC3_Superclass)
itkNaryMaximumImageFilterIUC3IUC3_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass___New_orig__
itkNaryMaximumImageFilterIUC3IUC3_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Superclass_cast


def itkNaryMaximumImageFilterIUS2IUS2_Superclass_New():
    return itkNaryMaximumImageFilterIUS2IUS2_Superclass.New()

class itkNaryMaximumImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS2IUS2_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_swigregister(itkNaryMaximumImageFilterIUS2IUS2_Superclass)
itkNaryMaximumImageFilterIUS2IUS2_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass___New_orig__
itkNaryMaximumImageFilterIUS2IUS2_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Superclass_cast


def itkNaryMaximumImageFilterIUS3IUS3_Superclass_New():
    return itkNaryMaximumImageFilterIUS3IUS3_Superclass.New()

class itkNaryMaximumImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNaryMaximumImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_Clone)
    GetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_SetFunctor)
    SameDimensionCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_SameDimensionCheck
    
    OutputHasZeroCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_OutputHasZeroCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkNaryMaximumImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS3IUS3_Superclass in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_swigregister(itkNaryMaximumImageFilterIUS3IUS3_Superclass)
itkNaryMaximumImageFilterIUS3IUS3_Superclass___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass___New_orig__
itkNaryMaximumImageFilterIUS3IUS3_Superclass_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Superclass_cast


def itkNaryMaximumImageFilterID2ID2_New():
    return itkNaryMaximumImageFilterID2ID2.New()

class itkNaryMaximumImageFilterID2ID2(itkNaryMaximumImageFilterID2ID2_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID2ID2
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID2ID2

        Create a new object of the class itkNaryMaximumImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID2ID2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_swigregister(itkNaryMaximumImageFilterID2ID2)
itkNaryMaximumImageFilterID2ID2___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2___New_orig__
itkNaryMaximumImageFilterID2ID2_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID2ID2_cast


def itkNaryMaximumImageFilterID3ID3_New():
    return itkNaryMaximumImageFilterID3ID3.New()

class itkNaryMaximumImageFilterID3ID3(itkNaryMaximumImageFilterID3ID3_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterID3ID3
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterID3ID3

        Create a new object of the class itkNaryMaximumImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterID3ID3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_swigregister(itkNaryMaximumImageFilterID3ID3)
itkNaryMaximumImageFilterID3ID3___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3___New_orig__
itkNaryMaximumImageFilterID3ID3_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterID3ID3_cast


def itkNaryMaximumImageFilterIF2IF2_New():
    return itkNaryMaximumImageFilterIF2IF2.New()

class itkNaryMaximumImageFilterIF2IF2(itkNaryMaximumImageFilterIF2IF2_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF2IF2
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF2IF2

        Create a new object of the class itkNaryMaximumImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF2IF2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_swigregister(itkNaryMaximumImageFilterIF2IF2)
itkNaryMaximumImageFilterIF2IF2___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2___New_orig__
itkNaryMaximumImageFilterIF2IF2_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF2IF2_cast


def itkNaryMaximumImageFilterIF3IF3_New():
    return itkNaryMaximumImageFilterIF3IF3.New()

class itkNaryMaximumImageFilterIF3IF3(itkNaryMaximumImageFilterIF3IF3_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIF3IF3
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIF3IF3

        Create a new object of the class itkNaryMaximumImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIF3IF3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_swigregister(itkNaryMaximumImageFilterIF3IF3)
itkNaryMaximumImageFilterIF3IF3___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3___New_orig__
itkNaryMaximumImageFilterIF3IF3_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIF3IF3_cast


def itkNaryMaximumImageFilterISS2ISS2_New():
    return itkNaryMaximumImageFilterISS2ISS2.New()

class itkNaryMaximumImageFilterISS2ISS2(itkNaryMaximumImageFilterISS2ISS2_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS2ISS2

        Create a new object of the class itkNaryMaximumImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS2ISS2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_swigregister(itkNaryMaximumImageFilterISS2ISS2)
itkNaryMaximumImageFilterISS2ISS2___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2___New_orig__
itkNaryMaximumImageFilterISS2ISS2_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS2ISS2_cast


def itkNaryMaximumImageFilterISS3ISS3_New():
    return itkNaryMaximumImageFilterISS3ISS3.New()

class itkNaryMaximumImageFilterISS3ISS3(itkNaryMaximumImageFilterISS3ISS3_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterISS3ISS3

        Create a new object of the class itkNaryMaximumImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterISS3ISS3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_swigregister(itkNaryMaximumImageFilterISS3ISS3)
itkNaryMaximumImageFilterISS3ISS3___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3___New_orig__
itkNaryMaximumImageFilterISS3ISS3_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterISS3ISS3_cast


def itkNaryMaximumImageFilterIUC2IUC2_New():
    return itkNaryMaximumImageFilterIUC2IUC2.New()

class itkNaryMaximumImageFilterIUC2IUC2(itkNaryMaximumImageFilterIUC2IUC2_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC2IUC2

        Create a new object of the class itkNaryMaximumImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC2IUC2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_swigregister(itkNaryMaximumImageFilterIUC2IUC2)
itkNaryMaximumImageFilterIUC2IUC2___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2___New_orig__
itkNaryMaximumImageFilterIUC2IUC2_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC2IUC2_cast


def itkNaryMaximumImageFilterIUC3IUC3_New():
    return itkNaryMaximumImageFilterIUC3IUC3.New()

class itkNaryMaximumImageFilterIUC3IUC3(itkNaryMaximumImageFilterIUC3IUC3_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUC3IUC3

        Create a new object of the class itkNaryMaximumImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUC3IUC3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_swigregister(itkNaryMaximumImageFilterIUC3IUC3)
itkNaryMaximumImageFilterIUC3IUC3___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3___New_orig__
itkNaryMaximumImageFilterIUC3IUC3_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUC3IUC3_cast


def itkNaryMaximumImageFilterIUS2IUS2_New():
    return itkNaryMaximumImageFilterIUS2IUS2.New()

class itkNaryMaximumImageFilterIUS2IUS2(itkNaryMaximumImageFilterIUS2IUS2_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS2IUS2

        Create a new object of the class itkNaryMaximumImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS2IUS2 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_swigregister(itkNaryMaximumImageFilterIUS2IUS2)
itkNaryMaximumImageFilterIUS2IUS2___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2___New_orig__
itkNaryMaximumImageFilterIUS2IUS2_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS2IUS2_cast


def itkNaryMaximumImageFilterIUS3IUS3_New():
    return itkNaryMaximumImageFilterIUS3IUS3.New()

class itkNaryMaximumImageFilterIUS3IUS3(itkNaryMaximumImageFilterIUS3IUS3_Superclass):
    r"""


    Computes the pixel-wise maximum of several images.

    This class is templated over the types of the input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the output images must have a valid definition of
    the operator<. This condition is required because internally this
    filter will perform an operation similar to:

    (where current_maximum is also of type OutputPixelType)

    for each of the n input images.

    For example, this filter could be used directly to find a "maximum
    projection" of a series of images, often used in preliminary analysis
    of time-series data.

    Zachary Pincus  This filter was contributed by Zachary Pincus from the
    Department of Biochemistry and Program in Biomedical Informatics at
    Stanford University School of Medicine 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_Clone)
    InputConvertibleToOutputCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    InputLessThanComparableCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputLessThanComparableCheck
    
    InputHasNumericTraitsCheck = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNaryMaximumImageFilterPython.delete_itkNaryMaximumImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkNaryMaximumImageFilterIUS3IUS3

        Create a new object of the class itkNaryMaximumImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNaryMaximumImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNaryMaximumImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNaryMaximumImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNaryMaximumImageFilterIUS3IUS3 in _itkNaryMaximumImageFilterPython:
_itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_swigregister(itkNaryMaximumImageFilterIUS3IUS3)
itkNaryMaximumImageFilterIUS3IUS3___New_orig__ = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3___New_orig__
itkNaryMaximumImageFilterIUS3IUS3_cast = _itkNaryMaximumImageFilterPython.itkNaryMaximumImageFilterIUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def nary_functor_image_filter(*args, **kwargs):
    """Procedural interface for NaryFunctorImageFilter"""
    import itk
    instance = itk.NaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def nary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.NaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.NaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.NaryFunctorImageFilter

    nary_functor_image_filter.__doc__ = filter_object.__doc__
    nary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    nary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.NaryFunctorImageFilter, itkTemplate.itkTemplate):
        nary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        nary_functor_image_filter.__doc__ += "\n"
        nary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        nary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def nary_maximum_image_filter(*args, **kwargs):
    """Procedural interface for NaryMaximumImageFilter"""
    import itk
    instance = itk.NaryMaximumImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def nary_maximum_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.NaryMaximumImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.NaryMaximumImageFilter.values()[0]
    else:
        filter_object = itk.NaryMaximumImageFilter

    nary_maximum_image_filter.__doc__ = filter_object.__doc__
    nary_maximum_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    nary_maximum_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.NaryMaximumImageFilter, itkTemplate.itkTemplate):
        nary_maximum_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        nary_maximum_image_filter.__doc__ += "\n"
        nary_maximum_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        nary_maximum_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



