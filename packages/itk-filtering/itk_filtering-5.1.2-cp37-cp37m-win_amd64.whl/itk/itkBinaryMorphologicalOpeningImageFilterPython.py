# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMorphologicalOpeningImageFilterPython
else:
    import _itkBinaryMorphologicalOpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinaryMorphologicalOpeningImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinaryMorphologicalOpeningImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkFlatStructuringElementPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkNeighborhoodPython

def itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterID2ID2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterID2ID2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterID2ID2SE2)
itkBinaryMorphologicalOpeningImageFilterID2ID2SE2___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2___New_orig__
itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_cast


def itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterID3ID3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterID3ID3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterID3ID3SE3)
itkBinaryMorphologicalOpeningImageFilterID3ID3SE3___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3___New_orig__
itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_cast


def itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2)
itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__
itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_cast


def itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3)
itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__
itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_cast


def itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2)
itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__
itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_cast


def itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3)
itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__
itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_cast


def itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2)
itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__
itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_cast


def itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3)
itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__
itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_cast


def itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2)
itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__
itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_cast


def itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    binary morphological opening of an image.

    This filter removes small (i.e., smaller than the structuring element)
    structures in the interior or at the boundaries of the image. The
    morphological opening of an image "f" is defined as: Opening(f) =
    Dilatation(Erosion(f)).

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    This code was contributed in the Insight Journal paper: "Binary
    morphological closing and opening image filters" by Lehmann
    G.https://hdl.handle.net/1926/141http://www.insight-
    journal.org/browse/publication/58

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.

    See:  MorphologyImageFilter, GrayscaleDilateImageFilter,
    GrayscaleErodeImageFilter
    {Filtering/BinaryMathematicalMorphology/OpeningBinaryImage,Opening A
    Binary Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_Clone)
    SetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_SetForegroundValue)
    GetForegroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_GetForegroundValue)
    SetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_GetBackgroundValue)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3)
itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__ = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__
itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_cast = _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def binary_morphological_opening_image_filter(*args, **kwargs):
    """Procedural interface for BinaryMorphologicalOpeningImageFilter"""
    import itk
    instance = itk.BinaryMorphologicalOpeningImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def binary_morphological_opening_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.BinaryMorphologicalOpeningImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.BinaryMorphologicalOpeningImageFilter.values()[0]
    else:
        filter_object = itk.BinaryMorphologicalOpeningImageFilter

    binary_morphological_opening_image_filter.__doc__ = filter_object.__doc__
    binary_morphological_opening_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    binary_morphological_opening_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.BinaryMorphologicalOpeningImageFilter, itkTemplate.itkTemplate):
        binary_morphological_opening_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        binary_morphological_opening_image_filter.__doc__ += "\n"
        binary_morphological_opening_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        binary_morphological_opening_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



