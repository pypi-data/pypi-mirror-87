# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTernaryMagnitudeImageFilterPython
else:
    import _itkTernaryMagnitudeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTernaryMagnitudeImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTernaryMagnitudeImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_New():
    return itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass.New()

class itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_swigregister(itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass)
itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass___New_orig__
itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass_cast


def itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_New():
    return itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass.New()

class itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_swigregister(itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass)
itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass___New_orig__
itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass_cast


def itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_New():
    return itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass.New()

class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_swigregister(itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass)
itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass_cast


def itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_New():
    return itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass.New()

class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_swigregister(itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass)
itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass_cast


def itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_New():
    return itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass.New()

class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_swigregister(itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass)
itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass___New_orig__
itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass_cast


def itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_New():
    return itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass.New()

class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_swigregister(itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass)
itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass___New_orig__
itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass_cast


def itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_New():
    return itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass.New()

class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_swigregister(itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass)
itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass_cast


def itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_New():
    return itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass.New()

class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_swigregister(itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass)
itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass_cast


def itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_New():
    return itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass.New()

class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_swigregister(itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass)
itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass_cast


def itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_New():
    return itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass.New()

class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_Clone)
    SetInput1 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput1)
    SetInput2 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput2)
    SetInput3 = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SetInput3)
    GetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_GetFunctor)
    SetFunctor = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SetFunctor)
    SameDimensionCheck1 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck1
    
    SameDimensionCheck2 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck2
    
    SameDimensionCheck3 = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_SameDimensionCheck3
    
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_swigregister(itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass)
itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass___New_orig__
itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass_cast


def itkTernaryMagnitudeImageFilterID2ID2ID2ID2_New():
    return itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New()

class itkTernaryMagnitudeImageFilterID2ID2ID2ID2(itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID2ID2ID2ID2
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID2ID2ID2ID2

        Create a new object of the class itkTernaryMagnitudeImageFilterID2ID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID2ID2ID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID2ID2ID2ID2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_swigregister(itkTernaryMagnitudeImageFilterID2ID2ID2ID2)
itkTernaryMagnitudeImageFilterID2ID2ID2ID2___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2___New_orig__
itkTernaryMagnitudeImageFilterID2ID2ID2ID2_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID2ID2ID2ID2_cast


def itkTernaryMagnitudeImageFilterID3ID3ID3ID3_New():
    return itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New()

class itkTernaryMagnitudeImageFilterID3ID3ID3ID3(itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterID3ID3ID3ID3
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterID3ID3ID3ID3

        Create a new object of the class itkTernaryMagnitudeImageFilterID3ID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterID3ID3ID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterID3ID3ID3ID3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_swigregister(itkTernaryMagnitudeImageFilterID3ID3ID3ID3)
itkTernaryMagnitudeImageFilterID3ID3ID3ID3___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3___New_orig__
itkTernaryMagnitudeImageFilterID3ID3ID3ID3_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterID3ID3ID3ID3_cast


def itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_New():
    return itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New()

class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2(itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF2IF2IF2IF2
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF2IF2IF2IF2

        Create a new object of the class itkTernaryMagnitudeImageFilterIF2IF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF2IF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF2IF2IF2IF2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_swigregister(itkTernaryMagnitudeImageFilterIF2IF2IF2IF2)
itkTernaryMagnitudeImageFilterIF2IF2IF2IF2___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2___New_orig__
itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF2IF2IF2IF2_cast


def itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_New():
    return itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New()

class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3(itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIF3IF3IF3IF3
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIF3IF3IF3IF3

        Create a new object of the class itkTernaryMagnitudeImageFilterIF3IF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIF3IF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIF3IF3IF3IF3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_swigregister(itkTernaryMagnitudeImageFilterIF3IF3IF3IF3)
itkTernaryMagnitudeImageFilterIF3IF3IF3IF3___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3___New_orig__
itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIF3IF3IF3IF3_cast


def itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_New():
    return itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New()

class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2(itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2

        Create a new object of the class itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_swigregister(itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2)
itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2___New_orig__
itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS2ISS2ISS2ISS2_cast


def itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_New():
    return itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New()

class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3(itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3

        Create a new object of the class itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_swigregister(itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3)
itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3___New_orig__
itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterISS3ISS3ISS3ISS3_cast


def itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_New():
    return itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New()

class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2(itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_swigregister(itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2)
itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2___New_orig__
itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC2IUC2IUC2IUC2_cast


def itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_New():
    return itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New()

class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3(itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3

        Create a new object of the class itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_swigregister(itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3)
itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3___New_orig__
itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUC3IUC3IUC3IUC3_cast


def itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_New():
    return itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New()

class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2(itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_swigregister(itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2)
itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2___New_orig__
itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS2IUS2IUS2IUS2_cast


def itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_New():
    return itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New()

class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3(itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Superclass):
    r"""


    Compute the pixel-wise magnitude of three images.

    This class is templated over the types of the three input images and
    the type of the output image. Numeric conversions (castings) are done
    by the C++ defaults. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeImageFilterPython.delete_itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3

        Create a new object of the class itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3 in _itkTernaryMagnitudeImageFilterPython:
_itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_swigregister(itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3)
itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3___New_orig__ = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3___New_orig__
itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_cast = _itkTernaryMagnitudeImageFilterPython.itkTernaryMagnitudeImageFilterIUS3IUS3IUS3IUS3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def ternary_functor_image_filter(*args, **kwargs):
    """Procedural interface for TernaryFunctorImageFilter"""
    import itk
    instance = itk.TernaryFunctorImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def ternary_functor_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TernaryFunctorImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TernaryFunctorImageFilter.values()[0]
    else:
        filter_object = itk.TernaryFunctorImageFilter

    ternary_functor_image_filter.__doc__ = filter_object.__doc__
    ternary_functor_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    ternary_functor_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TernaryFunctorImageFilter, itkTemplate.itkTemplate):
        ternary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        ternary_functor_image_filter.__doc__ += "\n"
        ternary_functor_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        ternary_functor_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def ternary_magnitude_image_filter(*args, **kwargs):
    """Procedural interface for TernaryMagnitudeImageFilter"""
    import itk
    instance = itk.TernaryMagnitudeImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def ternary_magnitude_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.TernaryMagnitudeImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.TernaryMagnitudeImageFilter.values()[0]
    else:
        filter_object = itk.TernaryMagnitudeImageFilter

    ternary_magnitude_image_filter.__doc__ = filter_object.__doc__
    ternary_magnitude_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    ternary_magnitude_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.TernaryMagnitudeImageFilter, itkTemplate.itkTemplate):
        ternary_magnitude_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        ternary_magnitude_image_filter.__doc__ += "\n"
        ternary_magnitude_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        ternary_magnitude_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



