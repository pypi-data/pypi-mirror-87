# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCyclicShiftImageFilterPython
else:
    import _itkCyclicShiftImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkCyclicShiftImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkCyclicShiftImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkCyclicShiftImageFilterICF2ICF2_New():
    return itkCyclicShiftImageFilterICF2ICF2.New()

class itkCyclicShiftImageFilterICF2ICF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICF2ICF2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICF2ICF2

        Create a new object of the class itkCyclicShiftImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICF2ICF2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_swigregister(itkCyclicShiftImageFilterICF2ICF2)
itkCyclicShiftImageFilterICF2ICF2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2___New_orig__
itkCyclicShiftImageFilterICF2ICF2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2_cast


def itkCyclicShiftImageFilterICF3ICF3_New():
    return itkCyclicShiftImageFilterICF3ICF3.New()

class itkCyclicShiftImageFilterICF3ICF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICF3ICF3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICF3ICF3

        Create a new object of the class itkCyclicShiftImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICF3ICF3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_swigregister(itkCyclicShiftImageFilterICF3ICF3)
itkCyclicShiftImageFilterICF3ICF3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3___New_orig__
itkCyclicShiftImageFilterICF3ICF3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3_cast


def itkCyclicShiftImageFilterICVF22ICVF22_New():
    return itkCyclicShiftImageFilterICVF22ICVF22.New()

class itkCyclicShiftImageFilterICVF22ICVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF22ICVF22

        Create a new object of the class itkCyclicShiftImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF22ICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF22ICVF22 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_swigregister(itkCyclicShiftImageFilterICVF22ICVF22)
itkCyclicShiftImageFilterICVF22ICVF22___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22___New_orig__
itkCyclicShiftImageFilterICVF22ICVF22_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22_cast


def itkCyclicShiftImageFilterICVF23ICVF23_New():
    return itkCyclicShiftImageFilterICVF23ICVF23.New()

class itkCyclicShiftImageFilterICVF23ICVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF23ICVF23

        Create a new object of the class itkCyclicShiftImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF23ICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF23ICVF23 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_swigregister(itkCyclicShiftImageFilterICVF23ICVF23)
itkCyclicShiftImageFilterICVF23ICVF23___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23___New_orig__
itkCyclicShiftImageFilterICVF23ICVF23_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23_cast


def itkCyclicShiftImageFilterICVF32ICVF32_New():
    return itkCyclicShiftImageFilterICVF32ICVF32.New()

class itkCyclicShiftImageFilterICVF32ICVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF32ICVF32

        Create a new object of the class itkCyclicShiftImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF32ICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF32ICVF32 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_swigregister(itkCyclicShiftImageFilterICVF32ICVF32)
itkCyclicShiftImageFilterICVF32ICVF32___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32___New_orig__
itkCyclicShiftImageFilterICVF32ICVF32_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32_cast


def itkCyclicShiftImageFilterICVF33ICVF33_New():
    return itkCyclicShiftImageFilterICVF33ICVF33.New()

class itkCyclicShiftImageFilterICVF33ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF33ICVF33

        Create a new object of the class itkCyclicShiftImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF33ICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF33ICVF33 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_swigregister(itkCyclicShiftImageFilterICVF33ICVF33)
itkCyclicShiftImageFilterICVF33ICVF33___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33___New_orig__
itkCyclicShiftImageFilterICVF33ICVF33_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33_cast


def itkCyclicShiftImageFilterICVF42ICVF42_New():
    return itkCyclicShiftImageFilterICVF42ICVF42.New()

class itkCyclicShiftImageFilterICVF42ICVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF42ICVF42

        Create a new object of the class itkCyclicShiftImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF42ICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF42ICVF42 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_swigregister(itkCyclicShiftImageFilterICVF42ICVF42)
itkCyclicShiftImageFilterICVF42ICVF42___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42___New_orig__
itkCyclicShiftImageFilterICVF42ICVF42_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42_cast


def itkCyclicShiftImageFilterICVF43ICVF43_New():
    return itkCyclicShiftImageFilterICVF43ICVF43.New()

class itkCyclicShiftImageFilterICVF43ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterICVF43ICVF43

        Create a new object of the class itkCyclicShiftImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterICVF43ICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterICVF43ICVF43 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_swigregister(itkCyclicShiftImageFilterICVF43ICVF43)
itkCyclicShiftImageFilterICVF43ICVF43___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43___New_orig__
itkCyclicShiftImageFilterICVF43ICVF43_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43_cast


def itkCyclicShiftImageFilterID2ID2_New():
    return itkCyclicShiftImageFilterID2ID2.New()

class itkCyclicShiftImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterID2ID2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterID2ID2

        Create a new object of the class itkCyclicShiftImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterID2ID2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterID2ID2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_swigregister(itkCyclicShiftImageFilterID2ID2)
itkCyclicShiftImageFilterID2ID2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2___New_orig__
itkCyclicShiftImageFilterID2ID2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2_cast


def itkCyclicShiftImageFilterID3ID3_New():
    return itkCyclicShiftImageFilterID3ID3.New()

class itkCyclicShiftImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterID3ID3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterID3ID3

        Create a new object of the class itkCyclicShiftImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterID3ID3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterID3ID3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_swigregister(itkCyclicShiftImageFilterID3ID3)
itkCyclicShiftImageFilterID3ID3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3___New_orig__
itkCyclicShiftImageFilterID3ID3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3_cast


def itkCyclicShiftImageFilterIF2IF2_New():
    return itkCyclicShiftImageFilterIF2IF2.New()

class itkCyclicShiftImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIF2IF2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIF2IF2

        Create a new object of the class itkCyclicShiftImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIF2IF2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_swigregister(itkCyclicShiftImageFilterIF2IF2)
itkCyclicShiftImageFilterIF2IF2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2___New_orig__
itkCyclicShiftImageFilterIF2IF2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2_cast


def itkCyclicShiftImageFilterIF3IF3_New():
    return itkCyclicShiftImageFilterIF3IF3.New()

class itkCyclicShiftImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIF3IF3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIF3IF3

        Create a new object of the class itkCyclicShiftImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIF3IF3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_swigregister(itkCyclicShiftImageFilterIF3IF3)
itkCyclicShiftImageFilterIF3IF3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3___New_orig__
itkCyclicShiftImageFilterIF3IF3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3_cast


def itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_New():
    return itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2.New()

class itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_swigregister(itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2)
itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2___New_orig__
itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2_cast


def itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_New():
    return itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3.New()

class itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_swigregister(itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3)
itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3___New_orig__
itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3_cast


def itkCyclicShiftImageFilterIRGBUC2IRGBUC2_New():
    return itkCyclicShiftImageFilterIRGBUC2IRGBUC2.New()

class itkCyclicShiftImageFilterIRGBUC2IRGBUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkCyclicShiftImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIRGBUC2IRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIRGBUC2IRGBUC2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_swigregister(itkCyclicShiftImageFilterIRGBUC2IRGBUC2)
itkCyclicShiftImageFilterIRGBUC2IRGBUC2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2___New_orig__
itkCyclicShiftImageFilterIRGBUC2IRGBUC2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2_cast


def itkCyclicShiftImageFilterIRGBUC3IRGBUC3_New():
    return itkCyclicShiftImageFilterIRGBUC3IRGBUC3.New()

class itkCyclicShiftImageFilterIRGBUC3IRGBUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkCyclicShiftImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIRGBUC3IRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIRGBUC3IRGBUC3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_swigregister(itkCyclicShiftImageFilterIRGBUC3IRGBUC3)
itkCyclicShiftImageFilterIRGBUC3IRGBUC3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3___New_orig__
itkCyclicShiftImageFilterIRGBUC3IRGBUC3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3_cast


def itkCyclicShiftImageFilterISS2ISS2_New():
    return itkCyclicShiftImageFilterISS2ISS2.New()

class itkCyclicShiftImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterISS2ISS2

        Create a new object of the class itkCyclicShiftImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterISS2ISS2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_swigregister(itkCyclicShiftImageFilterISS2ISS2)
itkCyclicShiftImageFilterISS2ISS2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2___New_orig__
itkCyclicShiftImageFilterISS2ISS2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2_cast


def itkCyclicShiftImageFilterISS3ISS3_New():
    return itkCyclicShiftImageFilterISS3ISS3.New()

class itkCyclicShiftImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterISS3ISS3

        Create a new object of the class itkCyclicShiftImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterISS3ISS3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_swigregister(itkCyclicShiftImageFilterISS3ISS3)
itkCyclicShiftImageFilterISS3ISS3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3___New_orig__
itkCyclicShiftImageFilterISS3ISS3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3_cast


def itkCyclicShiftImageFilterIUC2IUC2_New():
    return itkCyclicShiftImageFilterIUC2IUC2.New()

class itkCyclicShiftImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIUC2IUC2

        Create a new object of the class itkCyclicShiftImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIUC2IUC2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_swigregister(itkCyclicShiftImageFilterIUC2IUC2)
itkCyclicShiftImageFilterIUC2IUC2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2___New_orig__
itkCyclicShiftImageFilterIUC2IUC2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2_cast


def itkCyclicShiftImageFilterIUC3IUC3_New():
    return itkCyclicShiftImageFilterIUC3IUC3.New()

class itkCyclicShiftImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIUC3IUC3

        Create a new object of the class itkCyclicShiftImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIUC3IUC3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_swigregister(itkCyclicShiftImageFilterIUC3IUC3)
itkCyclicShiftImageFilterIUC3IUC3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3___New_orig__
itkCyclicShiftImageFilterIUC3IUC3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3_cast


def itkCyclicShiftImageFilterIUS2IUS2_New():
    return itkCyclicShiftImageFilterIUS2IUS2.New()

class itkCyclicShiftImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIUS2IUS2

        Create a new object of the class itkCyclicShiftImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIUS2IUS2 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_swigregister(itkCyclicShiftImageFilterIUS2IUS2)
itkCyclicShiftImageFilterIUS2IUS2___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2___New_orig__
itkCyclicShiftImageFilterIUS2IUS2_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2_cast


def itkCyclicShiftImageFilterIUS3IUS3_New():
    return itkCyclicShiftImageFilterIUS3IUS3.New()

class itkCyclicShiftImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIUS3IUS3

        Create a new object of the class itkCyclicShiftImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIUS3IUS3 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_swigregister(itkCyclicShiftImageFilterIUS3IUS3)
itkCyclicShiftImageFilterIUS3IUS3___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3___New_orig__
itkCyclicShiftImageFilterIUS3IUS3_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3_cast


def itkCyclicShiftImageFilterIVF22IVF22_New():
    return itkCyclicShiftImageFilterIVF22IVF22.New()

class itkCyclicShiftImageFilterIVF22IVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF22IVF22

        Create a new object of the class itkCyclicShiftImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF22IVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF22IVF22 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_swigregister(itkCyclicShiftImageFilterIVF22IVF22)
itkCyclicShiftImageFilterIVF22IVF22___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22___New_orig__
itkCyclicShiftImageFilterIVF22IVF22_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22_cast


def itkCyclicShiftImageFilterIVF23IVF23_New():
    return itkCyclicShiftImageFilterIVF23IVF23.New()

class itkCyclicShiftImageFilterIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF23IVF23

        Create a new object of the class itkCyclicShiftImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF23IVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF23IVF23 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_swigregister(itkCyclicShiftImageFilterIVF23IVF23)
itkCyclicShiftImageFilterIVF23IVF23___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23___New_orig__
itkCyclicShiftImageFilterIVF23IVF23_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23_cast


def itkCyclicShiftImageFilterIVF32IVF32_New():
    return itkCyclicShiftImageFilterIVF32IVF32.New()

class itkCyclicShiftImageFilterIVF32IVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF32IVF32

        Create a new object of the class itkCyclicShiftImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF32IVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF32IVF32 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_swigregister(itkCyclicShiftImageFilterIVF32IVF32)
itkCyclicShiftImageFilterIVF32IVF32___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32___New_orig__
itkCyclicShiftImageFilterIVF32IVF32_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32_cast


def itkCyclicShiftImageFilterIVF33IVF33_New():
    return itkCyclicShiftImageFilterIVF33IVF33.New()

class itkCyclicShiftImageFilterIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF33IVF33

        Create a new object of the class itkCyclicShiftImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF33IVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF33IVF33 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_swigregister(itkCyclicShiftImageFilterIVF33IVF33)
itkCyclicShiftImageFilterIVF33IVF33___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33___New_orig__
itkCyclicShiftImageFilterIVF33IVF33_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33_cast


def itkCyclicShiftImageFilterIVF42IVF42_New():
    return itkCyclicShiftImageFilterIVF42IVF42.New()

class itkCyclicShiftImageFilterIVF42IVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF42IVF42

        Create a new object of the class itkCyclicShiftImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF42IVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF42IVF42 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_swigregister(itkCyclicShiftImageFilterIVF42IVF42)
itkCyclicShiftImageFilterIVF42IVF42___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42___New_orig__
itkCyclicShiftImageFilterIVF42IVF42_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42_cast


def itkCyclicShiftImageFilterIVF43IVF43_New():
    return itkCyclicShiftImageFilterIVF43IVF43.New()

class itkCyclicShiftImageFilterIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""


    Perform a cyclic spatial shift of image intensities on the image grid.

    This filter supports arbitrary cyclic shifts of pixel values on the
    image grid. If the Shift is set to [xOff, yOff], the value of the
    pixel at [0, 0] in the input image will be the value of the pixel in
    the output image at index [xOff modulo xSize, yOff modulo ySize] where
    xSize and ySize are the sizes of the image in the x and y dimensions,
    respectively. If a pixel value is moved across a boundary, the pixel
    value is wrapped around that boundary. For the value of the pixel at
    [0, 0] in the input image will be the value of the pixel in the output
    image at index [13, 7].

    Negative Shifts are supported. This filter also works with images
    whose largest possible region starts at a non-zero index. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_Clone)
    SetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_SetShift)
    GetShift = _swig_new_instance_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_GetShift)
    __swig_destroy__ = _itkCyclicShiftImageFilterPython.delete_itkCyclicShiftImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_cast)

    def New(*args, **kargs):
        """New() -> itkCyclicShiftImageFilterIVF43IVF43

        Create a new object of the class itkCyclicShiftImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCyclicShiftImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCyclicShiftImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCyclicShiftImageFilterIVF43IVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCyclicShiftImageFilterIVF43IVF43 in _itkCyclicShiftImageFilterPython:
_itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_swigregister(itkCyclicShiftImageFilterIVF43IVF43)
itkCyclicShiftImageFilterIVF43IVF43___New_orig__ = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43___New_orig__
itkCyclicShiftImageFilterIVF43IVF43_cast = _itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def cyclic_shift_image_filter(*args, **kwargs):
    """Procedural interface for CyclicShiftImageFilter"""
    import itk
    instance = itk.CyclicShiftImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def cyclic_shift_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.CyclicShiftImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.CyclicShiftImageFilter.values()[0]
    else:
        filter_object = itk.CyclicShiftImageFilter

    cyclic_shift_image_filter.__doc__ = filter_object.__doc__
    cyclic_shift_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    cyclic_shift_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.CyclicShiftImageFilter, itkTemplate.itkTemplate):
        cyclic_shift_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        cyclic_shift_image_filter.__doc__ += "\n"
        cyclic_shift_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        cyclic_shift_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



