# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKQuadEdgeMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkQuadEdgeMeshPointPython
else:
    import _itkQuadEdgeMeshPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkQuadEdgeMeshPointPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkQuadEdgeMeshPointPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
class itkQuadEdgeMeshPointF2GQEULULBBT(itk.itkPointPython.itkPointF2):
    r"""


    Wrapper around a itk::Point in order to add a reference to an entry in
    the edge ring. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF2GQEULULBBT

    def __init__(self, *args):
        r"""
        __init__(itkQuadEdgeMeshPointF2GQEULULBBT self) -> itkQuadEdgeMeshPointF2GQEULULBBT
        __init__(itkQuadEdgeMeshPointF2GQEULULBBT self, itkQuadEdgeMeshPointF2GQEULULBBT arg0) -> itkQuadEdgeMeshPointF2GQEULULBBT
        __init__(itkQuadEdgeMeshPointF2GQEULULBBT self, itkPointF2 r) -> itkQuadEdgeMeshPointF2GQEULULBBT
        __init__(itkQuadEdgeMeshPointF2GQEULULBBT self, float const * r) -> itkQuadEdgeMeshPointF2GQEULULBBT


        Wrapper around a itk::Point in order to add a reference to an entry in
        the edge ring. 
        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_swiginit(self, _itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF2GQEULULBBT(*args))
    SetEdge = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_SetEdge)
    SetPoint = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_SetPoint)
    GetEdge = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_GetEdge)
    IsInternal = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_IsInternal)
    GetValence = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_GetValence)

# Register itkQuadEdgeMeshPointF2GQEULULBBT in _itkQuadEdgeMeshPointPython:
_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULULBBT_swigregister(itkQuadEdgeMeshPointF2GQEULULBBT)

class itkQuadEdgeMeshPointF3GQEULULBBT(itk.itkPointPython.itkPointF3):
    r"""


    Wrapper around a itk::Point in order to add a reference to an entry in
    the edge ring. 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF3GQEULULBBT

    def __init__(self, *args):
        r"""
        __init__(itkQuadEdgeMeshPointF3GQEULULBBT self) -> itkQuadEdgeMeshPointF3GQEULULBBT
        __init__(itkQuadEdgeMeshPointF3GQEULULBBT self, itkQuadEdgeMeshPointF3GQEULULBBT arg0) -> itkQuadEdgeMeshPointF3GQEULULBBT
        __init__(itkQuadEdgeMeshPointF3GQEULULBBT self, itkPointF3 r) -> itkQuadEdgeMeshPointF3GQEULULBBT
        __init__(itkQuadEdgeMeshPointF3GQEULULBBT self, float const * r) -> itkQuadEdgeMeshPointF3GQEULULBBT


        Wrapper around a itk::Point in order to add a reference to an entry in
        the edge ring. 
        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_swiginit(self, _itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF3GQEULULBBT(*args))
    SetEdge = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_SetEdge)
    SetPoint = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_SetPoint)
    GetEdge = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_GetEdge)
    IsInternal = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_IsInternal)
    GetValence = _swig_new_instance_method(_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_GetValence)

# Register itkQuadEdgeMeshPointF3GQEULULBBT in _itkQuadEdgeMeshPointPython:
_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULULBBT_swigregister(itkQuadEdgeMeshPointF3GQEULULBBT)



