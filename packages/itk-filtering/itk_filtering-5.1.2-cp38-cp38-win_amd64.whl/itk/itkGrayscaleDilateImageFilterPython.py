# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleDilateImageFilterPython
else:
    import _itkGrayscaleDilateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkGrayscaleDilateImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkGrayscaleDilateImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import itk.ITKCommonBasePython
import itk.pyBasePython
import itk.itkFlatStructuringElementPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkNeighborhoodPython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkIndexPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkGrayscaleDilateImageFilterID2ID2SE2_New():
    return itkGrayscaleDilateImageFilterID2ID2SE2.New()

class itkGrayscaleDilateImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID2ID2SE2
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID2ID2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterID2ID2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterID2ID2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_swigregister(itkGrayscaleDilateImageFilterID2ID2SE2)
itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__
itkGrayscaleDilateImageFilterID2ID2SE2_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_cast


def itkGrayscaleDilateImageFilterID3ID3SE3_New():
    return itkGrayscaleDilateImageFilterID3ID3SE3.New()

class itkGrayscaleDilateImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID3ID3SE3
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID3ID3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterID3ID3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterID3ID3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_swigregister(itkGrayscaleDilateImageFilterID3ID3SE3)
itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__
itkGrayscaleDilateImageFilterID3ID3SE3_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_cast


def itkGrayscaleDilateImageFilterIF2IF2SE2_New():
    return itkGrayscaleDilateImageFilterIF2IF2SE2.New()

class itkGrayscaleDilateImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF2IF2SE2
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF2IF2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIF2IF2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIF2IF2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_swigregister(itkGrayscaleDilateImageFilterIF2IF2SE2)
itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__
itkGrayscaleDilateImageFilterIF2IF2SE2_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_cast


def itkGrayscaleDilateImageFilterIF3IF3SE3_New():
    return itkGrayscaleDilateImageFilterIF3IF3SE3.New()

class itkGrayscaleDilateImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF3IF3SE3
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF3IF3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIF3IF3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIF3IF3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_swigregister(itkGrayscaleDilateImageFilterIF3IF3SE3)
itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__
itkGrayscaleDilateImageFilterIF3IF3SE3_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_cast


def itkGrayscaleDilateImageFilterISS2ISS2SE2_New():
    return itkGrayscaleDilateImageFilterISS2ISS2SE2.New()

class itkGrayscaleDilateImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS2ISS2SE2
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS2ISS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterISS2ISS2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_swigregister(itkGrayscaleDilateImageFilterISS2ISS2SE2)
itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__
itkGrayscaleDilateImageFilterISS2ISS2SE2_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_cast


def itkGrayscaleDilateImageFilterISS3ISS3SE3_New():
    return itkGrayscaleDilateImageFilterISS3ISS3SE3.New()

class itkGrayscaleDilateImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS3ISS3SE3
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS3ISS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterISS3ISS3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_swigregister(itkGrayscaleDilateImageFilterISS3ISS3SE3)
itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__
itkGrayscaleDilateImageFilterISS3ISS3SE3_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_cast


def itkGrayscaleDilateImageFilterIUC2IUC2SE2_New():
    return itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()

class itkGrayscaleDilateImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC2IUC2SE2
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUC2IUC2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_swigregister(itkGrayscaleDilateImageFilterIUC2IUC2SE2)
itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__
itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast


def itkGrayscaleDilateImageFilterIUC3IUC3SE3_New():
    return itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()

class itkGrayscaleDilateImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC3IUC3SE3
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUC3IUC3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_swigregister(itkGrayscaleDilateImageFilterIUC3IUC3SE3)
itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__
itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast


def itkGrayscaleDilateImageFilterIUS2IUS2SE2_New():
    return itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()

class itkGrayscaleDilateImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS2IUS2SE2
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUS2IUS2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_swigregister(itkGrayscaleDilateImageFilterIUS2IUS2SE2)
itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__
itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast


def itkGrayscaleDilateImageFilterIUS3IUS3SE3_New():
    return itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()

class itkGrayscaleDilateImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""


    Grayscale dilation of an image.

    Dilate an image using grayscale morphology. Dilation takes the maximum
    of all the pixels identified by the structuring element.

    The structuring element is assumed to be composed of binary values
    (zero or one). Only elements of the structuring element having values
    > 0 are candidates for affecting the center pixel.

    See:  MorphologyImageFilter, GrayscaleFunctionDilateImageFilter,
    BinaryDilateImageFilter
    {Filtering/MathematicalMorphology/DilateAGrayscaleImage,Dilate A
    Grayscale Image} 
    """

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__)
    Clone = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_Clone)
    SetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetBoundary)
    GetBoundary = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetBoundary)
    SetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetAlgorithm)
    GetAlgorithm = _swig_new_instance_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetAlgorithm)
    AlgorithmType_BASIC = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_BASIC
    
    AlgorithmType_HISTO = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_HISTO
    
    AlgorithmType_ANCHOR = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_ANCHOR
    
    AlgorithmType_VHGW = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_AlgorithmType_VHGW
    
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS3IUS3SE3
    cast = _swig_new_static_method(_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUS3IUS3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_swigregister(itkGrayscaleDilateImageFilterIUS3IUS3SE3)
itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__ = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__
itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast = _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def grayscale_dilate_image_filter(*args, **kwargs):
    """Procedural interface for GrayscaleDilateImageFilter"""
    import itk
    instance = itk.GrayscaleDilateImageFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def grayscale_dilate_image_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.GrayscaleDilateImageFilter, itkTemplate.itkTemplate):
        filter_object = itk.GrayscaleDilateImageFilter.values()[0]
    else:
        filter_object = itk.GrayscaleDilateImageFilter

    grayscale_dilate_image_filter.__doc__ = filter_object.__doc__
    grayscale_dilate_image_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    grayscale_dilate_image_filter.__doc__ += "\n Available Keyword Arguments:\n"
    if isinstance(itk.GrayscaleDilateImageFilter, itkTemplate.itkTemplate):
        grayscale_dilate_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[0]
        grayscale_dilate_image_filter.__doc__ += "\n"
        grayscale_dilate_image_filter.__doc__ += itkHelpers.filter_args(filter_object)[1]
    else:
        grayscale_dilate_image_filter.__doc__ += "".join([
            "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
            for item in dir(filter_object)
            if item.startswith("Set")])



